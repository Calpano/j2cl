goog.module('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ExportedType = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.ExportedTypeNewName$impl');
let NativeBoolean_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeBoolean.$Overlay$impl');
let NativeNull_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeNull.$Overlay$impl');
let NativeNumber_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeNumber.$Overlay$impl');
let NativeStar_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeStar.$Overlay$impl');
let NativeString_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeString.$Overlay$impl');
let $Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeType.$Overlay$impl');
let NativeUndefined_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeUndefined.$Overlay$impl');
let NativeVoid_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeVoid.$Overlay$impl');
let NativeWildcard_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings.NativeWildcard.$Overlay$impl');
let Byte = goog.forwardDeclare('java.lang.Byte$impl');
let Character = goog.forwardDeclare('java.lang.Character$impl');
let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');
let Float = goog.forwardDeclare('java.lang.Float$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Long = goog.forwardDeclare('java.lang.Long$impl');
let Short = goog.forwardDeclare('java.lang.Short$impl');
let Comparator = goog.forwardDeclare('java.util.Comparator$impl');
let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');

class JsDocTypeMappings extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!JsDocTypeMappings} */
  static $create__() {
    JsDocTypeMappings.$clinit();
    let $instance = new JsDocTypeMappings();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_jsdoctypemappings_JsDocTypeMappings__() {
    this.$ctor__java_lang_Object__();
  }
  /** @return {Comparator<?>} */
  m_returnComparatorWildcard___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {(Comparable|boolean|number|string)} */
  m_returnComparable___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?string} */
  m_returnJavaLangString___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {*} */
  m_returnJavaLangObject___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Byte} */
  m_returnJavaLangByte___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Short} */
  m_returnJavaLangShort___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Integer} */
  m_returnJavaLangInteger___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Long} */
  m_returnJavaLangLong___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Float} */
  m_returnJavaLangFloat___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?number} */
  m_returnJavaLangDouble___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Character} */
  m_returnJavaLangCharacter___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?boolean} */
  m_returnJavaLangBoolean___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {number} */
  m_returnByte___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0;
  }
  /** @return {number} */
  m_returnShort___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0;
  }
  /** @return {number} */
  m_returnInt___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0;
  }
  /** @return {!$Long} */
  m_returnLong___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return $Long.fromInt(0);
  }
  /** @return {number} */
  m_returnFloat___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0;
  }
  /** @return {number} */
  m_returnDouble___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0;
  }
  /** @return {number} */
  m_returnChar___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return 0 /* '\u0000' */;
  }
  /** @return {boolean} */
  m_returnBoolean___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return false;
  }

  m_returnVoid___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {}
  /** @return {?function():void} */
  m_returnNativeFunction___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {Array} */
  m_returnNativeType___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {ExportedType} */
  m_returnExportedType___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @template MethodTypeParameter @return {MethodTypeParameter} */
  m_returnMethodTypeParameter___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?number} */
  m_returnNativeNumber___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?boolean} */
  m_returnNativeBoolean___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?string} */
  m_returnNativeString___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {null} */
  m_returnNativeNull___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?undefined} */
  m_returnNativeUndefined___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?void} */
  m_returnNativeVoid___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {*} */
  m_returnStar___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }
  /** @return {?} */
  m_returnNativeWildcard___$pp_com_google_j2cl_transpiler_readable_jsdoctypemappings() {
    return null;
  }

  static $clinit() {
    JsDocTypeMappings.$clinit = () => {};
    JsDocTypeMappings.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof JsDocTypeMappings;
  }

  static $loadModules() {
    $Long = goog.module.get('nativebootstrap.Long$impl');
  }
}
$Util.$setClassMetadata(
    JsDocTypeMappings,
    'com.google.j2cl.transpiler.readable.jsdoctypemappings.JsDocTypeMappings');

exports = JsDocTypeMappings;
//# sourceMappingURL=JsDocTypeMappings.js.map

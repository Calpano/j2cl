goog.module('com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nobridgemethods.CharSet.$1$impl');

class CharSet extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!CharSet} */
  static $create__() {
    CharSet.$clinit();
    let $instance = new CharSet();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet__() {
    this.$ctor__java_lang_Object__();
  }

  static m_main__arrayOf_java_lang_String(/** Array<?string> */ args) {
    CharSet.$clinit();
    let treeMap = $1.$create__();
  }

  static $clinit() {
    CharSet.$clinit = () => {};
    CharSet.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof CharSet;
  }

  static $loadModules() {
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.nobridgemethods.CharSet.$1$impl');
  }
}
$Util.$setClassMetadata(
    CharSet, 'com.google.j2cl.transpiler.readable.nobridgemethods.CharSet');

exports = CharSet;
//# sourceMappingURL=CharSet.js.map
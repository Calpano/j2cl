goog.module('com.google.j2cl.transpiler.readable.methodreferences.MethodReferences.Producer.$LambdaAdaptor$impl');

const Producer = goog.require('com.google.j2cl.transpiler.readable.methodreferences.MethodReferences.Producer$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {Producer<T>}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function():T */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function():T}*/
    this.f_fn__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$LambdaAdaptor;
    this.$ctor__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$LambdaAdaptor__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$JsFunction(
        fn);
  }

  $ctor__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$LambdaAdaptor__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$JsFunction(
      /** ?function():T */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$LambdaAdaptor =
        fn;
  }
  /** @override @return {T} */
  m_produce__() {
    let /** ?function():T */ $function;
    return (
        $function =
            this.f_fn__com_google_j2cl_transpiler_readable_methodreferences_MethodReferences_Producer_$LambdaAdaptor,
        $function());
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    $LambdaAdaptor,
    'com.google.j2cl.transpiler.readable.methodreferences.MethodReferences$Producer$$LambdaAdaptor');
Producer.$markImplementor($LambdaAdaptor);

exports = $LambdaAdaptor;
//# sourceMappingURL=MethodReferences$Producer$$LambdaAdaptor.js.map

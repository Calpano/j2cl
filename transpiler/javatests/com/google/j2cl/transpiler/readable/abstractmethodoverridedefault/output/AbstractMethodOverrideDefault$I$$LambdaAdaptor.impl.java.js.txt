goog.module('com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault.I.$LambdaAdaptor$impl');

const I = goog.require('com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault.I$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @implements {I}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function():void */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function():void}*/
    this.f_$$fn__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$LambdaAdaptor;
    this.$ctor__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$LambdaAdaptor__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$JsFunction(
        fn);
  }

  $ctor__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$LambdaAdaptor__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$JsFunction(
      /** ?function():void */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_$$fn__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$LambdaAdaptor =
        fn;
  }

  m_foo__() {
    {
      let $function =
          this.f_$$fn__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I_$LambdaAdaptor;
      $function();
    }
  }
  /** @override */
  // Default method forwarding stub.
  m_bar__() {
    I.m_bar__$default__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_I(
        this);
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
    I.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    $LambdaAdaptor,
    'com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault$I$$LambdaAdaptor');

I.$markImplementor($LambdaAdaptor);

exports = $LambdaAdaptor;
//# sourceMappingURL=AbstractMethodOverrideDefault$I$$LambdaAdaptor.js.map
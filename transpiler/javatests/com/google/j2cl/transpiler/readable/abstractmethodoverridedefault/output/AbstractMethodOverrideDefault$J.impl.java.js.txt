goog.module('com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault.J$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault.J.$LambdaAdaptor$impl');

/**
 * @interface
 */
class J {
  /** @abstract */
  m_foo__() {}
  /** @abstract */
  m_bar__() {}
  /** @return {J} */
  static $adapt(/** ?function():void */ fn) {
    J.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static m_foo__$default__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_J(
      /** !J */ $thisArg) {
    J.$clinit();
  }

  static $clinit() {
    J.$clinit = () => {};
    J.$loadModules();
  }

  static $markImplementor(/** Function*/ ctor) {
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_J =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_abstractmethodoverridedefault_AbstractMethodOverrideDefault_J;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault.J.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    J,
    'com.google.j2cl.transpiler.readable.abstractmethodoverridedefault.AbstractMethodOverrideDefault$J');

J.$markImplementor(/** @type {Function} */ (J));

exports = J;
//# sourceMappingURL=AbstractMethodOverrideDefault$J.js.map
goog.module('com.google.j2cl.transpiler.readable.packageprivatemethods.package2.SubChild$impl');

const Child = goog.require('com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

class SubChild extends Child {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!SubChild} */
  static $create__() {
    SubChild.$clinit();
    let $instance = new SubChild();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_packageprivatemethods_package2_SubChild__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_packageprivatemethods_package2_SubChild__() {
    this.$ctor__com_google_j2cl_transpiler_readable_packageprivatemethods_package1_Child__();
  }
  /** @override @return {number} */
  m_foo__int(/** number */ a) {
    return a + 3;
  }

  static $clinit() {
    SubChild.$clinit = () => {};
    SubChild.$loadModules();
    Child.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof SubChild;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    SubChild,
    'com.google.j2cl.transpiler.readable.packageprivatemethods.package2.SubChild');

exports = SubChild;
//# sourceMappingURL=SubChild.js.map

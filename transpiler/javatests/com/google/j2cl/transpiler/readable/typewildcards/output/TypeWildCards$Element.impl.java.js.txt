goog.module('com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards.Element$impl');

const HasKey = goog.require('com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards.HasKey$impl');
const IntegerSupplier = goog.require('com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards.IntegerSupplier$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let TypeWildCards = goog.forwardDeclare('com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards$impl');

/**
 * @abstract
 * @implements {HasKey}
 * @implements {IntegerSupplier}
 */
class Element extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {TypeWildCards}*/
    this.$outer_this__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards_Element;
  }

  $ctor__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards_Element__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards(
      /** TypeWildCards */ $outer_this) {
    this.$outer_this__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards_Element =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  static $clinit() {
    Element.$clinit = () => {};
    Element.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Element;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    Element,
    'com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards$Element');
HasKey.$markImplementor(Element);
IntegerSupplier.$markImplementor(Element);

exports = Element;
//# sourceMappingURL=TypeWildCards$Element.js.map

goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.S$impl');

const R = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.R$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('com.google.j2cl.transpiler.readable.bridgejsmethod.Main$impl');

class S extends R {
  /** @protected */
  constructor() {
    super();
    /**@type {Main}*/
    this.$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S;
  }
  /** @return {!S} */
  static $create__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      /** Main */ $outer_this) {
    S.$clinit();
    let $instance = new S();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
            $outer_this);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      /** Main */ $outer_this) {
    this.$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_S =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_R__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
        $outer_this);
  }

  static $clinit() {
    S.$clinit = () => {};
    S.$loadModules();
    R.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof S;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    S, 'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$S');

exports = S;
//# sourceMappingURL=Main$S.js.map

goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.B$impl');

const A = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.A$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @extends {A<?string>}
 */
class B extends A {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!B} */
  static $create__() {
    B.$clinit();
    let $instance = new B();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_B__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_B__() {
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_A__();
  }
  /** @return {?string} */
  m_fun__java_lang_String(/** ?string */ s) {
    return s;
  }

  bar(/** ?string */ s) {}
  // Bridge method.
  /** @override */
  m_bar__java_lang_Object(/** * */ arg0) {
    this.bar(/**@type {?string}*/ ($Casts.$to(arg0, j_l_String)));
  }
  // Bridge method.
  /** @override @return {?string} */
  fun(/** * */ arg0) {
    return this.m_fun__java_lang_String(
        /**@type {?string}*/ ($Casts.$to(arg0, j_l_String)));
  }

  static $clinit() {
    B.$clinit = () => {};
    B.$loadModules();
    A.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof B;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata(
    B, 'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$B');

exports = B;
//# sourceMappingURL=Main$B.js.map

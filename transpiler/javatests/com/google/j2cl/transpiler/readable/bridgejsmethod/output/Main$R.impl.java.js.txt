goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.R$impl');

const Q = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.Q$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('com.google.j2cl.transpiler.readable.bridgejsmethod.Main$impl');

/**
 * @abstract
 */
class R extends Q {
  /** @protected */
  constructor() {
    super();
    /**@type {Main}*/
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_R;
  }

  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_R__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      /** Main */ $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_R =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_Q__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
        $outer_this);
  }
  /** @override @return {?string} */
  getKey() {
    return null;
  }

  static $clinit() {
    R.$clinit = () => {};
    R.$loadModules();
    Q.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof R;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    R, 'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$R');

exports = R;
//# sourceMappingURL=Main$R.js.map

goog.module('com.google.j2cl.transpiler.readable.deprecated.DeprecatedExample.DeprecatedInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.deprecated.DeprecatedExample.DeprecatedInterface.$LambdaAdaptor$impl');

/**
 * @interface
 * @deprecated
 */
class DeprecatedInterface {
  /** @abstract @deprecated */
  doAThing(/** number */ anInt) {}
  /** @return {DeprecatedInterface} */
  static $adapt(/** ?function(number):void */ fn) {
    DeprecatedInterface.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static $clinit() {
    DeprecatedInterface.$clinit = () => {};
    DeprecatedInterface.$loadModules();
  }

  static $markImplementor(/** Function */ ctor) {
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_deprecated_DeprecatedExample_DeprecatedInterface =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_deprecated_DeprecatedExample_DeprecatedInterface;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.deprecated.DeprecatedExample.DeprecatedInterface.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    DeprecatedInterface,
    'com.google.j2cl.transpiler.readable.deprecated.DeprecatedExample$DeprecatedInterface');
DeprecatedInterface.$markImplementor(
    /** @type {Function} */ (DeprecatedInterface));

exports = DeprecatedInterface;
//# sourceMappingURL=DeprecatedExample$DeprecatedInterface.js.map

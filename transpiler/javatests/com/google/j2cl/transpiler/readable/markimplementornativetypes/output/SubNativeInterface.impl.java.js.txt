goog.module('com.google.j2cl.transpiler.readable.markimplementornativetypes.SubNativeInterface$impl');

const RegularInterface = goog.require('com.google.j2cl.transpiler.readable.markimplementornativetypes.RegularInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let MyNativeInterface = goog.forwardDeclare('test.foo.MyNativeInterface');

/**
 * @interface
 * @extends {MyNativeInterface}
 * @extends {RegularInterface}
 */
class SubNativeInterface {
  static $clinit() {
    SubNativeInterface.$clinit = () => {};
    SubNativeInterface.$loadModules();
  }

  static $markImplementor(/** Function */ ctor) {
    RegularInterface.$markImplementor(ctor);
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_markimplementornativetypes_SubNativeInterface =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_markimplementornativetypes_SubNativeInterface;
  }

  static $loadModules() {}
}
SubNativeInterface.$markImplementor(/**@type {Function}*/ (SubNativeInterface));
$Util.$setClassMetadataForInterface(
    SubNativeInterface,
    'com.google.j2cl.transpiler.readable.markimplementornativetypes.SubNativeInterface');

exports = SubNativeInterface;
//# sourceMappingURL=SubNativeInterface.js.map

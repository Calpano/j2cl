goog.module('com.google.j2cl.transpiler.readable.aptgeneratorplugin.Foo$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Dummy = goog.forwardDeclare('com.google.j2cl.transpiler.readable.aptgeneratorplugin.Dummy$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');

class Foo extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!Foo} */
  static $create__() {
    Foo.$clinit();
    let $instance = new Foo();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_aptgeneratorplugin_Foo__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_aptgeneratorplugin_Foo__() {
    this.$ctor__java_lang_Object__();
  }
  /** @override @return {?string} */
  toString() {
    return Class.$get(Dummy).m_getSimpleName__();
  }

  static $clinit() {
    Foo.$clinit = () => {};
    Foo.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Foo;
  }

  static $loadModules() {
    Dummy = goog.module.get(
        'com.google.j2cl.transpiler.readable.aptgeneratorplugin.Dummy$impl');
    Class = goog.module.get('java.lang.Class$impl');
  }
}
$Util.$setClassMetadata(
    Foo, 'com.google.j2cl.transpiler.readable.aptgeneratorplugin.Foo');

exports = Foo;
//# sourceMappingURL=Foo.js.map
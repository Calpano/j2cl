goog.module('com.google.j2cl.transpiler.readable.jsoptional.Main.NonJsTypeSubtype$impl');

const I = goog.require('com.google.j2cl.transpiler.readable.jsoptional.Main.I$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @implements {I<?string>}
 */
class NonJsTypeSubtype extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!NonJsTypeSubtype} */
  static $create__() {
    NonJsTypeSubtype.$clinit();
    let $instance = new NonJsTypeSubtype();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_NonJsTypeSubtype__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_NonJsTypeSubtype__() {
    this.$ctor__java_lang_Object__();
  }
  /** @override */
  m(/** ?string */ t, /** *= */ o) {}

  static $clinit() {
    NonJsTypeSubtype.$clinit = () => {};
    NonJsTypeSubtype.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof NonJsTypeSubtype;
  }

  static $loadModules() {}
}
I.$markImplementor(NonJsTypeSubtype);
$Util.$setClassMetadata(
    NonJsTypeSubtype,
    'com.google.j2cl.transpiler.readable.jsoptional.Main$NonJsTypeSubtype');

exports = NonJsTypeSubtype;
//# sourceMappingURL=Main$NonJsTypeSubtype.js.map

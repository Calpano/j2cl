goog.module('com.google.j2cl.transpiler.readable.simplebridgemethods.Superclass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');

/**
 * @template T
 */
class Superclass extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @template T @return {!Superclass<T>} */
  static $create__() {
    Superclass.$clinit();
    let $instance = new Superclass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplebridgemethods_Superclass__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_simplebridgemethods_Superclass__() {
    this.$ctor__java_lang_Object__();
  }

  m_m1__java_lang_Error(/** T */ t) {}

  static $clinit() {
    Superclass.$clinit = () => {};
    Superclass.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Superclass;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    Superclass,
    'com.google.j2cl.transpiler.readable.simplebridgemethods.Superclass');

exports = Superclass;
//# sourceMappingURL=Superclass.js.map

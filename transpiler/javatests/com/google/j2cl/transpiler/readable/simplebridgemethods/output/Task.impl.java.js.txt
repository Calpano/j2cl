goog.module('com.google.j2cl.transpiler.readable.simplebridgemethods.Task$impl');

const Callable = goog.require('com.google.j2cl.transpiler.readable.simplebridgemethods.Callable$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {Callable<T>}
 */
class Task extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @template T @return {!Task<T>} */
  static $create__() {
    Task.$clinit();
    let $instance = new Task();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplebridgemethods_Task__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_simplebridgemethods_Task__() {
    this.$ctor__java_lang_Object__();
  }
  /** @override */
  m_call__java_lang_Object(/** T */ t) {}

  static $clinit() {
    Task.$clinit = () => {};
    Task.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Task;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    Task, 'com.google.j2cl.transpiler.readable.simplebridgemethods.Task');

Callable.$markImplementor(Task);

exports = Task;
//# sourceMappingURL=Task.js.map
goog.module('com.google.j2cl.transpiler.readable.interfaces.Main.SubInterface$impl');

const Interface = goog.require('com.google.j2cl.transpiler.readable.interfaces.Main.Interface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.interfaces.Main.SubInterface.$LambdaAdaptor$impl');

/**
 * @interface
 * @extends {Interface<?string>}
 */
class SubInterface {
  /** @abstract */
  m_defaultMethod__java_lang_String(/** ?string */ s) {}
  /** @return {SubInterface} */
  static $adapt(/** ?function():void */ fn) {
    SubInterface.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static m_defaultMethod__$default__com_google_j2cl_transpiler_readable_interfaces_Main_SubInterface__java_lang_String(
      /** !SubInterface */ $thisArg, /** ?string */ s) {
    SubInterface.$clinit();
    Interface
        .m_defaultMethod__$default__com_google_j2cl_transpiler_readable_interfaces_Main_Interface__java_lang_Object(
            $thisArg, s);
  }

  static $clinit() {
    SubInterface.$clinit = () => {};
    SubInterface.$loadModules();
    Interface.$clinit();
  }

  static $markImplementor(/** Function */ ctor) {
    Interface.$markImplementor(ctor);
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_interfaces_Main_SubInterface =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_interfaces_Main_SubInterface;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.interfaces.Main.SubInterface.$LambdaAdaptor$impl');
  }
}
SubInterface.$markImplementor(/**@type {Function}*/ (SubInterface));
$Util.$setClassMetadataForInterface(
    SubInterface,
    'com.google.j2cl.transpiler.readable.interfaces.Main$SubInterface');

exports = SubInterface;
//# sourceMappingURL=Main$SubInterface.js.map

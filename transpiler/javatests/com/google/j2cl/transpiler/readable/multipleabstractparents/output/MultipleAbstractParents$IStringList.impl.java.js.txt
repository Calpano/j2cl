goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');

const List = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.List$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList.$LambdaAdaptor$impl');

/**
 * @interface
 * @extends {List<?string>}
 */
class IStringList {
  /** @abstract @return {?string} */
  m_getFoo__java_lang_String(/** ?string */ string_1) {}
  /** @return {IStringList} */
  static $adapt(/** ?function(?string):?string */ fn) {
    IStringList.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static $clinit() {
    IStringList.$clinit = () => {};
    IStringList.$loadModules();
  }

  static $markImplementor(/** Function*/ ctor) {
    List.$markImplementor(ctor);
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_IStringList =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_IStringList;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    IStringList,
    'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$IStringList');

IStringList.$markImplementor(/** @type {Function} */ (IStringList));

exports = IStringList;
//# sourceMappingURL=MultipleAbstractParents$IStringList.js.map

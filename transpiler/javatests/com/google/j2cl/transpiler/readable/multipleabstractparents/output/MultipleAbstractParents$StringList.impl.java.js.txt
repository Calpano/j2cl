goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.StringList$impl');

const AbstractStringList = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractStringList$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

class StringList extends AbstractStringList {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!StringList} */
  static $create__() {
    StringList.$clinit();
    let $instance = new StringList();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_StringList__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_StringList__() {
    this.$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractStringList__();
  }
  // Bridge method.
  /** @override @return {?string} */
  m_getFoo__java_lang_String(/** ?string */ arg0) {
    return super.m_getFoo__java_lang_Object(arg0);
  }

  static $clinit() {
    StringList.$clinit = () => {};
    StringList.$loadModules();
    AbstractStringList.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof StringList;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    StringList,
    'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$StringList');

exports = StringList;
//# sourceMappingURL=MultipleAbstractParents$StringList.js.map
goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractStringList2$impl');

const AbstractList2 = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractList2$impl');
const IStringList = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @abstract
 * @extends {AbstractList2<?string>}
 * @implements {IStringList}
 */
class AbstractStringList2 extends AbstractList2 {
  /** @protected */
  constructor() {
    super();
  }

  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractStringList2__() {
    this.$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractList2__();
  }

  static $clinit() {
    AbstractStringList2.$clinit = () => {};
    AbstractStringList2.$loadModules();
    AbstractList2.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof AbstractStringList2;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    AbstractStringList2,
    'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$AbstractStringList2');

IStringList.$markImplementor(AbstractStringList2);

exports = AbstractStringList2;
//# sourceMappingURL=MultipleAbstractParents$AbstractStringList2.js.map
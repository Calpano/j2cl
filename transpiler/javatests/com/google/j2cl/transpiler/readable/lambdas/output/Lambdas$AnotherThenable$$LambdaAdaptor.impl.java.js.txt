goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$Overlay$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');

/**
 * @template T
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(
      /** ?function(?function(T):?void, ?function(Throwable):?void):void */
      fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function(?function(T):?void, ?function(Throwable):?void):void}*/
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$LambdaAdaptor;
    this.$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$LambdaAdaptor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$JsFunction(
        fn);
  }

  $ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$LambdaAdaptor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$JsFunction(
      /** ?function(?function(T):?void, ?function(Throwable):?void):void */
      fn) {
    this.$ctor__java_lang_Object__();
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$LambdaAdaptor =
        fn;
  }

  then(/** ?function(T):?void */ arg0, /** ?function(Throwable):?void */ arg1) {
    {
      let $function =
          this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$LambdaAdaptor;
      $function(arg0, arg1);
    }
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    $LambdaAdaptor,
    'com.google.j2cl.transpiler.readable.lambdas.Lambdas$AnotherThenable$$LambdaAdaptor');

exports = $LambdaAdaptor;
//# sourceMappingURL=Lambdas$AnotherThenable$$LambdaAdaptor.js.map
goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$Overlay$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$LambdaAdaptor$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');

class $Overlay {
  /** @template T @return {?} */
  static $adapt__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$JsFunction(
      /** ?function(?function(T):?void, ?function(Throwable):?void):void */
      fn) {
    $Overlay.$clinit();
    return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
  }

  static $clinit() {
    $Overlay.$clinit = () => {};
    $Overlay.$loadModules();
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$LambdaAdaptor$impl');
  }
}

exports = $Overlay;
//# sourceMappingURL=Lambdas$AnotherThenable$$Overlay.js.map

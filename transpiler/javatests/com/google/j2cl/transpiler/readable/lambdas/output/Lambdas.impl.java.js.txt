goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$1$impl');
let $2 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$2$impl');
let $3 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$3$impl');
let $LambdaAdaptor$1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$1$impl');
let $LambdaAdaptor$2 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$2$impl');
let $LambdaAdaptor$3 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$3$impl');
let $LambdaAdaptor$4 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$4$impl');
let $LambdaAdaptor$5 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$5$impl');
let $Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$Overlay$impl');
let BiFunction = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.BiFunction$impl');
let Lambdas_Function = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.Function$impl');
let Functional = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.Functional$impl');
let FunctionalInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterface$impl');
let FunctionalInterfaceWithMethodReturningVoid = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterfaceWithMethodReturningVoid$impl');
let GenericFunctionalInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.GenericFunctionalInterface$impl');
let IdentityFunction = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.IdentityFunction$impl');
let JsSupplier = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier$impl');
let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Long = goog.forwardDeclare('java.lang.Long$impl');
let RuntimeException = goog.forwardDeclare('java.lang.RuntimeException$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $Exceptions = goog.forwardDeclare('vmbootstrap.Exceptions$impl');

class Lambdas extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {number}*/
    this.f_field__com_google_j2cl_transpiler_readable_lambdas_Lambdas = 0;
  }
  /** @return {!Lambdas} */
  static $create__() {
    Lambdas.$clinit();
    let $instance = new Lambdas();
    $instance.$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas__() {
    this.$ctor__java_lang_Object__();
    this.$init___$p_com_google_j2cl_transpiler_readable_lambdas_Lambdas();
  }
  /** @return {number} */
  m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
      /** FunctionalInterface */ intf, /** number */ n) {
    return this.f_field__com_google_j2cl_transpiler_readable_lambdas_Lambdas +
        intf.m_m__int(n);
  }

  m_testLambdaExpressionStyle__() {
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          return i + 1;
        }),
        10);
  }

  m_testLambdaBlockStyle__() {
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          return i + 2;
        }),
        10);
  }

  m_testLambdaCaptureField__() {
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          return this.f_field__com_google_j2cl_transpiler_readable_lambdas_Lambdas +
              i + 1;
        }),
        10);
  }

  m_testLambdaCaptureLocal__() {
    let x = 1;
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          return x + i + 1;
        }),
        10);
  }

  m_testLambdaCaptureFieldAndLocal__() {
    let x = 1;
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          let y = 1;
          return x + y +
              this.f_field__com_google_j2cl_transpiler_readable_lambdas_Lambdas +
              i + 1;
        }),
        10);
  }

  m_funOuter__() {}

  m_testLambdaCallOuterFunction__() {
    this.m_call__com_google_j2cl_transpiler_readable_lambdas_Lambdas_FunctionalInterface__int(
        FunctionalInterface.$adapt((/** number */ i) => {
          this.m_funOuter__();
          this.m_funOuter__();
          this.m_funOuter__();
          return i + 2;
        }),
        10);
  }

  static m_testLambdaInStaticContext__() {
    Lambdas.$clinit();
    let f = FunctionalInterface.$adapt((/** number */ i) => {
      return i;
    });
  }
  /** @template T */
  m_testInstanceMethodTypeVariableThroughLambda__() {
    let wrapped = /**@type {Functional<T>}*/ (
        Functional.$adapt((/** Functional<T> */ f) => {
          return /**@type {!$1<T>}*/ (
              $1.$create__com_google_j2cl_transpiler_readable_lambdas_Lambdas(
                  this));
        }));
  }
  /** @template T */
  static m_testStaticMethodTypeVariableThroughLambda__() {
    Lambdas.$clinit();
    let wrapped = /**@type {Functional<T>}*/ (
        Functional.$adapt((/** Functional<T> */ f) => {
          return /**@type {!$2<T>}*/ ($2.$create__());
        }));
  }
  /** @template T @return {T} */
  m_callWithTypeVariable__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Object(
      /** GenericFunctionalInterface<T> */ intf, /** T */ e) {
    return intf.m_m__java_lang_Object(e);
  }
  /** @return {Error} */
  m_callParameterized__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Error(
      /** GenericFunctionalInterface<Error> */ intf, /** Error */ e) {
    return /**@type {Error}*/ (
        $Casts.$to(intf.m_m__java_lang_Object(e), Error));
  }
  /** @template T @return {Enum<T>} */
  static m_callTypeVariableWithBounds__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Enum(
      /** GenericFunctionalInterface<Enum<T>> */ intf, /** Enum<T> */ e) {
    Lambdas.$clinit();
    return /**@type {Enum<T>}*/ (
        $Casts.$to(intf.m_m__java_lang_Object(e), Enum));
  }
  /** @template T @return {GenericFunctionalInterface<T>} */
  m_callWithBiFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_BiFunction_$pp_com_google_j2cl_transpiler_readable_lambdas(
      /** BiFunction<T, ?string, ?number> */ fn) {
    return null;
  }
  /** @template T */
  m_testLambdaWithGenerics__() {
    this.m_callWithTypeVariable__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Object(
        GenericFunctionalInterface.$adapt((i) => {
          let i_1 = /**@type {Error}*/ ($Casts.$to(i, Error));
          return i_1;
        }),
        Error.$create__());
    this.m_callParameterized__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Error(
        GenericFunctionalInterface.$adapt((i_2) => {
          let i_3 = /**@type {Error}*/ ($Casts.$to(i_2, Error));
          return i_3;
        }),
        Error.$create__());
    Lambdas
        .m_callTypeVariableWithBounds__com_google_j2cl_transpiler_readable_lambdas_Lambdas_GenericFunctionalInterface__java_lang_Enum(
            /**@type {GenericFunctionalInterface<Enum<T>>}*/ (
                GenericFunctionalInterface.$adapt((i_4) => {
                  let i_5 = /**@type {Enum}*/ ($Casts.$to(i_4, Enum));
                  return i_5;
                })),
            /**@type {Enum<T>}*/ (null));
    this.m_callWithBiFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_BiFunction_$pp_com_google_j2cl_transpiler_readable_lambdas(
        BiFunction.$adapt((/** * */ x, y) => {
          let y_1 = /**@type {?string}*/ ($Casts.$to(y, j_l_String));
          throw $Exceptions.toJs(RuntimeException.$create__());
        }));
    let f = Lambdas_Function.$adapt((item) => {
      let item_1 = /**@type {Enum}*/ ($Casts.$to(item, Enum));
      return Long.m_valueOf__long($Long.fromInt(1));
    });
  }
  /** @return {*} */
  static m_m__() {
    Lambdas.$clinit();
    return null;
  }

  static m_testLambdaCallingStaticMethod__() {
    Lambdas.$clinit();
    let f = Lambdas_Function.$adapt((/** * */ l) => {
      return Lambdas.m_m__();
    });
  }

  m_testLambdaReturningVoidAsExpression__() {
    let runner = FunctionalInterfaceWithMethodReturningVoid.$adapt(() => {
      j_l_Object.$create__();
    });
  }

  m_testAnonymousInsideLambda__() {
    let runner = FunctionalInterfaceWithMethodReturningVoid.$adapt(() => {
      $3.$create__com_google_j2cl_transpiler_readable_lambdas_Lambdas(this);
    });
  }
  /** @template E @return {?function(E):E} */
  static m_identity__() {
    Lambdas.$clinit();
    if ($Equality.$same(
            Lambdas
                .f_identityFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_,
            null)) {
      Lambdas
          .f_identityFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_ =
          IdentityFunction.$create__();
    }
    return /**@type {?function(E):E}*/ (
        Lambdas
            .f_identityFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_);
  }

  static m_testJsInteropLambdas__() {
    Lambdas.$clinit();
    let thenable =
        /**@type {!$LambdaAdaptor$1<?string>}*/ (new $LambdaAdaptor$1(
            (/** ?function(?string):?void */ f1,
             /** ?function(Throwable):?void */ f2) => {
              f1(null);
            }));
    let otherThenable =
        $Overlay
            .$adapt__com_google_j2cl_transpiler_readable_lambdas_Lambdas_AnotherThenable_$JsFunction(
                (/** ?function(?string):?void */ f1_1,
                 /** ?function(Throwable):?void */ f2_1) => {
                  f1_1(null);
                });
    let stringJsSupplier = JsSupplier.$adapt(() => {
      return Integer.m_valueOf__int(1);
    });
    stringJsSupplier.get();
    let equals = stringJsSupplier;
    equals.equals(null);
    equals.m_get__();
  }
  /** @template U, V */
  static m_testIntersectionTyping__() {
    Lambdas.$clinit();
    let o = /**@type {GenericFunctionalInterface<?string>}*/ (
        new $LambdaAdaptor$2((x) => {
          let x_1 = /**@type {?string}*/ ($Casts.$to(x, j_l_String));
          return x_1;
        }));
    o = /**@type {GenericFunctionalInterface<?string>}*/ (
        new $LambdaAdaptor$3((x_2) => {
          let x_3 = /**@type {?string}*/ ($Casts.$to(x_2, j_l_String));
          return x_3;
        }));
    o = /**@type {GenericFunctionalInterface<U>}*/ (
        new $LambdaAdaptor$4((/** U */ x_4) => {
          return x_4;
        }));
  }

  m_testDefaultMethodsInIntersectionAdaptor__() {
    let o = /**@type {BiFunction<?string, ?string, ?string>}*/ (
        new $LambdaAdaptor$5((t, u) => {
          let t_1 = /**@type {?string}*/ ($Casts.$to(t, j_l_String));
          let u_1 = /**@type {?string}*/ ($Casts.$to(u, j_l_String));
          return null;
        }));
  }
  /** @private */
  $init___$p_com_google_j2cl_transpiler_readable_lambdas_Lambdas() {
    this.f_field__com_google_j2cl_transpiler_readable_lambdas_Lambdas = 100;
  }

  static $clinit() {
    Lambdas.$clinit = () => {};
    Lambdas.$loadModules();
    j_l_Object.$clinit();
    Lambdas
        .f_identityFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_ =
        null;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Lambdas;
  }

  static $loadModules() {
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$1$impl');
    $2 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$2$impl');
    $3 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$3$impl');
    $LambdaAdaptor$1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$1$impl');
    $LambdaAdaptor$2 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$2$impl');
    $LambdaAdaptor$3 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$3$impl');
    $LambdaAdaptor$4 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$4$impl');
    $LambdaAdaptor$5 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.$LambdaAdaptor$5$impl');
    $Overlay = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.AnotherThenable.$Overlay$impl');
    BiFunction = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.BiFunction$impl');
    Lambdas_Function = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.Function$impl');
    Functional = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.Functional$impl');
    FunctionalInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterface$impl');
    FunctionalInterfaceWithMethodReturningVoid = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.FunctionalInterfaceWithMethodReturningVoid$impl');
    GenericFunctionalInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.GenericFunctionalInterface$impl');
    IdentityFunction = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.IdentityFunction$impl');
    JsSupplier = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier$impl');
    Enum = goog.module.get('java.lang.Enum$impl');
    Error = goog.module.get('java.lang.Error$impl');
    Integer = goog.module.get('java.lang.Integer$impl');
    Long = goog.module.get('java.lang.Long$impl');
    RuntimeException = goog.module.get('java.lang.RuntimeException$impl');
    j_l_String = goog.module.get('java.lang.String$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Long = goog.module.get('nativebootstrap.Long$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $Exceptions = goog.module.get('vmbootstrap.Exceptions$impl');
  }
}
$Util.$setClassMetadata(
    Lambdas, 'com.google.j2cl.transpiler.readable.lambdas.Lambdas');

/**@type {?function(*):*}*/
Lambdas
    .f_identityFunction__com_google_j2cl_transpiler_readable_lambdas_Lambdas_;

exports = Lambdas;
//# sourceMappingURL=Lambdas.js.map

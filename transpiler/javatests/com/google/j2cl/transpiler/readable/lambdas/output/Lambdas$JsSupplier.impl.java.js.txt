goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier$impl');

const Equals = goog.require('com.google.j2cl.transpiler.readable.lambdas.Lambdas.Equals$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier.$LambdaAdaptor$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');

/**
 * @interface
 * @template T
 * @extends {Equals<T>}
 */
class JsSupplier {
  /** @abstract @return {T} */
  get() {}
  /** @template T @return {JsSupplier<T>} */
  static $adapt(/** ?function():T */ fn) {
    JsSupplier.$clinit();
    return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
  }

  static $clinit() {
    JsSupplier.$clinit = () => {};
    JsSupplier.$loadModules();
    Equals.$clinit();
  }

  static $markImplementor(/** Function*/ ctor) {
    Equals.$markImplementor(ctor);
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    JsSupplier,
    'com.google.j2cl.transpiler.readable.lambdas.Lambdas$JsSupplier');

JsSupplier.$markImplementor(/** @type {Function} */ (JsSupplier));

exports = JsSupplier;
//# sourceMappingURL=Lambdas$JsSupplier.js.map

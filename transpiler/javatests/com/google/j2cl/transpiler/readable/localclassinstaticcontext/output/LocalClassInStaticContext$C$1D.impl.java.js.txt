goog.module('com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext.C.$1D$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let C = goog.forwardDeclare('com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext.C$impl');

class $1D extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {C}*/
    this.$outer_this__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C_1D;
  }
  /** @return {!$1D} */
  static $create__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C(
      /** C */ $outer_this) {
    $1D.$clinit();
    let $instance = new $1D();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C_1D__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C(
            $outer_this);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C_1D__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C(
      /** C */ $outer_this) {
    this.$outer_this__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C_1D =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }
  /** @return {number} */
  m_fun__() {
    return this
        .$outer_this__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C_1D
        .f_f__com_google_j2cl_transpiler_readable_localclassinstaticcontext_LocalClassInStaticContext_C;
  }

  static $clinit() {
    $1D.$clinit = () => {};
    $1D.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1D;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    $1D,
    'com.google.j2cl.transpiler.readable.localclassinstaticcontext.LocalClassInStaticContext$C$1D');

exports = $1D;
//# sourceMappingURL=LocalClassInStaticContext$C$1D.js.map

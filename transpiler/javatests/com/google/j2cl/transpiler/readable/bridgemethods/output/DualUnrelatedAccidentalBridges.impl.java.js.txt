goog.module('com.google.j2cl.transpiler.readable.bridgemethods.DualUnrelatedAccidentalBridges$impl');

const SomeInterface = goog.require('com.google.j2cl.transpiler.readable.bridgemethods.SomeInterface$impl');
const SomeOtherFooInterface = goog.require('com.google.j2cl.transpiler.readable.bridgemethods.SomeOtherFooInterface$impl');
const SuperDualUnrelatedAccidentalBridges = goog.require('com.google.j2cl.transpiler.readable.bridgemethods.SuperDualUnrelatedAccidentalBridges$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @implements {SomeInterface<?string, ?number>}
 * @implements {SomeOtherFooInterface<?string>}
 */
class DualUnrelatedAccidentalBridges extends
    SuperDualUnrelatedAccidentalBridges {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!DualUnrelatedAccidentalBridges} */
  static $create__() {
    DualUnrelatedAccidentalBridges.$clinit();
    let $instance = new DualUnrelatedAccidentalBridges();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgemethods_DualUnrelatedAccidentalBridges__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_bridgemethods_DualUnrelatedAccidentalBridges__() {
    this.$ctor__com_google_j2cl_transpiler_readable_bridgemethods_SuperDualUnrelatedAccidentalBridges__();
  }
  // Bridge method.
  /** @override */
  m_foo__java_lang_Object__java_lang_Object(/** * */ arg0, /** * */ arg1) {
    super.m_foo__java_lang_String__java_lang_Double(
        /**@type {?string}*/ ($Casts.$to(arg0, j_l_String)),
        /**@type {?number}*/ ($Casts.$to(arg1, Double)));
  }
  // Bridge method.
  /** @override */
  m_foo__java_lang_Object__java_lang_Number(
      /** * */ arg0, /** (Number|number) */ arg1) {
    super.m_foo__java_lang_String__java_lang_Number(
        /**@type {?string}*/ ($Casts.$to(arg0, j_l_String)), arg1);
  }
  // Bridge method.
  /** @override */
  m_foo__java_lang_Object__java_lang_Double(
      /** * */ arg0, /** ?number */ arg1) {
    super.m_foo__java_lang_String__java_lang_Double(
        /**@type {?string}*/ ($Casts.$to(arg0, j_l_String)), arg1);
  }

  static $clinit() {
    DualUnrelatedAccidentalBridges.$clinit = () => {};
    DualUnrelatedAccidentalBridges.$loadModules();
    SuperDualUnrelatedAccidentalBridges.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof DualUnrelatedAccidentalBridges;
  }

  static $loadModules() {
    Double = goog.module.get('java.lang.Double$impl');
    j_l_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata(
    DualUnrelatedAccidentalBridges,
    'com.google.j2cl.transpiler.readable.bridgemethods.DualUnrelatedAccidentalBridges');

SomeInterface.$markImplementor(DualUnrelatedAccidentalBridges);
SomeOtherFooInterface.$markImplementor(DualUnrelatedAccidentalBridges);

exports = DualUnrelatedAccidentalBridges;
//# sourceMappingURL=DualUnrelatedAccidentalBridges.js.map
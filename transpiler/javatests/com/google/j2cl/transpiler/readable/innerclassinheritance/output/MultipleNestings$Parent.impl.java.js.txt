goog.module('com.google.j2cl.transpiler.readable.innerclassinheritance.MultipleNestings.Parent$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let MultipleNestings = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinheritance.MultipleNestings$impl');

class Parent extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {MultipleNestings}*/
    this.$outer_this__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings_Parent;
  }
  /** @return {!Parent} */
  static $create__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings(
      /** MultipleNestings */ $outer_this) {
    Parent.$clinit();
    let $instance = new Parent();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings_Parent__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings(
            $outer_this);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings_Parent__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings(
      /** MultipleNestings */ $outer_this) {
    this.$outer_this__com_google_j2cl_transpiler_readable_innerclassinheritance_MultipleNestings_Parent =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }

  m_fun__() {}

  static $clinit() {
    Parent.$clinit = () => {};
    Parent.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Parent;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    Parent,
    'com.google.j2cl.transpiler.readable.innerclassinheritance.MultipleNestings$Parent');

exports = Parent;
//# sourceMappingURL=MultipleNestings$Parent.js.map

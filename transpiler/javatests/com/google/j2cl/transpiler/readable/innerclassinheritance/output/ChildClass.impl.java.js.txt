goog.module('com.google.j2cl.transpiler.readable.innerclassinheritance.ChildClass$impl');

const ParentOuter = goog.require('com.google.j2cl.transpiler.readable.innerclassinheritance.ParentOuter$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1LocalClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinheritance.ChildClass.$1LocalClass$impl');

class ChildClass extends ParentOuter {
  /** @protected */
  constructor() {
    super();
    /**@type {number}*/
    this.f_fieldInOuter__com_google_j2cl_transpiler_readable_innerclassinheritance_ChildClass =
        0;
  }
  /** @return {!ChildClass} */
  static $create__() {
    ChildClass.$clinit();
    let $instance = new ChildClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_innerclassinheritance_ChildClass__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_innerclassinheritance_ChildClass__() {
    this.$ctor__com_google_j2cl_transpiler_readable_innerclassinheritance_ParentOuter__();
  }

  m_funInOuter__() {}

  m_testLocalClass__() {
    $1LocalClass
        .$create__com_google_j2cl_transpiler_readable_innerclassinheritance_ChildClass(
            this)
        .m_test__();
  }

  static $clinit() {
    ChildClass.$clinit = () => {};
    ChildClass.$loadModules();
    ParentOuter.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof ChildClass;
  }

  static $loadModules() {
    $1LocalClass = goog.module.get(
        'com.google.j2cl.transpiler.readable.innerclassinheritance.ChildClass.$1LocalClass$impl');
  }
}
$Util.$setClassMetadata(
    ChildClass,
    'com.google.j2cl.transpiler.readable.innerclassinheritance.ChildClass');

exports = ChildClass;
//# sourceMappingURL=ChildClass.js.map

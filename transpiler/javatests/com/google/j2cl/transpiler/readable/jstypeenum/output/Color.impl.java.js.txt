goog.module('com.google.j2cl.transpiler.readable.jstypeenum.Color$impl');

const Enum = goog.require('java.lang.Enum$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $Enums = goog.forwardDeclare('vmbootstrap.Enums$impl');

/**
 * @extends {Enum<Color>}
 */
class Color extends Enum {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!Color} */
  static $create__java_lang_String__int(
      /** ?string */ $name, /** number */ $ordinal) {
    let $instance = new Color();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jstypeenum_Color__java_lang_String__int(
            $name, $ordinal);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_jstypeenum_Color__java_lang_String__int(
      /** ?string */ $name, /** number */ $ordinal) {
    this.f_name__java_lang_Enum_ = $name;
    this.f_ordinal__java_lang_Enum_ = $ordinal;
    this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);
  }
  /** @return {!Color} */
  static valueOf(/** string */ name) {
    Color.$clinit();
    if ($Equality.$same(
            Color
                .f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_,
            null)) {
      Color
          .f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_ =
          $Enums.createMapFromValues(Color.values());
    }
    return $Enums.getValueFromNameAndMap(
        name,
        Color
            .f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_);
  }
  /** @return {!Array<!Color>} */
  static values() {
    Color.$clinit();
    return /**@type {!Array<Color>}*/ ($Arrays.$init(
        [
          Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color,
          Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color,
          Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color
        ],
        Color));
  }
  // Bridge method.
  /** @override @return {number} */
  m_compareTo__java_lang_Object(/** * */ arg0) {
    return super.compareTo(/**@type {Color}*/ ($Casts.$to(arg0, Color)));
  }
  /** @return {!Color} */
  static get RED() {
    return (
        Color.$clinit(),
        Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color);
  }
  /** @return {!Color} */
  static get GREEN() {
    return (
        Color.$clinit(),
        Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color);
  }
  /** @return {!Color} */
  static get BLUE() {
    return (
        Color.$clinit(),
        Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color);
  }

  static $clinit() {
    Color.$clinit = () => {};
    Color.$loadModules();
    Enum.$clinit();
    Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color =
        Color.$create__java_lang_String__int(
            $Util.$makeEnumName('RED'),
            Color
                .$ordinal$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color);
    Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color =
        Color.$create__java_lang_String__int(
            $Util.$makeEnumName('GREEN'),
            Color
                .$ordinal$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color);
    Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color =
        Color.$create__java_lang_String__int(
            $Util.$makeEnumName('BLUE'),
            Color
                .$ordinal$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color);
    Color
        .f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_ =
        null;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Color;
  }

  static $loadModules() {
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $Enums = goog.module.get('vmbootstrap.Enums$impl');
  }
}
$Util.$setClassMetadataForEnum(
    Color, 'com.google.j2cl.transpiler.readable.jstypeenum.Color');

/**@private {!Color}*/
Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color;
/**@private {!Color}*/
Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color;
/**@private {!Color}*/
Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color;
/**@type {Map<?string, !Color>}*/
Color.f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_;
/**@const {number}*/
Color.$ordinal$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color = 0;
/**@const {number}*/
Color.$ordinal$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color =
    1;
/**@const {number}*/
Color.$ordinal$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color = 2;

exports = Color;
//# sourceMappingURL=Color.js.map
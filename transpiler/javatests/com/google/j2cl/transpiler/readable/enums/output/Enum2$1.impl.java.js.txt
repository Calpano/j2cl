goog.module('com.google.j2cl.transpiler.readable.enums.Enum2.$1$impl');

const Enum2 = goog.require('com.google.j2cl.transpiler.readable.enums.Enum2$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

class $1 extends Enum2 {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!$1} */
  static $create__java_lang_String__int__int(
      /** ?string */ $name, /** number */ $ordinal, /** number */ $_0) {
    $1.$clinit();
    let $instance = new $1();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_enums_Enum2_1__java_lang_String__int__int(
            $name, $ordinal, $_0);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_enums_Enum2_1__java_lang_String__int__int(
      /** ?string */ $name, /** number */ $ordinal, /** number */ $_0) {
    this.$ctor__com_google_j2cl_transpiler_readable_enums_Enum2__java_lang_String__int__int(
        $name, $ordinal, $_0);
  }
  // Bridge method.
  /** @override @return {number} */
  m_compareTo__java_lang_Object(/** * */ arg0) {
    return super.compareTo(/**@type {Enum2}*/ ($Casts.$to(arg0, Enum2)));
  }

  static $clinit() {
    $1.$clinit = () => {};
    $1.$loadModules();
    Enum2.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1;
  }

  static $loadModules() {
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata(
    $1, 'com.google.j2cl.transpiler.readable.enums.Enum2$1');

exports = $1;
//# sourceMappingURL=Enum2$1.js.map

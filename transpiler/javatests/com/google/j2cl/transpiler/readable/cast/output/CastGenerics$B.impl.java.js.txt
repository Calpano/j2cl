goog.module('com.google.j2cl.transpiler.readable.cast.CastGenerics.B$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.cast.CastGenerics.B.$LambdaAdaptor$impl');

/**
 * @interface
 */
class B {
  /** @abstract */
  m_mB__() {}
  /** @return {B} */
  static $adapt(/** ?function():void */ fn) {
    B.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static $clinit() {
    B.$clinit = () => {};
    B.$loadModules();
  }

  static $markImplementor(/** Function */ ctor) {
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_cast_CastGenerics_B =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_cast_CastGenerics_B;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.cast.CastGenerics.B.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    B, 'com.google.j2cl.transpiler.readable.cast.CastGenerics$B');
B.$markImplementor(/** @type {Function} */ (B));

exports = B;
//# sourceMappingURL=CastGenerics$B.js.map

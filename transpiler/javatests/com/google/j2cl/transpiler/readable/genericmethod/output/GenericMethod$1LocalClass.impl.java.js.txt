goog.module('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod.$1LocalClass$impl');

const GenericMethod = goog.require('com.google.j2cl.transpiler.readable.genericmethod.GenericMethod$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');

/**
 * @template T, T_1, T_2
 * @extends {GenericMethod<T>}
 */
class $1LocalClass extends GenericMethod {
  /** @protected */
  constructor() {
    super();
    /**@type {GenericMethod<T_2>}*/
    this.$outer_this__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_1LocalClass;
  }
  /** @template T, T_1, T_2 @return {!$1LocalClass<T, T_1, T_2>} */
  static $create__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod(
      /** GenericMethod<T_2> */ $outer_this) {
    $1LocalClass.$clinit();
    let $instance = new $1LocalClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_1LocalClass__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod(
            $outer_this);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_1LocalClass__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod(
      /** GenericMethod<T_2> */ $outer_this) {
    this.$outer_this__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod_1LocalClass =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_genericmethod_GenericMethod__();
  }

  m_fun2__java_lang_Object(/** T */ t) {}
  /** @template T_3 */
  m_fun2__java_lang_Number(/** T_3 */ t) {}

  static $clinit() {
    $1LocalClass.$clinit = () => {};
    $1LocalClass.$loadModules();
    GenericMethod.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1LocalClass;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    $1LocalClass,
    'com.google.j2cl.transpiler.readable.genericmethod.GenericMethod$1LocalClass');

exports = $1LocalClass;
//# sourceMappingURL=GenericMethod$1LocalClass.js.map

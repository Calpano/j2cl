goog.module('com.google.j2cl.transpiler.readable.jsbridgeaccidentaloverride.OtherInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jsbridgeaccidentaloverride.OtherInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class OtherInterface {
  /** @abstract @return {number} */
  m_fun__int(/** number */ a) {}
  /** @return {OtherInterface} */
  static $adapt(/** ?function(number):number */ fn) {
    OtherInterface.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static $clinit() {
    OtherInterface.$clinit = () => {};
    OtherInterface.$loadModules();
  }

  static $markImplementor(/** Function*/ ctor) {
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_jsbridgeaccidentaloverride_OtherInterface =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_jsbridgeaccidentaloverride_OtherInterface;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.jsbridgeaccidentaloverride.OtherInterface.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    OtherInterface,
    'com.google.j2cl.transpiler.readable.jsbridgeaccidentaloverride.OtherInterface');

OtherInterface.$markImplementor(/** @type {Function} */ (OtherInterface));

exports = OtherInterface;
//# sourceMappingURL=OtherInterface.js.map
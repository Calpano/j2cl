goog.module('com.google.j2cl.transpiler.readable.intersectiontype.Setable$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.Setable.$LambdaAdaptor$impl');

/**
 * @interface
 */
class Setable {
  /** @abstract */
  m_set__int(/** number */ i) {}
  /** @return {Setable} */
  static $adapt(/** ?function(number):void */ fn) {
    Setable.$clinit();
    return new $LambdaAdaptor(fn);
  }

  static $clinit() {
    Setable.$clinit = () => {};
    Setable.$loadModules();
  }

  static $markImplementor(/** Function */ ctor) {
    ctor.prototype
        .$implements__com_google_j2cl_transpiler_readable_intersectiontype_Setable =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_intersectiontype_Setable;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'com.google.j2cl.transpiler.readable.intersectiontype.Setable.$LambdaAdaptor$impl');
  }
}
$Util.$setClassMetadataForInterface(
    Setable, 'com.google.j2cl.transpiler.readable.intersectiontype.Setable');
Setable.$markImplementor(/**@type {Function}*/ (Setable));

exports = Setable;
//# sourceMappingURL=Setable.js.map

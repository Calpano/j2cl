goog.module('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.MapEntry$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Getable = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.Getable$impl');
let IntersectionTypeTest = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$impl');
let Setable = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.Setable$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @template U
 */
class MapEntry extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {IntersectionTypeTest<U>}*/
    this.f_$outer_this__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_MapEntry;
  }
  /** @template U @return {!MapEntry<U>} */
  static $create__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(
      /** IntersectionTypeTest<U> */ $outer_this) {
    MapEntry.$clinit();
    let $instance = new MapEntry();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_MapEntry__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(
            $outer_this);
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_MapEntry__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest(
      /** IntersectionTypeTest<U> */ $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest_MapEntry =
        $outer_this;
    this.$ctor__java_lang_Object__();
  }
  /** @template T @return {Getable<T>} */
  m_method__java_lang_Object(/** * */ o) {
    return /**@type {Getable<T>}*/ (
        $Casts.$to($Casts.$to(o, Getable), Setable));
  }

  static $clinit() {
    MapEntry.$clinit = () => {};
    MapEntry.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof MapEntry;
  }

  static $loadModules() {
    Getable = goog.module.get(
        'com.google.j2cl.transpiler.readable.intersectiontype.Getable$impl');
    Setable = goog.module.get(
        'com.google.j2cl.transpiler.readable.intersectiontype.Setable$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata(
    MapEntry,
    'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$MapEntry');

exports = MapEntry;
//# sourceMappingURL=IntersectionTypeTest$MapEntry.js.map
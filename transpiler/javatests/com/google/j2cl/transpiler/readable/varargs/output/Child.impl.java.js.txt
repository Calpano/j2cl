goog.module('com.google.j2cl.transpiler.readable.varargs.Child$impl');

const Varargs = goog.require('com.google.j2cl.transpiler.readable.varargs.Varargs$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

class Child extends Varargs {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!Child} */
  static $create__() {
    Child.$clinit();
    let $instance = new Child();
    $instance.$ctor__com_google_j2cl_transpiler_readable_varargs_Child__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_varargs_Child__() {
    this.$ctor__com_google_j2cl_transpiler_readable_varargs_Varargs__arrayOf_int(
        /**@type {!Array<number>}*/ ($Arrays.$init([1], $int)));
  }

  static $clinit() {
    Child.$clinit = () => {};
    Child.$loadModules();
    Varargs.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Child;
  }

  static $loadModules() {
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
}
$Util.$setClassMetadata(
    Child, 'com.google.j2cl.transpiler.readable.varargs.Child');

exports = Child;
//# sourceMappingURL=Child.js.map
package varargs

open class Varargs {
 fun <init>(args: IntArray?): varargs.Varargs {}

 fun <init>(): varargs.Varargs {
  super(intArrayOf(1))
 }

 fun test(a: Int, args: Array<Any?>?) {}

 fun testCloneable(args: Array<Cloneable?>?) {}

 fun testSerializable(args: Array<java.io.Serializable?>?) {}

 fun main() {
  val v: varargs.Varargs? = varargs.Varargs()
  v.test(1, arrayOf<Any?>())
  v.test(1, arrayOf<Any?>(Any()))
  v.test(1, arrayOf<Any?>(Any()))
  v.test(1, arrayOf<Any?>())
  v.test(1, arrayOf<Array<Any?>?>())
  v.testCloneable(arrayOf<Array<Any?>?>())
  v.testSerializable(arrayOf<Array<Any?>?>())
 }

 companion object {
  @JvmStatic
  fun fun(elements: Array<T>?) {}

  @JvmStatic
  fun bar(a: E, b: E) {
   TODO("JavaScriptConstructorReference").`fun`(arrayOf<E>(a, b))
  }
 }
}

open class Child: varargs.Varargs {
 fun <init>(): varargs.Child {
  super(intArrayOf(1))
 }
}

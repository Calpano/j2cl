package varargs

open class Varargs {
 constructor(vararg args: Int) {}

 constructor() {
  super(intArrayOf(1))
 }

 open fun test(a: Int, vararg args: Any?) {}

 open fun testCloneable(vararg args: Cloneable?) {}

 open fun testSerializable(vararg args: java.io.Serializable?) {}

 open fun main() {
  val v: varargs.Varargs? = varargs.Varargs()
  v.test(1, arrayOf<Any?>())
  v.test(1, arrayOf<Any?>(Any()))
  v.test(1, arrayOf<Any?>(Any()))
  v.test(1, arrayOf<Any?>())
  v.test(1, arrayOf<Array<Any?>?>())
  v.testCloneable(arrayOf<Array<Any?>?>())
  v.testSerializable(arrayOf<Array<Any?>?>())
 }

 companion object {
  @JvmStatic
  fun `fun`(vararg elements: T) {}

  @JvmStatic
  fun bar(a: E, b: E) {
   varargs.Varargs.`fun`(arrayOf<E>(a, b))
  }
 }
}

open class Child: varargs.Varargs {
 constructor() {
  super(intArrayOf(1))
 }
}

;;; Code for varargs.Varargs [vtable]
(global $varargs.Varargs.vtable (mut (ref null $varargs.Varargs.vtable)) (ref.null $varargs.Varargs.vtable))

;;; Code for varargs.Child [vtable]
(global $varargs.Child.vtable (mut (ref null $varargs.Child.vtable)) (ref.null $varargs.Child.vtable))

;;; Code for varargs.Varargs [static fields]
(global $f_$initialized__varargs_Varargs (mut i32) (i32.const 0))

;;; Code for varargs.Child [static fields]
(global $f_$initialized__varargs_Child (mut i32) (i32.const 0))

 ;;; Code for varargs.Varargs [vtable.init]
 (global.set $varargs.Varargs.vtable
  (struct.new_with_rtt $varargs.Varargs.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@varargs.Varargs)
   (ref.func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs)
   (ref.func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs)
   (ref.func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs)
   (ref.func $m_main__void@varargs.Varargs)
   (rtt.canon $varargs.Varargs.vtable)
  )
 )

 ;;; Code for varargs.Varargs [itable.init]
 (global.set $varargs.Varargs.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for varargs.Child [vtable.init]
 (global.set $varargs.Child.vtable
  (struct.new_with_rtt $varargs.Child.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@varargs.Child)
   (ref.func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs)
   (ref.func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs)
   (ref.func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs)
   (ref.func $m_main__void@varargs.Varargs)
   (rtt.canon $varargs.Child.vtable)
  )
 )

 ;;; Code for varargs.Child [itable.init]
 (global.set $varargs.Child.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

;;; Code for varargs.Varargs [CLASS]
(type $varargs.Varargs (struct
 (field $vtable (ref $varargs.Varargs.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $varargs.Varargs.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__int__arrayOf_java_lang_Object__void (mut (ref $function.$int__$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_testCloneable__arrayOf_java_lang_Cloneable__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_testSerializable__arrayOf_java_io_Serializable__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_main__void (mut (ref $function.__$void))))
 (extends $java.lang.Object.vtable)
)

;;; Varargs(int... args)
(func $m_<init>__arrayOf_int@varargs.Varargs
 (param $this (ref null $varargs.Varargs))
 (param $args (ref null $javaemul.internal.WasmArray.OfInt))
 (result (ref null $varargs.Varargs))
 ;;@ varargs/Varargs.java:21:9
 (block
  ;; varargs.Varargs.$clinit();
  ;;@ varargs/Varargs.java:21:30
  (call $$clinit__void@varargs.Varargs )
  ;; Object.this.Object.<init>();
  ;;@ varargs/Varargs.java:21:30
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Varargs.this;
  ;;@ varargs/Varargs.java:21:9
  (return (local.get $this))
 )
)

;;; Varargs()
(func $m_<init>__@varargs.Varargs
 (param $this (ref null $varargs.Varargs))
 (result (ref null $varargs.Varargs))
 ;;@ varargs/Varargs.java:23:9
 (local $$array_literal (ref null $javaemul.internal.WasmArray.OfInt))
 (block
  ;; varargs.Varargs.$clinit();
  ;;@ varargs/Varargs.java:23:19
  (call $$clinit__void@varargs.Varargs )
  ;; Varargs.this.Varargs.<init>((int[] $array_literal = new OfInt.<init>(1),($array_literal.elements[0] = 1),$array_literal));
  ;;@ varargs/Varargs.java:24:4
  (drop (call $m_<init>__arrayOf_int@varargs.Varargs (local.get $this)(block (result (ref null $javaemul.internal.WasmArray.OfInt))
   (local.set $$array_literal (call $m_<init>__int@javaemul.internal.WasmArray.OfInt (struct.new_with_rtt $javaemul.internal.WasmArray.OfInt (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.itable)) (i32.const 0) (i32.const 0) (ref.null $int.array) (global.get $javaemul.internal.WasmArray.OfInt.rtt))(i32.const 1)))
   (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal)) (i32.const 0) (i32.const 1))
   (local.get $$array_literal)
  )))
  ;; return Varargs.this;
  ;;@ varargs/Varargs.java:23:9
  (return (local.get $this))
 )
)

;;; void Varargs.test(int a, Object... args)
(func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs
 (type $function.$int__$javaemul.internal.WasmArray.OfObject__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ varargs/Varargs.java:27:14
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block
 )
)
(elem declare func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs)

;;; void Varargs.testCloneable(Cloneable... args)
(func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs
 (type $function.$javaemul.internal.WasmArray.OfObject__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ varargs/Varargs.java:29:14
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block
 )
)
(elem declare func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs)

;;; void Varargs.testSerializable(Serializable... args)
(func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs
 (type $function.$javaemul.internal.WasmArray.OfObject__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ varargs/Varargs.java:31:14
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block
 )
)
(elem declare func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs)

;;; void Varargs.fun(T... elements)
(func $m_fun__arrayOf_java_lang_Object__void@varargs.Varargs
 (param $elements (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ varargs/Varargs.java:33:25
 (block
  ;; varargs.Varargs.$clinit();
  ;;@ varargs/Varargs.java:33:44
  (call $$clinit__void@varargs.Varargs )
 )
)

;;; void Varargs.bar(E a, E b)
(func $m_bar__java_lang_Object__java_lang_Object__void@varargs.Varargs
 (param $a (ref null $java.lang.Object))
 (param $b (ref null $java.lang.Object))
 ;;@ varargs/Varargs.java:35:25
 (local $$array_literal (ref null $javaemul.internal.WasmArray.OfObject))
 (block
  ;; varargs.Varargs.$clinit();
  ;;@ varargs/Varargs.java:35:39
  (call $$clinit__void@varargs.Varargs )
  ;; varargs.Varargs.fun((E[] $array_literal = new OfObject.<init>(2),($array_literal.elements[0] = a),($array_literal.elements[1] = b),$array_literal));
  ;;@ varargs/Varargs.java:36:4
  (call $m_fun__arrayOf_java_lang_Object__void@varargs.Varargs (block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 2)))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal)) (i32.const 0) (local.get $a))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal)) (i32.const 1) (local.get $b))
   (local.get $$array_literal)
  ))
 )
)

;;; void Varargs.main()
(func $m_main__void@varargs.Varargs
 (type $function.__$void)
 (param $this.untyped (ref null $java.lang.Object))
 ;;@ varargs/Varargs.java:39:14
 (local $v (ref null $varargs.Varargs))
 (local $$array_literal (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_1 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_2 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_3 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_4 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_5 (ref null $javaemul.internal.WasmArray.OfInt))
 (local $$array_literal_6 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_7 (ref null $javaemul.internal.WasmArray.OfInt))
 (local $$array_literal_8 (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal_9 (ref null $javaemul.internal.WasmArray.OfInt))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block
  ;; Varargs v = new Varargs.<init>();
  ;;@ varargs/Varargs.java:40:4
  (local.set $v (call $m_<init>__@varargs.Varargs (struct.new_with_rtt $varargs.Varargs (ref.as_non_null (global.get $varargs.Varargs.vtable)) (ref.as_non_null (global.get $varargs.Varargs.itable)) (i32.const 0) (global.get $varargs.Varargs.rtt))))
  ;; v.test(1,(Object[] $array_literal = new OfObject.<init>(0),$array_literal));
  ;;@ varargs/Varargs.java:41:4
  (call_ref (local.get $v)(i32.const 1)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 0)))
   (local.get $$array_literal)
  )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.test(1,(Object[] $array_literal = new OfObject.<init>(1),($array_literal.elements[0] = new Object.<init>()),$array_literal));
  ;;@ varargs/Varargs.java:42:4
  (call_ref (local.get $v)(i32.const 1)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_1 (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 1)))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal_1)) (i32.const 0) (call $m_<init>__@java.lang.Object (struct.new_with_rtt $java.lang.Object (ref.as_non_null (global.get $java.lang.Object.vtable)) (ref.as_non_null (global.get $java.lang.Object.itable)) (i32.const 0) (global.get $java.lang.Object.rtt))))
   (local.get $$array_literal_1)
  )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.test(1,(Object[] $array_literal = new OfObject.<init>(1),($array_literal.elements[0] = new Object.<init>()),$array_literal));
  ;;@ varargs/Varargs.java:43:4
  (call_ref (local.get $v)(i32.const 1)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_2 (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 1)))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal_2)) (i32.const 0) (call $m_<init>__@java.lang.Object (struct.new_with_rtt $java.lang.Object (ref.as_non_null (global.get $java.lang.Object.vtable)) (ref.as_non_null (global.get $java.lang.Object.itable)) (i32.const 0) (global.get $java.lang.Object.rtt))))
   (local.get $$array_literal_2)
  )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.test(1,(Object[] $array_literal = new OfObject.<init>(0),$array_literal));
  ;;@ varargs/Varargs.java:44:4
  (call_ref (local.get $v)(i32.const 1)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_3 (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 0)))
   (local.get $$array_literal_3)
  )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.test(1,(Object[][] $array_literal = javaemul.internal.WasmArray.createMultiDimensional((int[] $array_literal = new OfInt.<init>(2),($array_literal.elements[0] = 0),($array_literal.elements[1] = -1),$array_literal),-1),$array_literal));
  ;;@ varargs/Varargs.java:45:4
  (call_ref (local.get $v)(i32.const 1)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_4 (call $m_createMultiDimensional__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArray (block (result (ref null $javaemul.internal.WasmArray.OfInt))
    (local.set $$array_literal_5 (call $m_<init>__int@javaemul.internal.WasmArray.OfInt (struct.new_with_rtt $javaemul.internal.WasmArray.OfInt (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.itable)) (i32.const 0) (i32.const 0) (ref.null $int.array) (global.get $javaemul.internal.WasmArray.OfInt.rtt))(i32.const 2)))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_5)) (i32.const 0) (i32.const 0))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   (local.get $$array_literal_4)
  )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.testCloneable((Object[][] $array_literal = javaemul.internal.WasmArray.createMultiDimensional((int[] $array_literal = new OfInt.<init>(2),($array_literal.elements[0] = 0),($array_literal.elements[1] = -1),$array_literal),-1),$array_literal));
  ;;@ varargs/Varargs.java:46:4
  (call_ref (local.get $v)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_6 (call $m_createMultiDimensional__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArray (block (result (ref null $javaemul.internal.WasmArray.OfInt))
    (local.set $$array_literal_7 (call $m_<init>__int@javaemul.internal.WasmArray.OfInt (struct.new_with_rtt $javaemul.internal.WasmArray.OfInt (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.itable)) (i32.const 0) (i32.const 0) (ref.null $int.array) (global.get $javaemul.internal.WasmArray.OfInt.rtt))(i32.const 2)))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_7)) (i32.const 0) (i32.const 0))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_7)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_7)
   )(i32.const -1)))
   (local.get $$array_literal_6)
  )(struct.get $varargs.Varargs.vtable $m_testCloneable__arrayOf_java_lang_Cloneable__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  ;; v.testSerializable((Object[][] $array_literal = javaemul.internal.WasmArray.createMultiDimensional((int[] $array_literal = new OfInt.<init>(2),($array_literal.elements[0] = 0),($array_literal.elements[1] = -1),$array_literal),-1),$array_literal));
  ;;@ varargs/Varargs.java:47:4
  (call_ref (local.get $v)(block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal_8 (call $m_createMultiDimensional__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArray (block (result (ref null $javaemul.internal.WasmArray.OfInt))
    (local.set $$array_literal_9 (call $m_<init>__int@javaemul.internal.WasmArray.OfInt (struct.new_with_rtt $javaemul.internal.WasmArray.OfInt (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.itable)) (i32.const 0) (i32.const 0) (ref.null $int.array) (global.get $javaemul.internal.WasmArray.OfInt.rtt))(i32.const 2)))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_9)) (i32.const 0) (i32.const 0))
    (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal_9)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_9)
   )(i32.const -1)))
   (local.get $$array_literal_8)
  )(struct.get $varargs.Varargs.vtable $m_testSerializable__arrayOf_java_io_Serializable__void (struct.get $varargs.Varargs $vtable(local.get $v))))
 )
)
(elem declare func $m_main__void@varargs.Varargs)

;;; void Varargs.$clinit()
(func $$clinit__void@varargs.Varargs
 ;;@ varargs/Varargs.java:20:13
 (block
  ;; if (varargs.Varargs.$initialized) return;
  ;;@ varargs/Varargs.java:20:13
  (if (global.get $f_$initialized__varargs_Varargs)
   (then
    ;; return;
    ;;@ varargs/Varargs.java:20:13
    (return )
   )
  )
  ;; (varargs.Varargs.$initialized = true);
  ;;@ varargs/Varargs.java:20:13
  (global.set $f_$initialized__varargs_Varargs (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ varargs/Varargs.java:20:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Varargs.getClass()
(func $m_getClass__java_lang_Class@varargs.Varargs
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getVarargs.Varargs();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getVarargs.Varargs__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@varargs.Varargs)

;;; Code for varargs.Child [CLASS]
(type $varargs.Child (struct
 (field $vtable (ref $varargs.Child.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $varargs.Varargs)
)
(type $varargs.Child.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__int__arrayOf_java_lang_Object__void (mut (ref $function.$int__$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_testCloneable__arrayOf_java_lang_Cloneable__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_testSerializable__arrayOf_java_io_Serializable__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_main__void (mut (ref $function.__$void))))
 (extends $varargs.Varargs.vtable)
)

;;; Child()
(func $m_<init>__@varargs.Child
 (param $this (ref null $varargs.Child))
 (result (ref null $varargs.Child))
 ;;@ varargs/Varargs.java:52:9
 (local $$array_literal (ref null $javaemul.internal.WasmArray.OfInt))
 (block
  ;; varargs.Child.$clinit();
  ;;@ varargs/Varargs.java:52:17
  (call $$clinit__void@varargs.Child )
  ;; Varargs.this.Varargs.<init>((int[] $array_literal = new OfInt.<init>(1),($array_literal.elements[0] = 1),$array_literal));
  ;;@ varargs/Varargs.java:53:4
  (drop (call $m_<init>__arrayOf_int@varargs.Varargs (local.get $this)(block (result (ref null $javaemul.internal.WasmArray.OfInt))
   (local.set $$array_literal (call $m_<init>__int@javaemul.internal.WasmArray.OfInt (struct.new_with_rtt $javaemul.internal.WasmArray.OfInt (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfInt.itable)) (i32.const 0) (i32.const 0) (ref.null $int.array) (global.get $javaemul.internal.WasmArray.OfInt.rtt))(i32.const 1)))
   (array.set $int.array (struct.get $javaemul.internal.WasmArray.OfInt $f_elements__javaemul_internal_WasmArray_OfInt_(local.get $$array_literal)) (i32.const 0) (i32.const 1))
   (local.get $$array_literal)
  )))
  ;; return Child.this;
  ;;@ varargs/Varargs.java:52:9
  (return (local.get $this))
 )
)

;;; void Child.$clinit()
(func $$clinit__void@varargs.Child
 ;;@ varargs/Varargs.java:51:6
 (block
  ;; if (varargs.Child.$initialized) return;
  ;;@ varargs/Varargs.java:51:6
  (if (global.get $f_$initialized__varargs_Child)
   (then
    ;; return;
    ;;@ varargs/Varargs.java:51:6
    (return )
   )
  )
  ;; (varargs.Child.$initialized = true);
  ;;@ varargs/Varargs.java:51:6
  (global.set $f_$initialized__varargs_Child (i32.const 1))
  ;; varargs.Varargs.$clinit();
  ;;@ varargs/Varargs.java:51:6
  (call $$clinit__void@varargs.Varargs )
 )
)

;;; Class<?> Child.getClass()
(func $m_getClass__java_lang_Class@varargs.Child
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $varargs.Child))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Child.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getVarargs.Child();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getVarargs.Child__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@varargs.Child)

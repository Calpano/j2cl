;;; Code for varargs.Varargs [vtable]
(global $varargs.Varargs.vtable (mut (ref null $varargs.Varargs.vtable)) (ref.null $varargs.Varargs.vtable))

;;; Code for varargs.Child [vtable]
(global $varargs.Child.vtable (mut (ref null $varargs.Child.vtable)) (ref.null $varargs.Child.vtable))

;;; Code for varargs.Varargs [static fields]
(global $f_$initialized__varargs_Varargs (mut i32) (i32.const 0))

;;; Code for varargs.Child [static fields]
(global $f_$initialized__varargs_Child (mut i32) (i32.const 0))

;;; Code for varargs.Varargs [CLASS]
(type $varargs.Varargs (struct
 (field $vtable (ref null $varargs.Varargs.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $varargs.Varargs.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__int__arrayOf_java_lang_Object__void (mut (ref $function.$int__$Object.array__$void)))
 (field $m_testCloneable__arrayOf_java_lang_Cloneable__void (mut (ref $function.$Object.array__$void)))
 (field $m_testSerializable__arrayOf_java_io_Serializable__void (mut (ref $function.$Object.array__$void)))
 (field $m_main__void (mut (ref $function.__$void)))
))

;;; Varargs(int... args)
(func $m_<init>__arrayOf_int__void@varargs.Varargs
 (param $this (ref null $varargs.Varargs))
 (param $args (ref null $int.array))
 (result (ref null $varargs.Varargs))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; Varargs()
(func $m_<init>__void@varargs.Varargs
 (param $this (ref null $varargs.Varargs))
 (result (ref null $varargs.Varargs))
 (local $$array_literal (ref null $int.array))
 (block $return.label
  (block
   ;; Varargs.this.Varargs.<init>((int[] $array_literal = new int[1],($array_literal[0] = 1),$array_literal));
   (drop (call $m_<init>__arrayOf_int__void@varargs.Varargs (local.get $this)(block (result (ref null $int.array))
    
    (local.set $$array_literal (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 1) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 0) (i32.const 1))
    (local.get $$array_literal)
   )))
  )
 )
 (local.get $this)
)

;;; void Varargs.test(int a, Object... args)
(func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (param $args (ref null $Object.array))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs)

;;; void Varargs.testCloneable(Cloneable... args)
(func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs
 (param $this.untyped (ref null $java.lang.Object))
 (param $args (ref null $Object.array))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs)

;;; void Varargs.testSerializable(Serializable... args)
(func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs
 (param $this.untyped (ref null $java.lang.Object))
 (param $args (ref null $Object.array))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs)

;;; void Varargs.fun(T... elements)
(func $m_fun__arrayOf_java_lang_Object__void@varargs.Varargs
 (param $elements (ref null $Object.array))
 (block $return.label
  (block
   ;; varargs.Varargs.$clinit();
   (call $$clinit__void@varargs.Varargs )
  )
 )
)

;;; void Varargs.bar(E a, E b)
(func $m_bar__java_lang_Object__java_lang_Object__void@varargs.Varargs
 (param $a (ref null $java.lang.Object))
 (param $b (ref null $java.lang.Object))
 (local $$array_literal (ref null $Object.array))
 (block $return.label
  (block
   ;; varargs.Varargs.$clinit();
   (call $$clinit__void@varargs.Varargs )
   ;; varargs.Varargs.fun((E[] $array_literal = new E[2],($array_literal[0] = a),($array_literal[1] = b),$array_literal));
   (call $m_fun__arrayOf_java_lang_Object__void@varargs.Varargs (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (local.get $a))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (local.get $b))
    (local.get $$array_literal)
   ))
  )
 )
)

;;; void Varargs.main()
(func $m_main__void@varargs.Varargs
 (param $this.untyped (ref null $java.lang.Object))
 (local $v (ref null $varargs.Varargs))
 (local $$array_literal (ref null $Object.array))
 (local $$array_literal_1 (ref null $Object.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $Object.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $$array_literal_6 (ref null $Object.array))
 (local $$array_literal_7 (ref null $int.array))
 (local $$array_literal_8 (ref null $Object.array))
 (local $$array_literal_9 (ref null $int.array))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block $return.label
  (block
   ;; Varargs v = new Varargs.<init>();
   
   (local.set $v (call $m_<init>__void@varargs.Varargs (struct.new_with_rtt $varargs.Varargs (global.get $varargs.Varargs.vtable) (i32.const 0) (global.get $varargs.Varargs.rtt))))
   ;; v.test(1,(Object[] $array_literal = new Object[0],$array_literal));
   (call_ref (local.get $v)(i32.const 1)(block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (local.get $$array_literal)
   )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.test(1,(Object[] $array_literal = new Object[1],($array_literal[0] = new Object.<init>()),$array_literal));
   (call_ref (local.get $v)(i32.const 1)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 1) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_1)) (i32.const 0) (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt))))
    (local.get $$array_literal_1)
   )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.test(1,(Object[] $array_literal = new Object[1],($array_literal[0] = new Object.<init>()),$array_literal));
   (call_ref (local.get $v)(i32.const 1)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 1) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt))))
    (local.get $$array_literal_2)
   )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.test(1,(Object[] $array_literal = new Object[0],$array_literal));
   (call_ref (local.get $v)(i32.const 1)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_3 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (local.get $$array_literal_3)
   )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.test(1,(Object[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 0),($array_literal[1] = -1),$array_literal),-1),$array_literal));
   (call_ref (local.get $v)(i32.const 1)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_4 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 0))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_5)
    )(i32.const -1)))
    (local.get $$array_literal_4)
   )(struct.get $varargs.Varargs.vtable $m_test__int__arrayOf_java_lang_Object__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.testCloneable((Object[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 0),($array_literal[1] = -1),$array_literal),-1),$array_literal));
   (call_ref (local.get $v)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_6 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_7 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_7)) (i32.const 0) (i32.const 0))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_7)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_7)
    )(i32.const -1)))
    (local.get $$array_literal_6)
   )(struct.get $varargs.Varargs.vtable $m_testCloneable__arrayOf_java_lang_Cloneable__void (struct.get $varargs.Varargs $vtable(local.get $v))))
   ;; v.testSerializable((Object[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 0),($array_literal[1] = -1),$array_literal),-1),$array_literal));
   (call_ref (local.get $v)(block (result (ref null $Object.array))
    
    (local.set $$array_literal_8 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_9 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_9)) (i32.const 0) (i32.const 0))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_9)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_9)
    )(i32.const -1)))
    (local.get $$array_literal_8)
   )(struct.get $varargs.Varargs.vtable $m_testSerializable__arrayOf_java_io_Serializable__void (struct.get $varargs.Varargs $vtable(local.get $v))))
  )
 )
)
(elem declare func $m_main__void@varargs.Varargs)

;;; void Varargs.$clinit()
(func $$clinit__void@varargs.Varargs
 (block $return.label
  (block
   ;; if (varargs.Varargs.$initialized) return;
   (if (global.get $f_$initialized__varargs_Varargs)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (varargs.Varargs.$initialized = true);
   (global.set $f_$initialized__varargs_Varargs (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Varargs.getClass()
(func $m_getClass__java_lang_Class@varargs.Varargs
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $varargs.Varargs))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Varargs.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getVarargs.Varargs();
   (local.set $return.value (call $$getVarargs.Varargs__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@varargs.Varargs)

;;; Code for varargs.Child [CLASS]
(type $varargs.Child (struct
 (field $vtable (ref null $varargs.Child.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $varargs.Child.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__int__arrayOf_java_lang_Object__void (mut (ref $function.$int__$Object.array__$void)))
 (field $m_testCloneable__arrayOf_java_lang_Cloneable__void (mut (ref $function.$Object.array__$void)))
 (field $m_testSerializable__arrayOf_java_io_Serializable__void (mut (ref $function.$Object.array__$void)))
 (field $m_main__void (mut (ref $function.__$void)))
))

;;; Child()
(func $m_<init>__void@varargs.Child
 (param $this (ref null $varargs.Child))
 (result (ref null $varargs.Child))
 (local $$array_literal (ref null $int.array))
 (block $return.label
  (block
   ;; Varargs.this.Varargs.<init>((int[] $array_literal = new int[1],($array_literal[0] = 1),$array_literal));
   (drop (call $m_<init>__arrayOf_int__void@varargs.Varargs (local.get $this)(block (result (ref null $int.array))
    
    (local.set $$array_literal (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 1) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 0) (i32.const 1))
    (local.get $$array_literal)
   )))
  )
 )
 (local.get $this)
)

;;; void Child.$clinit()
(func $$clinit__void@varargs.Child
 (block $return.label
  (block
   ;; if (varargs.Child.$initialized) return;
   (if (global.get $f_$initialized__varargs_Child)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (varargs.Child.$initialized = true);
   (global.set $f_$initialized__varargs_Child (i32.const 1))
   ;; varargs.Varargs.$clinit();
   (call $$clinit__void@varargs.Varargs )
  )
 )
)

;;; Class<?> Child.getClass()
(func $m_getClass__java_lang_Class@varargs.Child
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $varargs.Child))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $varargs.Child.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getVarargs.Child();
   (local.set $return.value (call $$getVarargs.Child__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@varargs.Child)

 ;;; Code for varargs.Varargs [vtable.init]
 (global.set $varargs.Varargs.vtable (struct.new_with_rtt $varargs.Varargs.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@varargs.Varargs) (ref.func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs) (ref.func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs) (ref.func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs) (ref.func $m_main__void@varargs.Varargs) (rtt.canon $varargs.Varargs.vtable)))

 ;;; Code for varargs.Child [vtable.init]
 (global.set $varargs.Child.vtable (struct.new_with_rtt $varargs.Child.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@varargs.Child) (ref.func $m_test__int__arrayOf_java_lang_Object__void@varargs.Varargs) (ref.func $m_testCloneable__arrayOf_java_lang_Cloneable__void@varargs.Varargs) (ref.func $m_testSerializable__arrayOf_java_io_Serializable__void@varargs.Varargs) (ref.func $m_main__void@varargs.Varargs) (rtt.canon $varargs.Child.vtable)))

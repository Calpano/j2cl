;;; Code for continuestatement.ContinueStatement [vtable]
(global $continuestatement.ContinueStatement.vtable (mut (ref null $continuestatement.ContinueStatement.vtable)) (ref.null $continuestatement.ContinueStatement.vtable))

;;; Code for continuestatement.ContinueStatement [static fields]
(global $f_$initialized__continuestatement_ContinueStatement (mut i32) (i32.const 0))

;;; Code for continuestatement.ContinueStatement [CLASS]
(type $continuestatement.ContinueStatement (struct
 (field $vtable (ref $continuestatement.ContinueStatement.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $continuestatement.ContinueStatement.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; ContinueStatement()
(func $m_<init>__void@continuestatement.ContinueStatement
 (param $this (ref null $continuestatement.ContinueStatement))
 (result (ref null $continuestatement.ContinueStatement))
 (block $return.label
  ;;@ continuestatement/ContinueStatement.java:18:13
  (block
   ;; continuestatement.ContinueStatement.$clinit();
   ;;@ continuestatement/ContinueStatement.java:18:13
   (call $$clinit__void@continuestatement.ContinueStatement )
   ;; Object.this.Object.<init>();
   ;;@ continuestatement/ContinueStatement.java:18:13
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ContinueStatement.test()
(func $m_test__void@continuestatement.ContinueStatement
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $continuestatement.ContinueStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $continuestatement.ContinueStatement.rtt)))
 (block $return.label
  ;;@ continuestatement/ContinueStatement.java:19:14
  (block
   ;; LOOP: for (;true;) {
   ;;@ continuestatement/ContinueStatement.java:20:4
   
   (block $LOOP.BREAK
    (loop
     (block $LOOP.CONTINUE
      ;;@ continuestatement/ContinueStatement.java:20:15
      (block
       ;; continue LOOP;
       ;;@ continuestatement/ContinueStatement.java:21:6
       (br $LOOP.CONTINUE)
      )
     )
     (br 0)
     
    )
   )
  )
 )
)
(elem declare func $m_test__void@continuestatement.ContinueStatement)

;;; void ContinueStatement.$clinit()
(func $$clinit__void@continuestatement.ContinueStatement
 (block $return.label
  ;;@ continuestatement/ContinueStatement.java:18:13
  (block
   ;; if (continuestatement.ContinueStatement.$initialized) return;
   ;;@ continuestatement/ContinueStatement.java:18:13
   (if (global.get $f_$initialized__continuestatement_ContinueStatement)
    (then
     ;; return;
     ;;@ continuestatement/ContinueStatement.java:18:13
     (br $return.label)
    )
   )
   ;; (continuestatement.ContinueStatement.$initialized = true);
   ;;@ continuestatement/ContinueStatement.java:18:13
   (global.set $f_$initialized__continuestatement_ContinueStatement (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ continuestatement/ContinueStatement.java:18:13
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> ContinueStatement.getClass()
(func $m_getClass__java_lang_Class@continuestatement.ContinueStatement
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $continuestatement.ContinueStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $continuestatement.ContinueStatement.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getContinuestatement.ContinueStatement();
   (local.set $return.value (call $$getContinuestatement.ContinueStatement__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@continuestatement.ContinueStatement)

 ;;; Code for continuestatement.ContinueStatement [vtable.init]
 (global.set $continuestatement.ContinueStatement.vtable
  (struct.new_with_rtt $continuestatement.ContinueStatement.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@continuestatement.ContinueStatement)
   (ref.func $m_test__void@continuestatement.ContinueStatement)
   (rtt.canon $continuestatement.ContinueStatement.vtable)
  )
 )

 ;;; Code for continuestatement.ContinueStatement [itable.init]
 (global.set $continuestatement.ContinueStatement.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

package jsinnerclass

open class Main {
 companion object {
  @JvmStatic
  fun main(vararg args: String?) {
   assert(jsinnerclass.`Main$Outer`().method() == 5)
  }
 }
}

open class `Main$Outer` {
 @JvmField internal var a: Int = 2

 open fun method(): Int {
  return TODO("expression.qualify needs rendering: Outer.this)").getB() + this.a
 }
}

open class `Main$Outer$Inner` {
 @JvmField val `this`: jsinnerclass.`Main$Outer`?

 private var b: Int = 0

 constructor() {
  this.b = this.`this`!!.a + 1
 }

 open fun getB(): Int {
  return this.b
 }
}

;;; Code for packageinfo.Outer [vtable]
(global $packageinfo.Outer.vtable (mut (ref null $packageinfo.Outer.vtable)) (ref.null $packageinfo.Outer.vtable))

;;; Code for packageinfo.Outer.Inner [vtable]
(global $packageinfo.Outer.Inner.vtable (mut (ref null $packageinfo.Outer.Inner.vtable)) (ref.null $packageinfo.Outer.Inner.vtable))

;;; Code for packageinfo.subpackage.Foo [vtable]
(global $packageinfo.subpackage.Foo.vtable (mut (ref null $packageinfo.subpackage.Foo.vtable)) (ref.null $packageinfo.subpackage.Foo.vtable))

;;; Code for packageinfo.Outer [static fields]
(global $f_$initialized__packageinfo_Outer (mut i32) (i32.const 0))

;;; Code for packageinfo.Outer.Inner [static fields]
(global $f_$initialized__packageinfo_Outer_Inner (mut i32) (i32.const 0))

;;; Code for packageinfo.subpackage.Foo [static fields]
(global $f_$initialized__packageinfo_subpackage_Foo (mut i32) (i32.const 0))

;;; Code for packageinfo.Outer [CLASS]
(type $packageinfo.Outer (struct
 (field $vtable (ref $packageinfo.Outer.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $packageinfo.Outer.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; Outer()
(func $m_<init>__void@packageinfo.Outer
 (param $this (ref null $packageinfo.Outer))
 (result (ref null $packageinfo.Outer))
 (block $return.label
  ;;@ packageinfo/Outer.java:21:13
  (block
   ;; packageinfo.Outer.$clinit();
   ;;@ packageinfo/Outer.java:21:13
   (call $$clinit__void@packageinfo.Outer )
   ;; Object.this.Object.<init>();
   ;;@ packageinfo/Outer.java:21:13
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Outer.$clinit()
(func $$clinit__void@packageinfo.Outer
 (block $return.label
  ;;@ packageinfo/Outer.java:21:13
  (block
   ;; if (packageinfo.Outer.$initialized) return;
   ;;@ packageinfo/Outer.java:21:13
   (if (global.get $f_$initialized__packageinfo_Outer)
    (then
     ;; return;
     ;;@ packageinfo/Outer.java:21:13
     (br $return.label)
    )
   )
   ;; (packageinfo.Outer.$initialized = true);
   ;;@ packageinfo/Outer.java:21:13
   (global.set $f_$initialized__packageinfo_Outer (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ packageinfo/Outer.java:21:13
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Outer.getClass()
(func $m_getClass__java_lang_Class@packageinfo.Outer
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $packageinfo.Outer))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $packageinfo.Outer.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getPackageinfo.Outer();
   (local.set $return.value (call $$getPackageinfo.Outer__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@packageinfo.Outer)

;;; Code for packageinfo.Outer.Inner [CLASS]
(type $packageinfo.Outer.Inner (struct
 (field $vtable (ref $packageinfo.Outer.Inner.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__packageinfo_Outer_Inner (mut (ref null $packageinfo.Outer)))
))
(type $packageinfo.Outer.Inner.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; Inner(Outer $outer_this)
(func $m_<init>__packageinfo_Outer__void@packageinfo.Outer.Inner
 (param $this (ref null $packageinfo.Outer.Inner))
 (param $$outer_this (ref null $packageinfo.Outer))
 (result (ref null $packageinfo.Outer.Inner))
 (block $return.label
  ;;@ packageinfo/Outer.java:24:15
  (block
   ;; packageinfo.Outer.Inner.$clinit();
   ;;@ packageinfo/Outer.java:24:15
   (call $$clinit__void@packageinfo.Outer.Inner )
   ;; (Inner.this.this = $outer_this);
   ;;@ packageinfo/Outer.java:24:15
   (struct.set $packageinfo.Outer.Inner $$outer_this__packageinfo_Outer_Inner(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   ;;@ packageinfo/Outer.java:24:15
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Inner.$clinit()
(func $$clinit__void@packageinfo.Outer.Inner
 (block $return.label
  ;;@ packageinfo/Outer.java:24:15
  (block
   ;; if (packageinfo.Outer.Inner.$initialized) return;
   ;;@ packageinfo/Outer.java:24:15
   (if (global.get $f_$initialized__packageinfo_Outer_Inner)
    (then
     ;; return;
     ;;@ packageinfo/Outer.java:24:15
     (br $return.label)
    )
   )
   ;; (packageinfo.Outer.Inner.$initialized = true);
   ;;@ packageinfo/Outer.java:24:15
   (global.set $f_$initialized__packageinfo_Outer_Inner (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ packageinfo/Outer.java:24:15
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Inner.getClass()
(func $m_getClass__java_lang_Class@packageinfo.Outer.Inner
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $packageinfo.Outer.Inner))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $packageinfo.Outer.Inner.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getPackageinfo.Outer.Inner();
   (local.set $return.value (call $$getPackageinfo.Outer.Inner__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@packageinfo.Outer.Inner)

;;; Code for packageinfo.subpackage.Foo [CLASS]
(type $packageinfo.subpackage.Foo (struct
 (field $vtable (ref $packageinfo.subpackage.Foo.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_outer__packageinfo_subpackage_Foo (mut (ref null $packageinfo.Outer)))
))
(type $packageinfo.subpackage.Foo.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; Foo()
(func $m_<init>__void@packageinfo.subpackage.Foo
 (param $this (ref null $packageinfo.subpackage.Foo))
 (result (ref null $packageinfo.subpackage.Foo))
 (block $return.label
  ;;@ packageinfo/subpackage/Foo.java:20:13
  (block
   ;; packageinfo.subpackage.Foo.$clinit();
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (call $$clinit__void@packageinfo.subpackage.Foo )
   ;; Object.this.Object.<init>();
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; Foo.this.$init();
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (call $$init__void_$p_packageinfo_subpackage_Foo@packageinfo.subpackage.Foo (local.get $this))
  )
 )
 (local.get $this)
)

;;; void Foo.$init()
(func $$init__void_$p_packageinfo_subpackage_Foo@packageinfo.subpackage.Foo
 (param $this (ref null $packageinfo.subpackage.Foo))
 (block $return.label
  ;;@ packageinfo/subpackage/Foo.java:20:13
  (block
   ;; (Foo.this.outer = new Outer.<init>());
   ;;@ packageinfo/subpackage/Foo.java:22:2
   (struct.set $packageinfo.subpackage.Foo $f_outer__packageinfo_subpackage_Foo(local.get $this) (call $m_<init>__void@packageinfo.Outer (struct.new_with_rtt $packageinfo.Outer (ref.as_non_null (global.get $packageinfo.Outer.vtable)) (ref.as_non_null (global.get $packageinfo.Outer.itable)) (i32.const 0) (global.get $packageinfo.Outer.rtt))))
  )
 )
)

;;; void Foo.$clinit()
(func $$clinit__void@packageinfo.subpackage.Foo
 (block $return.label
  ;;@ packageinfo/subpackage/Foo.java:20:13
  (block
   ;; if (packageinfo.subpackage.Foo.$initialized) return;
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (if (global.get $f_$initialized__packageinfo_subpackage_Foo)
    (then
     ;; return;
     ;;@ packageinfo/subpackage/Foo.java:20:13
     (br $return.label)
    )
   )
   ;; (packageinfo.subpackage.Foo.$initialized = true);
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (global.set $f_$initialized__packageinfo_subpackage_Foo (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ packageinfo/subpackage/Foo.java:20:13
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Foo.getClass()
(func $m_getClass__java_lang_Class@packageinfo.subpackage.Foo
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $packageinfo.subpackage.Foo))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $packageinfo.subpackage.Foo.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getPackageinfo.subpackage.Foo();
   (local.set $return.value (call $$getPackageinfo.subpackage.Foo__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@packageinfo.subpackage.Foo)

 ;;; Code for packageinfo.Outer [vtable.init]
 (global.set $packageinfo.Outer.vtable
  (struct.new_with_rtt $packageinfo.Outer.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@packageinfo.Outer)
   (rtt.canon $packageinfo.Outer.vtable)
  )
 )

 ;;; Code for packageinfo.Outer [itable.init]
 (global.set $packageinfo.Outer.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for packageinfo.Outer.Inner [vtable.init]
 (global.set $packageinfo.Outer.Inner.vtable
  (struct.new_with_rtt $packageinfo.Outer.Inner.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@packageinfo.Outer.Inner)
   (rtt.canon $packageinfo.Outer.Inner.vtable)
  )
 )

 ;;; Code for packageinfo.Outer.Inner [itable.init]
 (global.set $packageinfo.Outer.Inner.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for packageinfo.subpackage.Foo [vtable.init]
 (global.set $packageinfo.subpackage.Foo.vtable
  (struct.new_with_rtt $packageinfo.subpackage.Foo.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@packageinfo.subpackage.Foo)
   (rtt.canon $packageinfo.subpackage.Foo.vtable)
  )
 )

 ;;; Code for packageinfo.subpackage.Foo [itable.init]
 (global.set $packageinfo.subpackage.Foo.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

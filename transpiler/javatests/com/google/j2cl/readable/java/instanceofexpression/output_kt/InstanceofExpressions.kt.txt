package instanceofexpression

open class InstanceofExpressions {
 constructor(): super()

 open fun testInstanceofClass() {
  val `object`: kotlin.Any? = instanceofexpression.InstanceofExpressions()
  var b: Boolean
  b = `object` is kotlin.Any
  b = `object` is instanceofexpression.InstanceofExpressions
  b = `object` is kotlin.String
 }

 open fun testInstanceofInterface() {
  val o: kotlin.Any? = (java.lang.Object() as kotlin.Any)
  var b: Boolean
  b = o is java.io.Serializable
  b = instanceofexpression.`InstanceofExpressions$1`(this) is java.io.Serializable
 }

 open fun testInstanceofBoxedType() {
  val b: kotlin.Any? = (java.lang.Integer(1) as kotlin.Int)
  var a: Boolean = b is kotlin.Byte
  a = b is kotlin.Double
  a = b is kotlin.Float
  a = b is kotlin.Int
  a = b is kotlin.Long
  a = b is kotlin.Short
  a = b is kotlin.Number
  a = b is java.lang.Character
  a = b is kotlin.Boolean
  val d: kotlin.Double? = null
  a = d is kotlin.Any
  a = d is kotlin.Number
  a = d is kotlin.Double
 }

 open fun testInstanceOfArray() {
  val `object`: kotlin.Any? = (java.lang.Object() as kotlin.Any)
  val objectArray: Array<kotlin.Any?>? = arrayOfNulls<kotlin.Any?>(0)
  val objectDoubleArray: Array<Array<kotlin.Any?>?>? = arrayOfNulls<Array<kotlin.Any?>?>(0)
  val stringArray: Array<kotlin.String?>? = arrayOfNulls<kotlin.String?>(0)
  var a: Boolean
  a = `object` is Array<kotlin.Any?>
  a = `object` is Array<Array<kotlin.String?>?>
  a = `object` is Array<kotlin.Any?>
  a = `object` is Array<Array<kotlin.String?>?>
  a = objectArray is Array<kotlin.Any?>
  a = objectArray is Array<kotlin.String?>
  a = objectArray is Array<Array<kotlin.Any?>?>
  a = objectArray is Array<Array<kotlin.String?>?>
  a = objectDoubleArray is Array<kotlin.Any?>
  a = objectDoubleArray is Array<Array<kotlin.Any?>?>
  a = objectDoubleArray is Array<Array<kotlin.String?>?>
  a = stringArray is Array<kotlin.Any?>
  a = stringArray is Array<kotlin.String?>
 }
}

open class `InstanceofExpressions$1`: java.io.Serializable {
 @JvmField val `this`: instanceofexpression.InstanceofExpressions?

 internal constructor(`$outer_this`: instanceofexpression.InstanceofExpressions?): super() {
  this.`this` = `$outer_this`
 }
}

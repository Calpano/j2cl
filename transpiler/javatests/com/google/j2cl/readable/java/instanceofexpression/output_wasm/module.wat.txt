;;; Code for instanceofexpression.InstanceofExpressions

;;; CLASS  InstanceofExpressions
(type $instanceofexpression.InstanceofExpressions (struct
 (field $vtable (ref null $instanceofexpression.InstanceofExpressions.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $instanceofexpression.InstanceofExpressions.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_testInstanceofClass__void (mut (ref $function.__$void)))
 (field $m_testInstanceofInterface__void (mut (ref $function.__$void)))
 (field $m_testInstanceofBoxedType__void (mut (ref $function.__$void)))
 (field $m_testInstanceOfArray__void (mut (ref $function.__$void)))
))
(global $instanceofexpression.InstanceofExpressions.vtable (mut (ref null $instanceofexpression.InstanceofExpressions.vtable)) (ref.null $instanceofexpression.InstanceofExpressions.vtable))

;;; InstanceofExpressions()
(func $m_<init>__void@instanceofexpression.InstanceofExpressions
 (param $this (ref null $instanceofexpression.InstanceofExpressions))
 (result (ref null $instanceofexpression.InstanceofExpressions))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void InstanceofExpressions.testInstanceofClass()
(func $m_testInstanceofClass__void@instanceofexpression.InstanceofExpressions
 (param $this.untyped (ref null $java.lang.Object))
 (local $object (ref null $java.lang.Object))
 (local $b i32)
 (local $this (ref null $instanceofexpression.InstanceofExpressions))
 (local.set $this (ref.cast $java.lang.Object $instanceofexpression.InstanceofExpressions (local.get $this.untyped) (global.get $instanceofexpression.InstanceofExpressions.rtt)))
 (block $return.label
  (block
   ;; Object object = new InstanceofExpressions.<init>();
   
   (local.set $object (call $m_<init>__void@instanceofexpression.InstanceofExpressions (struct.new_with_rtt $instanceofexpression.InstanceofExpressions (global.get $instanceofexpression.InstanceofExpressions.vtable) (i32.const 0) (global.get $instanceofexpression.InstanceofExpressions.rtt))))
   ;; boolean b;
   
   ;; (b = object instanceof Object);
   (local.set $b (ref.test $java.lang.Object $java.lang.Object (local.get $object) (global.get $java.lang.Object.rtt)))
   ;; (b = object instanceof InstanceofExpressions);
   (local.set $b (ref.test $java.lang.Object $instanceofexpression.InstanceofExpressions (local.get $object) (global.get $instanceofexpression.InstanceofExpressions.rtt)))
   ;; (b = object instanceof String);
   (local.set $b (ref.test $java.lang.Object $java.lang.String (local.get $object) (global.get $java.lang.String.rtt)))
  )
 )
)
(elem declare func $m_testInstanceofClass__void@instanceofexpression.InstanceofExpressions)

;;; void InstanceofExpressions.testInstanceofInterface()
(func $m_testInstanceofInterface__void@instanceofexpression.InstanceofExpressions
 (param $this.untyped (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $b i32)
 (local $this (ref null $instanceofexpression.InstanceofExpressions))
 (local.set $this (ref.cast $java.lang.Object $instanceofexpression.InstanceofExpressions (local.get $this.untyped) (global.get $instanceofexpression.InstanceofExpressions.rtt)))
 (block $return.label
  (block
   ;; Object o = new Object.<init>();
   
   (local.set $o (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt))))
   ;; boolean b;
   
   ;; (b = o instanceof Serializable);
   (local.set $b (i32.const 0))
   ;; (b = new $1.<init>(InstanceofExpressions.this) instanceof Serializable);
   (local.set $b (i32.const 0))
  )
 )
)
(elem declare func $m_testInstanceofInterface__void@instanceofexpression.InstanceofExpressions)

;;; void InstanceofExpressions.testInstanceofBoxedType()
(func $m_testInstanceofBoxedType__void@instanceofexpression.InstanceofExpressions
 (param $this.untyped (ref null $java.lang.Object))
 (local $b (ref null $java.lang.Object))
 (local $a i32)
 (local $d (ref null $java.lang.Double))
 (local $this (ref null $instanceofexpression.InstanceofExpressions))
 (local.set $this (ref.cast $java.lang.Object $instanceofexpression.InstanceofExpressions (local.get $this.untyped) (global.get $instanceofexpression.InstanceofExpressions.rtt)))
 (block $return.label
  (block
   ;; Object b = new Integer.<init>(1);
   
   (local.set $b (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (global.get $java.lang.Integer.vtable) (i32.const 0) (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; boolean a = b instanceof Byte;
   
   (local.set $a (ref.test $java.lang.Object $java.lang.Byte (local.get $b) (global.get $java.lang.Byte.rtt)))
   ;; (a = b instanceof Double);
   (local.set $a (ref.test $java.lang.Object $java.lang.Double (local.get $b) (global.get $java.lang.Double.rtt)))
   ;; (a = b instanceof Float);
   (local.set $a (ref.test $java.lang.Object $java.lang.Float (local.get $b) (global.get $java.lang.Float.rtt)))
   ;; (a = b instanceof Integer);
   (local.set $a (ref.test $java.lang.Object $java.lang.Integer (local.get $b) (global.get $java.lang.Integer.rtt)))
   ;; (a = b instanceof Long);
   (local.set $a (ref.test $java.lang.Object $java.lang.Long (local.get $b) (global.get $java.lang.Long.rtt)))
   ;; (a = b instanceof Short);
   (local.set $a (ref.test $java.lang.Object $java.lang.Short (local.get $b) (global.get $java.lang.Short.rtt)))
   ;; (a = b instanceof Number);
   (local.set $a (ref.test $java.lang.Object $java.lang.Number (local.get $b) (global.get $java.lang.Number.rtt)))
   ;; (a = b instanceof Character);
   (local.set $a (ref.test $java.lang.Object $java.lang.Character (local.get $b) (global.get $java.lang.Character.rtt)))
   ;; (a = b instanceof Boolean);
   (local.set $a (ref.test $java.lang.Object $java.lang.Boolean (local.get $b) (global.get $java.lang.Boolean.rtt)))
   ;; Double d = null;
   
   (local.set $d (ref.null $java.lang.Double))
   ;; (a = d instanceof Object);
   (local.set $a (ref.test $java.lang.Object $java.lang.Object (local.get $d) (global.get $java.lang.Object.rtt)))
   ;; (a = d instanceof Number);
   (local.set $a (ref.test $java.lang.Object $java.lang.Number (local.get $d) (global.get $java.lang.Number.rtt)))
   ;; (a = d instanceof Double);
   (local.set $a (ref.test $java.lang.Object $java.lang.Double (local.get $d) (global.get $java.lang.Double.rtt)))
  )
 )
)
(elem declare func $m_testInstanceofBoxedType__void@instanceofexpression.InstanceofExpressions)

;;; void InstanceofExpressions.testInstanceOfArray()
(func $m_testInstanceOfArray__void@instanceofexpression.InstanceofExpressions
 (param $this.untyped (ref null $java.lang.Object))
 (local $object (ref null $java.lang.Object))
 (local $objectArray (ref null $Object.array))
 (local $objectDoubleArray (ref null $Object.array))
 (local $stringArray (ref null $Object.array))
 (local $a i32)
 (local $this (ref null $instanceofexpression.InstanceofExpressions))
 (local.set $this (ref.cast $java.lang.Object $instanceofexpression.InstanceofExpressions (local.get $this.untyped) (global.get $instanceofexpression.InstanceofExpressions.rtt)))
 (block $return.label
  (block
   ;; Object object = new Object.<init>();
   
   (local.set $object (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt))))
   ;; Object[] objectArray = new Object[0];
   
   (local.set $objectArray (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; Object[][] objectDoubleArray = new Object[0][];
   
   (local.set $objectDoubleArray (ref.null $Object.array))
   ;; String[] stringArray = new String[0];
   
   (local.set $stringArray (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; boolean a;
   
   ;; (a = object instanceof Object[]);
   (local.set $a (i32.const 0))
   ;; (a = object instanceof String[][]);
   (local.set $a (i32.const 0))
   ;; (a = object instanceof Object[]);
   (local.set $a (i32.const 0))
   ;; (a = object instanceof String[][]);
   (local.set $a (i32.const 0))
   ;; (a = objectArray instanceof Object[]);
   (local.set $a (i32.const 0))
   ;; (a = objectArray instanceof String[]);
   (local.set $a (i32.const 0))
   ;; (a = objectArray instanceof Object[][]);
   (local.set $a (i32.const 0))
   ;; (a = objectArray instanceof String[][]);
   (local.set $a (i32.const 0))
   ;; (a = objectDoubleArray instanceof Object[]);
   (local.set $a (i32.const 0))
   ;; (a = objectDoubleArray instanceof Object[][]);
   (local.set $a (i32.const 0))
   ;; (a = objectDoubleArray instanceof String[][]);
   (local.set $a (i32.const 0))
   ;; (a = stringArray instanceof Object[]);
   (local.set $a (i32.const 0))
   ;; (a = stringArray instanceof String[]);
   (local.set $a (i32.const 0))
  )
 )
)
(elem declare func $m_testInstanceOfArray__void@instanceofexpression.InstanceofExpressions)

;;; CLASS  <anonymous> implements Serializable
(type $instanceofexpression.InstanceofExpressions.1 (struct
 (field $vtable (ref null $instanceofexpression.InstanceofExpressions.1.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
 (field $this@instanceofexpression.InstanceofExpressions.1 (mut (ref null $instanceofexpression.InstanceofExpressions)))
))
(type $instanceofexpression.InstanceofExpressions.1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $instanceofexpression.InstanceofExpressions.1.vtable (mut (ref null $instanceofexpression.InstanceofExpressions.1.vtable)) (ref.null $instanceofexpression.InstanceofExpressions.1.vtable))

;;; <anonymous> implements Serializable(InstanceofExpressions $outer_this)
(func $m_<init>__instanceofexpression_InstanceofExpressions__void_$pp_instanceofexpression@instanceofexpression.InstanceofExpressions.1
 (param $this (ref null $instanceofexpression.InstanceofExpressions.1))
 (param $$outer_this (ref null $instanceofexpression.InstanceofExpressions))
 (result (ref null $instanceofexpression.InstanceofExpressions.1))
 (block $return.label
  (block
   ;; ($1.this.this = $outer_this);
   (struct.set $instanceofexpression.InstanceofExpressions.1 $this@instanceofexpression.InstanceofExpressions.1(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; Code for instanceofexpression.InstanceofExpressions [vtable]
 (global.set $instanceofexpression.InstanceofExpressions.vtable (struct.new_with_rtt $instanceofexpression.InstanceofExpressions.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_testInstanceofClass__void@instanceofexpression.InstanceofExpressions) (ref.func $m_testInstanceofInterface__void@instanceofexpression.InstanceofExpressions) (ref.func $m_testInstanceofBoxedType__void@instanceofexpression.InstanceofExpressions) (ref.func $m_testInstanceOfArray__void@instanceofexpression.InstanceofExpressions) (rtt.canon $instanceofexpression.InstanceofExpressions.vtable)))
;;; Code for instanceofexpression.InstanceofExpressions.1 [vtable]
 (global.set $instanceofexpression.InstanceofExpressions.1.vtable (struct.new_with_rtt $instanceofexpression.InstanceofExpressions.1.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $instanceofexpression.InstanceofExpressions.1.vtable)))
))
(start $.runtime.init)


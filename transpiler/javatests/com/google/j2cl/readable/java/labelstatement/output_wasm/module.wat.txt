;;; Code for labelstatement.LabeledStatement

;;; CLASS  LabeledStatement

(type $labelstatement.LabeledStatement (struct
))

;;; LabeledStatement()
(func $<init><>:void@labelstatement.LabeledStatement
 (param $this (ref null $labelstatement.LabeledStatement))
 (result (ref null $labelstatement.LabeledStatement))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void LabeledStatement.test()
(func $test<>:void@labelstatement.LabeledStatement
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; LABEL: for (;true;) {
   
   (block $LABEL.BREAK
    (loop
     (br_if 1 (i32.eqz (i32.const 1)))
     (block $LABEL.CONTINUE
      (block
       ;; break LABEL;
       (br $LABEL.BREAK)
      )
     )
     (br 0)
     
    )
   )
   ;; LABEL1: for (;true;) {
   
   (block $LABEL1.BREAK
    (loop
     (br_if 1 (i32.eqz (i32.const 1)))
     (block $LABEL1.CONTINUE
      (block
       ;; continue LABEL1;
       (br $LABEL1.CONTINUE)
      )
     )
     (br 0)
     
    )
   )
  )
 )
)


;;; Code for bridgejsmethod.Main [vtable]
(global $bridgejsmethod.Main.vtable (mut (ref null $bridgejsmethod.Main.vtable)) (ref.null $bridgejsmethod.Main.vtable))

;;; Code for bridgejsmethod.Main.A [vtable]
(global $bridgejsmethod.Main.A.vtable (mut (ref null $bridgejsmethod.Main.A.vtable)) (ref.null $bridgejsmethod.Main.A.vtable))

;;; Code for bridgejsmethod.Main.B [vtable]
(global $bridgejsmethod.Main.B.vtable (mut (ref null $bridgejsmethod.Main.B.vtable)) (ref.null $bridgejsmethod.Main.B.vtable))

;;; Code for bridgejsmethod.Main.C [vtable]
(global $bridgejsmethod.Main.C.vtable (mut (ref null $bridgejsmethod.Main.C.vtable)) (ref.null $bridgejsmethod.Main.C.vtable))

;;; Code for bridgejsmethod.Main.D [vtable]
(global $bridgejsmethod.Main.D.vtable (mut (ref null $bridgejsmethod.Main.D.vtable)) (ref.null $bridgejsmethod.Main.D.vtable))

;;; Code for bridgejsmethod.Main.E [vtable]
(global $bridgejsmethod.Main.E.vtable (mut (ref null $bridgejsmethod.Main.E.vtable)) (ref.null $bridgejsmethod.Main.E.vtable))

;;; Code for bridgejsmethod.Main.F [vtable]
(global $bridgejsmethod.Main.F.vtable (mut (ref null $bridgejsmethod.Main.F.vtable)) (ref.null $bridgejsmethod.Main.F.vtable))

;;; Code for bridgejsmethod.Main.H [vtable]
(global $bridgejsmethod.Main.H.vtable (mut (ref null $bridgejsmethod.Main.H.vtable)) (ref.null $bridgejsmethod.Main.H.vtable))

;;; Code for bridgejsmethod.Main.K [vtable]
(global $bridgejsmethod.Main.K.vtable (mut (ref null $bridgejsmethod.Main.K.vtable)) (ref.null $bridgejsmethod.Main.K.vtable))

;;; Code for bridgejsmethod.Main.L [vtable]
(global $bridgejsmethod.Main.L.vtable (mut (ref null $bridgejsmethod.Main.L.vtable)) (ref.null $bridgejsmethod.Main.L.vtable))

;;; Code for bridgejsmethod.Main.N [vtable]
(global $bridgejsmethod.Main.N.vtable (mut (ref null $bridgejsmethod.Main.N.vtable)) (ref.null $bridgejsmethod.Main.N.vtable))

;;; Code for bridgejsmethod.Main.O [vtable]
(global $bridgejsmethod.Main.O.vtable (mut (ref null $bridgejsmethod.Main.O.vtable)) (ref.null $bridgejsmethod.Main.O.vtable))

;;; Code for bridgejsmethod.Main.Q [vtable]
(global $bridgejsmethod.Main.Q.vtable (mut (ref null $bridgejsmethod.Main.Q.vtable)) (ref.null $bridgejsmethod.Main.Q.vtable))

;;; Code for bridgejsmethod.Main.R [vtable]
(global $bridgejsmethod.Main.R.vtable (mut (ref null $bridgejsmethod.Main.R.vtable)) (ref.null $bridgejsmethod.Main.R.vtable))

;;; Code for bridgejsmethod.Main.S [vtable]
(global $bridgejsmethod.Main.S.vtable (mut (ref null $bridgejsmethod.Main.S.vtable)) (ref.null $bridgejsmethod.Main.S.vtable))

;;; Code for bridgejsmethod.Main.GrandParent [vtable]
(global $bridgejsmethod.Main.GrandParent.vtable (mut (ref null $bridgejsmethod.Main.GrandParent.vtable)) (ref.null $bridgejsmethod.Main.GrandParent.vtable))

;;; Code for bridgejsmethod.Main.Parent [vtable]
(global $bridgejsmethod.Main.Parent.vtable (mut (ref null $bridgejsmethod.Main.Parent.vtable)) (ref.null $bridgejsmethod.Main.Parent.vtable))

;;; Code for bridgejsmethod.Main.Child [vtable]
(global $bridgejsmethod.Main.Child.vtable (mut (ref null $bridgejsmethod.Main.Child.vtable)) (ref.null $bridgejsmethod.Main.Child.vtable))

;;; Code for bridgejsmethod.Main [static fields]
(global $f_$initialized__bridgejsmethod_Main (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.A [static fields]
(global $f_$initialized__bridgejsmethod_Main_A (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.I [static fields]
(global $f_$initialized__bridgejsmethod_Main_I (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.J [static fields]
(global $f_$initialized__bridgejsmethod_Main_J (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.B [static fields]
(global $f_$initialized__bridgejsmethod_Main_B (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.C [static fields]
(global $f_$initialized__bridgejsmethod_Main_C (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.D [static fields]
(global $f_$initialized__bridgejsmethod_Main_D (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.E [static fields]
(global $f_$initialized__bridgejsmethod_Main_E (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.F [static fields]
(global $f_$initialized__bridgejsmethod_Main_F (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.G [static fields]
(global $f_$initialized__bridgejsmethod_Main_G (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.H [static fields]
(global $f_$initialized__bridgejsmethod_Main_H (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.K [static fields]
(global $f_$initialized__bridgejsmethod_Main_K (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.L [static fields]
(global $f_$initialized__bridgejsmethod_Main_L (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.M [static fields]
(global $f_$initialized__bridgejsmethod_Main_M (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.N [static fields]
(global $f_$initialized__bridgejsmethod_Main_N (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.O [static fields]
(global $f_$initialized__bridgejsmethod_Main_O (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.P [static fields]
(global $f_$initialized__bridgejsmethod_Main_P (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.Q [static fields]
(global $f_$initialized__bridgejsmethod_Main_Q (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.R [static fields]
(global $f_$initialized__bridgejsmethod_Main_R (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.S [static fields]
(global $f_$initialized__bridgejsmethod_Main_S (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.GrandParent [static fields]
(global $f_$initialized__bridgejsmethod_Main_GrandParent (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.Parent [static fields]
(global $f_$initialized__bridgejsmethod_Main_Parent (mut i32) (i32.const 0))

;;; Code for bridgejsmethod.Main.Child [static fields]
(global $f_$initialized__bridgejsmethod_Main_Child (mut i32) (i32.const 0))

 ;;; Code for bridgejsmethod.Main [vtable.init]
 (global.set $bridgejsmethod.Main.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main)
   (rtt.canon $bridgejsmethod.Main.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main [itable.init]
 (global.set $bridgejsmethod.Main.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.A [vtable.init]
 (global.set $bridgejsmethod.Main.A.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.A.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.A)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.A)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A)
   (rtt.canon $bridgejsmethod.Main.A.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.A [itable.init]
 (global.set $bridgejsmethod.Main.A.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.B [vtable.init]
 (global.set $bridgejsmethod.Main.B.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.B.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.B)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.B)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.B)
   (ref.func $m_fun__java_lang_String__java_lang_String@bridgejsmethod.Main.B)
   (ref.func $m_bar__java_lang_String__void@bridgejsmethod.Main.B)
   (rtt.canon $bridgejsmethod.Main.B.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.B [itable.init]
 (global.set $bridgejsmethod.Main.B.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.C [vtable.init]
 (global.set $bridgejsmethod.Main.C.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.C.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.C)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.C)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A)
   (ref.func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.C)
   (rtt.canon $bridgejsmethod.Main.C.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.C [itable.init]
 (global.set $bridgejsmethod.Main.C.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.D [vtable.init]
 (global.set $bridgejsmethod.Main.D.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.D.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.D)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.D)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A)
   (ref.func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.D)
   (ref.func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.D)
   (rtt.canon $bridgejsmethod.Main.D.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.D [itable.init]
 (global.set $bridgejsmethod.Main.D.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.D.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.I.vtable
  (ref.func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.D)
  (rtt.canon $bridgejsmethod.Main.I.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.E [vtable.init]
 (global.set $bridgejsmethod.Main.E.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.E.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.E)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.B)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.B)
   (ref.func $m_fun__java_lang_String__java_lang_String@bridgejsmethod.Main.B)
   (ref.func $m_bar__java_lang_String__void@bridgejsmethod.Main.B)
   (rtt.canon $bridgejsmethod.Main.E.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.E [itable.init]
 (global.set $bridgejsmethod.Main.E.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.E.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.J.vtable
  (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.B)
  (rtt.canon $bridgejsmethod.Main.J.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.F [vtable.init]
 (global.set $bridgejsmethod.Main.F.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.F.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.F)
   (ref.func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.F)
   (ref.func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A)
   (ref.func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.F)
   (ref.func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.F)
   (rtt.canon $bridgejsmethod.Main.F.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.F [itable.init]
 (global.set $bridgejsmethod.Main.F.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.F.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.I.vtable
  (ref.func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.F)
  (rtt.canon $bridgejsmethod.Main.I.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.H [vtable.init]
 (global.set $bridgejsmethod.Main.H.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.H.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.H)
   (ref.func $m_enclose__java_lang_Object__java_lang_Object@bridgejsmethod.Main.H)
   (rtt.canon $bridgejsmethod.Main.H.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.H [itable.init]
 (global.set $bridgejsmethod.Main.H.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.H.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.G.vtable
  (ref.func $m_enclose__java_lang_Object__java_lang_Object@bridgejsmethod.Main.H)
  (rtt.canon $bridgejsmethod.Main.G.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.K [vtable.init]
 (global.set $bridgejsmethod.Main.K.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.K.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.K)
   (ref.func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.K)
   (rtt.canon $bridgejsmethod.Main.K.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.K [itable.init]
 (global.set $bridgejsmethod.Main.K.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.L [vtable.init]
 (global.set $bridgejsmethod.Main.L.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.L.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.L)
   (ref.func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L)
   (ref.func $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L)
   (rtt.canon $bridgejsmethod.Main.L.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.L [itable.init]
 (global.set $bridgejsmethod.Main.L.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.O [vtable.init]
 (global.set $bridgejsmethod.Main.O.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.O.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.O)
   (ref.func $m_getB__bridgejsmethod_Main_B@bridgejsmethod.Main.O)
   (rtt.canon $bridgejsmethod.Main.O.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.O [itable.init]
 (global.set $bridgejsmethod.Main.O.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.O.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.M.vtable
  (ref.func $m_getB__bridgejsmethod_Main_B@bridgejsmethod.Main.O)
  (rtt.canon $bridgejsmethod.Main.M.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.S [vtable.init]
 (global.set $bridgejsmethod.Main.S.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.S.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.S)
   (ref.func $m_getKey__java_lang_String@bridgejsmethod.Main.R)
   (rtt.canon $bridgejsmethod.Main.S.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.S [itable.init]
 (global.set $bridgejsmethod.Main.S.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $bridgejsmethod.Main.S.itable) (i32.const 0)
 (struct.new_with_rtt $bridgejsmethod.Main.P.vtable
  (ref.func $m_getKey__java_lang_String@bridgejsmethod.Main.R)
  (rtt.canon $bridgejsmethod.Main.P.vtable)
 ))

 ;;; Code for bridgejsmethod.Main.GrandParent [vtable.init]
 (global.set $bridgejsmethod.Main.GrandParent.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.GrandParent.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.GrandParent)
   (ref.func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.GrandParent)
   (ref.func $m_method__java_lang_Object__void@bridgejsmethod.Main.GrandParent)
   (rtt.canon $bridgejsmethod.Main.GrandParent.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.GrandParent [itable.init]
 (global.set $bridgejsmethod.Main.GrandParent.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.Parent [vtable.init]
 (global.set $bridgejsmethod.Main.Parent.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.Parent.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.Parent)
   (ref.func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.Parent)
   (ref.func $m_method__java_lang_Object__void@bridgejsmethod.Main.Parent)
   (ref.func $m_jsMethod__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)
   (ref.func $m_method__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)
   (rtt.canon $bridgejsmethod.Main.Parent.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.Parent [itable.init]
 (global.set $bridgejsmethod.Main.Parent.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for bridgejsmethod.Main.Child [vtable.init]
 (global.set $bridgejsmethod.Main.Child.vtable
  (struct.new_with_rtt $bridgejsmethod.Main.Child.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@bridgejsmethod.Main.Child)
   (ref.func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.Parent)
   (ref.func $m_method__java_lang_Object__void@bridgejsmethod.Main.Parent)
   (ref.func $m_jsMethod__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)
   (ref.func $m_method__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)
   (rtt.canon $bridgejsmethod.Main.Child.vtable)
  )
 )

 ;;; Code for bridgejsmethod.Main.Child [itable.init]
 (global.set $bridgejsmethod.Main.Child.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

;;; Code for bridgejsmethod.Main [CLASS]
(type $bridgejsmethod.Main (struct
 (field $vtable (ref $bridgejsmethod.Main.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class))))
 (extends $java.lang.Object.vtable)
)

;;; Main()
(func $m_<init>__@bridgejsmethod.Main
 (param $this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main))
 ;;@ bridgejsmethod/Main.java:21:13
 (block
  ;; bridgejsmethod.Main.$clinit();
  ;;@ bridgejsmethod/Main.java:21:13
  (call $$clinit__void@bridgejsmethod.Main )
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:21:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Main.this;
  ;;@ bridgejsmethod/Main.java:21:13
  (return (local.get $this))
 )
)

;;; void Main.test()
(func $m_test__void@bridgejsmethod.Main
 ;;@ bridgejsmethod/Main.java:162:21
 (local $a (ref null $bridgejsmethod.Main.A))
 (local $b (ref null $bridgejsmethod.Main.B))
 (local $c (ref null $bridgejsmethod.Main.C))
 (local $d (ref null $bridgejsmethod.Main.D))
 (local $e (ref null $bridgejsmethod.Main.E))
 (local $h (ref null $bridgejsmethod.Main.H))
 (local $l (ref null $bridgejsmethod.Main.L))
 (block
  ;; bridgejsmethod.Main.$clinit();
  ;;@ bridgejsmethod/Main.java:162:28
  (call $$clinit__void@bridgejsmethod.Main )
  ;; A a = new A.<init>();
  ;;@ bridgejsmethod/Main.java:163:4
  (local.set $a (call $m_<init>__@bridgejsmethod.Main.A (struct.new_with_rtt $bridgejsmethod.Main.A (ref.as_non_null (global.get $bridgejsmethod.Main.A.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.A.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.A.rtt))))
  ;; a.fun(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:164:4
  (drop (call_ref (local.get $a)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.A.vtable $m_fun__java_lang_Object__java_lang_Object (struct.get $bridgejsmethod.Main.A $vtable(local.get $a)))))
  ;; a.bar(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:165:4
  (call_ref (local.get $a)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.A.vtable $m_bar__java_lang_Object__void (struct.get $bridgejsmethod.Main.A $vtable(local.get $a))))
  ;; B b = new B.<init>();
  ;;@ bridgejsmethod/Main.java:166:4
  (local.set $b (call $m_<init>__@bridgejsmethod.Main.B (struct.new_with_rtt $bridgejsmethod.Main.B (ref.as_non_null (global.get $bridgejsmethod.Main.B.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.B.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.B.rtt))))
  ;; b.fun(javaemul.internal.StringPool.$getString_|abc|());
  ;;@ bridgejsmethod/Main.java:167:4
  (drop (call_ref (local.get $b)(call $$getString_|abc|__java_lang_String@javaemul.internal.StringPool )(struct.get $bridgejsmethod.Main.B.vtable $m_fun__java_lang_String__java_lang_String (struct.get $bridgejsmethod.Main.B $vtable(local.get $b)))))
  ;; b.bar(javaemul.internal.StringPool.$getString_|abc|());
  ;;@ bridgejsmethod/Main.java:168:4
  (call_ref (local.get $b)(call $$getString_|abc|__java_lang_String@javaemul.internal.StringPool )(struct.get $bridgejsmethod.Main.B.vtable $m_bar__java_lang_String__void (struct.get $bridgejsmethod.Main.B $vtable(local.get $b))))
  ;; C c = new C.<init>();
  ;;@ bridgejsmethod/Main.java:169:4
  (local.set $c (call $m_<init>__@bridgejsmethod.Main.C (struct.new_with_rtt $bridgejsmethod.Main.C (ref.as_non_null (global.get $bridgejsmethod.Main.C.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.C.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.C.rtt))))
  ;; c.fun(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:170:4
  (drop (call_ref (local.get $c)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.C.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.C $vtable(local.get $c)))))
  ;; c.bar(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:171:4
  (call_ref (local.get $c)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.A.vtable $m_bar__java_lang_Object__void (struct.get $bridgejsmethod.Main.A $vtable(local.get $c))))
  ;; D d = new D.<init>();
  ;;@ bridgejsmethod/Main.java:172:4
  (local.set $d (call $m_<init>__@bridgejsmethod.Main.D (struct.new_with_rtt $bridgejsmethod.Main.D (ref.as_non_null (global.get $bridgejsmethod.Main.D.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.D.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.D.rtt))))
  ;; d.fun(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:173:4
  (drop (call_ref (local.get $d)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.D.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.D $vtable(local.get $d)))))
  ;; d.bar(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:174:4
  (call_ref (local.get $d)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.A.vtable $m_bar__java_lang_Object__void (struct.get $bridgejsmethod.Main.A $vtable(local.get $d))))
  ;; E e = new E.<init>();
  ;;@ bridgejsmethod/Main.java:175:4
  (local.set $e (call $m_<init>__@bridgejsmethod.Main.E (struct.new_with_rtt $bridgejsmethod.Main.E (ref.as_non_null (global.get $bridgejsmethod.Main.E.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.E.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.E.rtt))))
  ;; e.fun(javaemul.internal.StringPool.$getString_|abc|());
  ;;@ bridgejsmethod/Main.java:176:4
  (drop (call_ref (local.get $e)(call $$getString_|abc|__java_lang_String@javaemul.internal.StringPool )(struct.get $bridgejsmethod.Main.B.vtable $m_fun__java_lang_String__java_lang_String (struct.get $bridgejsmethod.Main.B $vtable(local.get $e)))))
  ;; e.bar(javaemul.internal.StringPool.$getString_|abc|());
  ;;@ bridgejsmethod/Main.java:177:4
  (call_ref (local.get $e)(call $$getString_|abc|__java_lang_String@javaemul.internal.StringPool )(struct.get $bridgejsmethod.Main.B.vtable $m_bar__java_lang_String__void (struct.get $bridgejsmethod.Main.B $vtable(local.get $e))))
  ;; H<Integer> h = new H.<init>();
  ;;@ bridgejsmethod/Main.java:178:4
  (local.set $h (call $m_<init>__@bridgejsmethod.Main.H (struct.new_with_rtt $bridgejsmethod.Main.H (ref.as_non_null (global.get $bridgejsmethod.Main.H.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.H.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.H.rtt))))
  ;; h.enclose(java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:179:4
  (drop (call_ref (local.get $h)(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.H.vtable $m_enclose__java_lang_Object__java_lang_Object (struct.get $bridgejsmethod.Main.H $vtable(local.get $h)))))
  ;; L<Integer> l = new L.<init>();
  ;;@ bridgejsmethod/Main.java:180:4
  (local.set $l (call $m_<init>__@bridgejsmethod.Main.L (struct.new_with_rtt $bridgejsmethod.Main.L (ref.as_non_null (global.get $bridgejsmethod.Main.L.vtable)) (ref.as_non_null (global.get $bridgejsmethod.Main.L.itable)) (i32.const 0) (global.get $bridgejsmethod.Main.L.rtt))))
  ;; l.fun(javaemul.internal.StringPool.$getString_|foo|(),java.lang.Integer.valueOf(1));
  ;;@ bridgejsmethod/Main.java:181:4
  (call_ref (local.get $l)(call $$getString_|foo|__java_lang_String@javaemul.internal.StringPool )(call $m_valueOf__int__java_lang_Integer@java.lang.Integer (i32.const 1))(struct.get $bridgejsmethod.Main.L.vtable $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod (struct.get $bridgejsmethod.Main.L $vtable(local.get $l))))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@bridgejsmethod.Main
 ;;@ bridgejsmethod/Main.java:21:13
 (block
  ;; if (bridgejsmethod.Main.$initialized) return;
  ;;@ bridgejsmethod/Main.java:21:13
  (if (global.get $f_$initialized__bridgejsmethod_Main)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:21:13
    (return )
   )
  )
  ;; (bridgejsmethod.Main.$initialized = true);
  ;;@ bridgejsmethod/Main.java:21:13
  (global.set $f_$initialized__bridgejsmethod_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:21:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main();
  (return (call $$getBridgejsmethod.Main__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main)

;;; Code for bridgejsmethod.Main.A [CLASS]
(type $bridgejsmethod.Main.A (struct
 (field $vtable (ref $bridgejsmethod.Main.A.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.A.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; A()
(func $m_<init>__@bridgejsmethod.Main.A
 (param $this (ref null $bridgejsmethod.Main.A))
 (result (ref null $bridgejsmethod.Main.A))
 ;;@ bridgejsmethod/Main.java:22:22
 (block
  ;; bridgejsmethod.Main.A.$clinit();
  ;;@ bridgejsmethod/Main.java:22:22
  (call $$clinit__void@bridgejsmethod.Main.A )
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:22:22
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return A.this;
  ;;@ bridgejsmethod/Main.java:22:22
  (return (local.get $this))
 )
)

;;; T A.fun(T t)
(func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.A
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:24:13
 (local $this (ref null $bridgejsmethod.Main.A))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.A.rtt)))
 (block
  ;; return t;
  ;;@ bridgejsmethod/Main.java:25:6
  (return (local.get $t))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.A)

;;; void A.bar(T t)
(func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:29:16
 (local $this (ref null $bridgejsmethod.Main.A))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.A.rtt)))
 (block
 )
)
(elem declare func $m_bar__java_lang_Object__void@bridgejsmethod.Main.A)

;;; void A.$clinit()
(func $$clinit__void@bridgejsmethod.Main.A
 ;;@ bridgejsmethod/Main.java:22:22
 (block
  ;; if (bridgejsmethod.Main.A.$initialized) return;
  ;;@ bridgejsmethod/Main.java:22:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_A)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:22:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.A.$initialized = true);
  ;;@ bridgejsmethod/Main.java:22:22
  (global.set $f_$initialized__bridgejsmethod_Main_A (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:22:22
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> A.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.A
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.A))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.A.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.A();
  (return (call $$getBridgejsmethod.Main.A__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.A)

;;; Code for bridgejsmethod.Main.I [INTERFACE]
(type $bridgejsmethod.Main.I.vtable (struct
 (field $m_fun__java_lang_Number__java_lang_Number (mut (ref $function.$java.lang.Number__$java.lang.Number)))
))

;;; void I.$clinit()
(func $$clinit__void@bridgejsmethod.Main.I
 ;;@ bridgejsmethod/Main.java:33:19
 (block
  ;; if (bridgejsmethod.Main.I.$initialized) return;
  ;;@ bridgejsmethod/Main.java:33:19
  (if (global.get $f_$initialized__bridgejsmethod_Main_I)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:33:19
    (return )
   )
  )
  ;; (bridgejsmethod.Main.I.$initialized = true);
  ;;@ bridgejsmethod/Main.java:33:19
  (global.set $f_$initialized__bridgejsmethod_Main_I (i32.const 1))
 )
)

;;; Class<?> I.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.I
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.I();
  (return (call $$getBridgejsmethod.Main.I__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.I)

;;; Code for bridgejsmethod.Main.J [INTERFACE]
(type $bridgejsmethod.Main.J.vtable (struct
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; void J.$clinit()
(func $$clinit__void@bridgejsmethod.Main.J
 ;;@ bridgejsmethod/Main.java:39:19
 (block
  ;; if (bridgejsmethod.Main.J.$initialized) return;
  ;;@ bridgejsmethod/Main.java:39:19
  (if (global.get $f_$initialized__bridgejsmethod_Main_J)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:39:19
    (return )
   )
  )
  ;; (bridgejsmethod.Main.J.$initialized = true);
  ;;@ bridgejsmethod/Main.java:39:19
  (global.set $f_$initialized__bridgejsmethod_Main_J (i32.const 1))
 )
)

;;; Class<?> J.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.J
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.J();
  (return (call $$getBridgejsmethod.Main.J__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.J)

;;; Code for bridgejsmethod.Main.B [CLASS]
(type $bridgejsmethod.Main.B (struct
 (field $vtable (ref $bridgejsmethod.Main.B.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.A)
)
(type $bridgejsmethod.Main.B.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_fun__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
 (field $m_bar__java_lang_String__void (mut (ref $function.$java.lang.String__$void))))
 (extends $bridgejsmethod.Main.A.vtable)
)

;;; B()
(func $m_<init>__@bridgejsmethod.Main.B
 (param $this (ref null $bridgejsmethod.Main.B))
 (result (ref null $bridgejsmethod.Main.B))
 ;;@ bridgejsmethod/Main.java:43:22
 (block
  ;; bridgejsmethod.Main.B.$clinit();
  ;;@ bridgejsmethod/Main.java:43:22
  (call $$clinit__void@bridgejsmethod.Main.B )
  ;; A.this.A.<init>();
  ;;@ bridgejsmethod/Main.java:43:22
  (drop (call $m_<init>__@bridgejsmethod.Main.A (local.get $this)))
  ;; return B.this;
  ;;@ bridgejsmethod/Main.java:43:22
  (return (local.get $this))
 )
)

;;; String B.fun(String s)
(func $m_fun__java_lang_String__java_lang_String@bridgejsmethod.Main.B
 (type $function.$java.lang.String__$java.lang.String)
 (param $this.untyped (ref null $java.lang.Object))
 (param $s (ref null $java.lang.String))
 (result (ref null $java.lang.String))
 ;;@ bridgejsmethod/Main.java:49:18
 (local $this (ref null $bridgejsmethod.Main.B))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.B.rtt)))
 (block
  ;; return s;
  ;;@ bridgejsmethod/Main.java:50:6
  (return (local.get $s))
 )
)
(elem declare func $m_fun__java_lang_String__java_lang_String@bridgejsmethod.Main.B)

;;; void B.bar(String s)
(func $m_bar__java_lang_String__void@bridgejsmethod.Main.B
 (type $function.$java.lang.String__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $s (ref null $java.lang.String))
 ;;@ bridgejsmethod/Main.java:58:16
 (local $this (ref null $bridgejsmethod.Main.B))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.B.rtt)))
 (block
 )
)
(elem declare func $m_bar__java_lang_String__void@bridgejsmethod.Main.B)

;;; void B.bar(Object arg0)
(func $m_bar__java_lang_Object__void@bridgejsmethod.Main.B
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:43:22
 (local $this (ref null $bridgejsmethod.Main.B))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.B.rtt)))
 (block
  ;; B.this.bar(((String) arg0));
  ;;@ bridgejsmethod/Main.java:43:22
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(struct.get $bridgejsmethod.Main.B.vtable $m_bar__java_lang_String__void (struct.get $bridgejsmethod.Main.B $vtable(local.get $this))))
 )
)
(elem declare func $m_bar__java_lang_Object__void@bridgejsmethod.Main.B)

;;; String B.fun(Object arg0)
(func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.B
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:43:22
 (local $this (ref null $bridgejsmethod.Main.B))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.B.rtt)))
 (block
  ;; return B.this.fun(((String) arg0));
  ;;@ bridgejsmethod/Main.java:43:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(struct.get $bridgejsmethod.Main.B.vtable $m_fun__java_lang_String__java_lang_String (struct.get $bridgejsmethod.Main.B $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.B)

;;; void B.$clinit()
(func $$clinit__void@bridgejsmethod.Main.B
 ;;@ bridgejsmethod/Main.java:43:22
 (block
  ;; if (bridgejsmethod.Main.B.$initialized) return;
  ;;@ bridgejsmethod/Main.java:43:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_B)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:43:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.B.$initialized = true);
  ;;@ bridgejsmethod/Main.java:43:22
  (global.set $f_$initialized__bridgejsmethod_Main_B (i32.const 1))
  ;; bridgejsmethod.Main.A.$clinit();
  ;;@ bridgejsmethod/Main.java:43:22
  (call $$clinit__void@bridgejsmethod.Main.A )
 )
)

;;; Class<?> B.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.B
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.B))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.B.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.B();
  (return (call $$getBridgejsmethod.Main.B__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.B)

;;; Code for bridgejsmethod.Main.C [CLASS]
(type $bridgejsmethod.Main.C (struct
 (field $vtable (ref $bridgejsmethod.Main.C.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.A)
)
(type $bridgejsmethod.Main.C.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_fun__java_lang_Integer__java_lang_Integer (mut (ref $function.$java.lang.Integer__$java.lang.Integer))))
 (extends $bridgejsmethod.Main.A.vtable)
)

;;; C()
(func $m_<init>__@bridgejsmethod.Main.C
 (param $this (ref null $bridgejsmethod.Main.C))
 (result (ref null $bridgejsmethod.Main.C))
 ;;@ bridgejsmethod/Main.java:61:22
 (block
  ;; bridgejsmethod.Main.C.$clinit();
  ;;@ bridgejsmethod/Main.java:61:22
  (call $$clinit__void@bridgejsmethod.Main.C )
  ;; A.this.A.<init>();
  ;;@ bridgejsmethod/Main.java:61:22
  (drop (call $m_<init>__@bridgejsmethod.Main.A (local.get $this)))
  ;; return C.this;
  ;;@ bridgejsmethod/Main.java:61:22
  (return (local.get $this))
 )
)

;;; Integer C.fun(Integer i)
(func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.C
 (type $function.$java.lang.Integer__$java.lang.Integer)
 (param $this.untyped (ref null $java.lang.Object))
 (param $i (ref null $java.lang.Integer))
 (result (ref null $java.lang.Integer))
 ;;@ bridgejsmethod/Main.java:65:19
 (local $this (ref null $bridgejsmethod.Main.C))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.C.rtt)))
 (block
  ;; return i;
  ;;@ bridgejsmethod/Main.java:66:6
  (return (local.get $i))
 )
)
(elem declare func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.C)

;;; Integer C.fun(Object arg0)
(func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.C
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:61:22
 (local $this (ref null $bridgejsmethod.Main.C))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.C.rtt)))
 (block
  ;; return C.this.fun(((Integer) arg0));
  ;;@ bridgejsmethod/Main.java:61:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Integer.rtt))(struct.get $bridgejsmethod.Main.C.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.C $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.C)

;;; void C.$clinit()
(func $$clinit__void@bridgejsmethod.Main.C
 ;;@ bridgejsmethod/Main.java:61:22
 (block
  ;; if (bridgejsmethod.Main.C.$initialized) return;
  ;;@ bridgejsmethod/Main.java:61:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_C)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:61:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.C.$initialized = true);
  ;;@ bridgejsmethod/Main.java:61:22
  (global.set $f_$initialized__bridgejsmethod_Main_C (i32.const 1))
  ;; bridgejsmethod.Main.A.$clinit();
  ;;@ bridgejsmethod/Main.java:61:22
  (call $$clinit__void@bridgejsmethod.Main.A )
 )
)

;;; Class<?> C.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.C
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.C))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.C.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.C();
  (return (call $$getBridgejsmethod.Main.C__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.C)

;;; Code for bridgejsmethod.Main.D [CLASS]
(type $bridgejsmethod.Main.D (struct
 (field $vtable (ref $bridgejsmethod.Main.D.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.A)
)
(type $bridgejsmethod.Main.D.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_fun__java_lang_Integer__java_lang_Integer (mut (ref $function.$java.lang.Integer__$java.lang.Integer)))
 (field $m_fun__java_lang_Number__java_lang_Number (mut (ref $function.$java.lang.Number__$java.lang.Number))))
 (extends $bridgejsmethod.Main.A.vtable)
)

;;; D()
(func $m_<init>__@bridgejsmethod.Main.D
 (param $this (ref null $bridgejsmethod.Main.D))
 (result (ref null $bridgejsmethod.Main.D))
 ;;@ bridgejsmethod/Main.java:70:22
 (block
  ;; bridgejsmethod.Main.D.$clinit();
  ;;@ bridgejsmethod/Main.java:70:22
  (call $$clinit__void@bridgejsmethod.Main.D )
  ;; A.this.A.<init>();
  ;;@ bridgejsmethod/Main.java:70:22
  (drop (call $m_<init>__@bridgejsmethod.Main.A (local.get $this)))
  ;; return D.this;
  ;;@ bridgejsmethod/Main.java:70:22
  (return (local.get $this))
 )
)

;;; Integer D.fun(Integer i)
(func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.D
 (type $function.$java.lang.Integer__$java.lang.Integer)
 (param $this.untyped (ref null $java.lang.Object))
 (param $i (ref null $java.lang.Integer))
 (result (ref null $java.lang.Integer))
 ;;@ bridgejsmethod/Main.java:74:19
 (local $this (ref null $bridgejsmethod.Main.D))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.D.rtt)))
 (block
  ;; return i;
  ;;@ bridgejsmethod/Main.java:75:6
  (return (local.get $i))
 )
)
(elem declare func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.D)

;;; Integer D.fun(Number arg0)
(func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.D
 (type $function.$java.lang.Number__$java.lang.Number)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Number))
 (result (ref null $java.lang.Number))
 ;;@ bridgejsmethod/Main.java:70:22
 (local $this (ref null $bridgejsmethod.Main.D))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.D.rtt)))
 (block
  ;; return D.this.fun(((Integer) arg0));
  ;;@ bridgejsmethod/Main.java:70:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Integer.rtt))(struct.get $bridgejsmethod.Main.D.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.D $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.D)

;;; Integer D.fun(Object arg0)
(func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.D
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:70:22
 (local $this (ref null $bridgejsmethod.Main.D))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.D.rtt)))
 (block
  ;; return D.this.fun(((Integer) arg0));
  ;;@ bridgejsmethod/Main.java:70:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Integer.rtt))(struct.get $bridgejsmethod.Main.D.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.D $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.D)

;;; void D.$clinit()
(func $$clinit__void@bridgejsmethod.Main.D
 ;;@ bridgejsmethod/Main.java:70:22
 (block
  ;; if (bridgejsmethod.Main.D.$initialized) return;
  ;;@ bridgejsmethod/Main.java:70:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_D)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:70:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.D.$initialized = true);
  ;;@ bridgejsmethod/Main.java:70:22
  (global.set $f_$initialized__bridgejsmethod_Main_D (i32.const 1))
  ;; bridgejsmethod.Main.A.$clinit();
  ;;@ bridgejsmethod/Main.java:70:22
  (call $$clinit__void@bridgejsmethod.Main.A )
 )
)

;;; Class<?> D.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.D
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.D))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.D.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.D();
  (return (call $$getBridgejsmethod.Main.D__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.D)

;;; Code for bridgejsmethod.Main.E [CLASS]
(type $bridgejsmethod.Main.E (struct
 (field $vtable (ref $bridgejsmethod.Main.E.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.B)
)
(type $bridgejsmethod.Main.E.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_fun__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
 (field $m_bar__java_lang_String__void (mut (ref $function.$java.lang.String__$void))))
 (extends $bridgejsmethod.Main.B.vtable)
)

;;; E()
(func $m_<init>__@bridgejsmethod.Main.E
 (param $this (ref null $bridgejsmethod.Main.E))
 (result (ref null $bridgejsmethod.Main.E))
 ;;@ bridgejsmethod/Main.java:79:22
 (block
  ;; bridgejsmethod.Main.E.$clinit();
  ;;@ bridgejsmethod/Main.java:79:22
  (call $$clinit__void@bridgejsmethod.Main.E )
  ;; B.this.B.<init>();
  ;;@ bridgejsmethod/Main.java:79:22
  (drop (call $m_<init>__@bridgejsmethod.Main.B (local.get $this)))
  ;; return E.this;
  ;;@ bridgejsmethod/Main.java:79:22
  (return (local.get $this))
 )
)

;;; void E.$clinit()
(func $$clinit__void@bridgejsmethod.Main.E
 ;;@ bridgejsmethod/Main.java:79:22
 (block
  ;; if (bridgejsmethod.Main.E.$initialized) return;
  ;;@ bridgejsmethod/Main.java:79:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_E)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:79:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.E.$initialized = true);
  ;;@ bridgejsmethod/Main.java:79:22
  (global.set $f_$initialized__bridgejsmethod_Main_E (i32.const 1))
  ;; bridgejsmethod.Main.B.$clinit();
  ;;@ bridgejsmethod/Main.java:79:22
  (call $$clinit__void@bridgejsmethod.Main.B )
 )
)

;;; Class<?> E.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.E
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.E))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.E.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.E();
  (return (call $$getBridgejsmethod.Main.E__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.E)

;;; Code for bridgejsmethod.Main.F [CLASS]
(type $bridgejsmethod.Main.F (struct
 (field $vtable (ref $bridgejsmethod.Main.F.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.A)
)
(type $bridgejsmethod.Main.F.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
 (field $m_bar__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_fun__java_lang_Number__java_lang_Number (mut (ref $function.$java.lang.Number__$java.lang.Number)))
 (field $m_fun__java_lang_Integer__java_lang_Integer (mut (ref $function.$java.lang.Integer__$java.lang.Integer))))
 (extends $bridgejsmethod.Main.A.vtable)
)

;;; F()
(func $m_<init>__@bridgejsmethod.Main.F
 (param $this (ref null $bridgejsmethod.Main.F))
 (result (ref null $bridgejsmethod.Main.F))
 ;;@ bridgejsmethod/Main.java:85:22
 (block
  ;; bridgejsmethod.Main.F.$clinit();
  ;;@ bridgejsmethod/Main.java:85:22
  (call $$clinit__void@bridgejsmethod.Main.F )
  ;; A.this.A.<init>();
  ;;@ bridgejsmethod/Main.java:85:22
  (drop (call $m_<init>__@bridgejsmethod.Main.A (local.get $this)))
  ;; return F.this;
  ;;@ bridgejsmethod/Main.java:85:22
  (return (local.get $this))
 )
)

;;; Integer F.fun(Number arg0)
(func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.F
 (type $function.$java.lang.Number__$java.lang.Number)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Number))
 (result (ref null $java.lang.Number))
 ;;@ bridgejsmethod/Main.java:85:22
 (local $this (ref null $bridgejsmethod.Main.F))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.F.rtt)))
 (block
  ;; return F.this.fun(((Integer) arg0));
  ;;@ bridgejsmethod/Main.java:85:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Integer.rtt))(struct.get $bridgejsmethod.Main.F.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.F $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Number__java_lang_Number@bridgejsmethod.Main.F)

;;; Integer F.fun(Object arg0)
(func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.F
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:85:22
 (local $this (ref null $bridgejsmethod.Main.F))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.F.rtt)))
 (block
  ;; return F.this.fun(((Integer) arg0));
  ;;@ bridgejsmethod/Main.java:85:22
  (return (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Integer.rtt))(struct.get $bridgejsmethod.Main.F.vtable $m_fun__java_lang_Integer__java_lang_Integer (struct.get $bridgejsmethod.Main.F $vtable(local.get $this)))))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.F)

;;; Integer F.fun(Integer arg0)
(func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.F
 (type $function.$java.lang.Integer__$java.lang.Integer)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Integer))
 (result (ref null $java.lang.Integer))
 ;;@ bridgejsmethod/Main.java:85:22
 (local $this (ref null $bridgejsmethod.Main.F))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.F.rtt)))
 (block
  ;; return ((Integer) super.fun(arg0));
  ;;@ bridgejsmethod/Main.java:85:22
  (return (ref.cast (call $m_fun__java_lang_Object__java_lang_Object@bridgejsmethod.Main.A (local.get $this)(local.get $arg0)) (global.get $java.lang.Integer.rtt)))
 )
)
(elem declare func $m_fun__java_lang_Integer__java_lang_Integer@bridgejsmethod.Main.F)

;;; void F.$clinit()
(func $$clinit__void@bridgejsmethod.Main.F
 ;;@ bridgejsmethod/Main.java:85:22
 (block
  ;; if (bridgejsmethod.Main.F.$initialized) return;
  ;;@ bridgejsmethod/Main.java:85:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_F)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:85:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.F.$initialized = true);
  ;;@ bridgejsmethod/Main.java:85:22
  (global.set $f_$initialized__bridgejsmethod_Main_F (i32.const 1))
  ;; bridgejsmethod.Main.A.$clinit();
  ;;@ bridgejsmethod/Main.java:85:22
  (call $$clinit__void@bridgejsmethod.Main.A )
 )
)

;;; Class<?> F.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.F
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.F))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.F.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.F();
  (return (call $$getBridgejsmethod.Main.F__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.F)

;;; Code for bridgejsmethod.Main.G [INTERFACE]
(type $bridgejsmethod.Main.G.vtable (struct
 (field $m_enclose__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
))

;;; void G.$clinit()
(func $$clinit__void@bridgejsmethod.Main.G
 ;;@ bridgejsmethod/Main.java:87:19
 (block
  ;; if (bridgejsmethod.Main.G.$initialized) return;
  ;;@ bridgejsmethod/Main.java:87:19
  (if (global.get $f_$initialized__bridgejsmethod_Main_G)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:87:19
    (return )
   )
  )
  ;; (bridgejsmethod.Main.G.$initialized = true);
  ;;@ bridgejsmethod/Main.java:87:19
  (global.set $f_$initialized__bridgejsmethod_Main_G (i32.const 1))
 )
)

;;; Class<?> G.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.G
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.G();
  (return (call $$getBridgejsmethod.Main.G__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.G)

;;; Code for bridgejsmethod.Main.H [CLASS]
(type $bridgejsmethod.Main.H (struct
 (field $vtable (ref $bridgejsmethod.Main.H.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.H.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_enclose__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object))))
 (extends $java.lang.Object.vtable)
)

;;; H()
(func $m_<init>__@bridgejsmethod.Main.H
 (param $this (ref null $bridgejsmethod.Main.H))
 (result (ref null $bridgejsmethod.Main.H))
 ;;@ bridgejsmethod/Main.java:91:22
 (block
  ;; bridgejsmethod.Main.H.$clinit();
  ;;@ bridgejsmethod/Main.java:91:22
  (call $$clinit__void@bridgejsmethod.Main.H )
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:91:22
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return H.this;
  ;;@ bridgejsmethod/Main.java:91:22
  (return (local.get $this))
 )
)

;;; V H.enclose(V value)
(func $m_enclose__java_lang_Object__java_lang_Object@bridgejsmethod.Main.H
 (type $function.$java.lang.Object__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $value (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:100:13
 (local $this (ref null $bridgejsmethod.Main.H))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.H.rtt)))
 (block
  ;; return null;
  ;;@ bridgejsmethod/Main.java:101:6
  (return (ref.null $java.lang.Object))
 )
)
(elem declare func $m_enclose__java_lang_Object__java_lang_Object@bridgejsmethod.Main.H)

;;; void H.$clinit()
(func $$clinit__void@bridgejsmethod.Main.H
 ;;@ bridgejsmethod/Main.java:91:22
 (block
  ;; if (bridgejsmethod.Main.H.$initialized) return;
  ;;@ bridgejsmethod/Main.java:91:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_H)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:91:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.H.$initialized = true);
  ;;@ bridgejsmethod/Main.java:91:22
  (global.set $f_$initialized__bridgejsmethod_Main_H (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:91:22
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> H.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.H
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.H))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.H.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.H();
  (return (call $$getBridgejsmethod.Main.H__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.H)

;;; Code for bridgejsmethod.Main.K [CLASS]
(type $bridgejsmethod.Main.K (struct
 (field $vtable (ref $bridgejsmethod.Main.K.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.K.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod (mut (ref $function.$java.lang.Object__$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; K()
(func $m_<init>__@bridgejsmethod.Main.K
 (param $this (ref null $bridgejsmethod.Main.K))
 (result (ref null $bridgejsmethod.Main.K))
 ;;@ bridgejsmethod/Main.java:105:22
 (block
  ;; bridgejsmethod.Main.K.$clinit();
  ;;@ bridgejsmethod/Main.java:105:22
  (call $$clinit__void@bridgejsmethod.Main.K )
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:105:22
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return K.this;
  ;;@ bridgejsmethod/Main.java:105:22
  (return (local.get $this))
 )
)

;;; void K.fun(K1 k1, K2 k2)
(func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.K
 (type $function.$java.lang.Object__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $k1 (ref null $java.lang.Object))
 (param $k2 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:106:9
 (local $this (ref null $bridgejsmethod.Main.K))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.K.rtt)))
 (block
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.K)

;;; void K.$clinit()
(func $$clinit__void@bridgejsmethod.Main.K
 ;;@ bridgejsmethod/Main.java:105:22
 (block
  ;; if (bridgejsmethod.Main.K.$initialized) return;
  ;;@ bridgejsmethod/Main.java:105:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_K)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:105:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.K.$initialized = true);
  ;;@ bridgejsmethod/Main.java:105:22
  (global.set $f_$initialized__bridgejsmethod_Main_K (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:105:22
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> K.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.K
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.K))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.K.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.K();
  (return (call $$getBridgejsmethod.Main.K__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.K)

;;; Code for bridgejsmethod.Main.L [CLASS]
(type $bridgejsmethod.Main.L (struct
 (field $vtable (ref $bridgejsmethod.Main.L.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $bridgejsmethod.Main.K)
)
(type $bridgejsmethod.Main.L.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod (mut (ref $function.$java.lang.Object__$java.lang.Object__$void)))
 (field $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod (mut (ref $function.$java.lang.String__$java.lang.Object__$void))))
 (extends $bridgejsmethod.Main.K.vtable)
)

;;; L()
(func $m_<init>__@bridgejsmethod.Main.L
 (param $this (ref null $bridgejsmethod.Main.L))
 (result (ref null $bridgejsmethod.Main.L))
 ;;@ bridgejsmethod/Main.java:109:22
 (block
  ;; bridgejsmethod.Main.L.$clinit();
  ;;@ bridgejsmethod/Main.java:109:22
  (call $$clinit__void@bridgejsmethod.Main.L )
  ;; K.this.K.<init>();
  ;;@ bridgejsmethod/Main.java:109:22
  (drop (call $m_<init>__@bridgejsmethod.Main.K (local.get $this)))
  ;; return L.this;
  ;;@ bridgejsmethod/Main.java:109:22
  (return (local.get $this))
 )
)

;;; void L.fun(String string, L1 l1)
(func $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L
 (type $function.$java.lang.String__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $string (ref null $java.lang.String))
 (param $l1 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:116:9
 (local $this (ref null $bridgejsmethod.Main.L))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.L.rtt)))
 (block
 )
)
(elem declare func $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L)

;;; void L.fun(Object arg0, Object arg1)
(func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L
 (type $function.$java.lang.Object__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:109:22
 (local $this (ref null $bridgejsmethod.Main.L))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.L.rtt)))
 (block
  ;; L.this.fun(((String) arg0),arg1);
  ;;@ bridgejsmethod/Main.java:109:22
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(local.get $arg1)(struct.get $bridgejsmethod.Main.L.vtable $m_fun__java_lang_String__java_lang_Object__void_$pp_bridgejsmethod (struct.get $bridgejsmethod.Main.L $vtable(local.get $this))))
 )
)
(elem declare func $m_fun__java_lang_Object__java_lang_Object__void_$pp_bridgejsmethod@bridgejsmethod.Main.L)

;;; void L.$clinit()
(func $$clinit__void@bridgejsmethod.Main.L
 ;;@ bridgejsmethod/Main.java:109:22
 (block
  ;; if (bridgejsmethod.Main.L.$initialized) return;
  ;;@ bridgejsmethod/Main.java:109:22
  (if (global.get $f_$initialized__bridgejsmethod_Main_L)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:109:22
    (return )
   )
  )
  ;; (bridgejsmethod.Main.L.$initialized = true);
  ;;@ bridgejsmethod/Main.java:109:22
  (global.set $f_$initialized__bridgejsmethod_Main_L (i32.const 1))
  ;; bridgejsmethod.Main.K.$clinit();
  ;;@ bridgejsmethod/Main.java:109:22
  (call $$clinit__void@bridgejsmethod.Main.K )
 )
)

;;; Class<?> L.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.L
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.L))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.L.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.L();
  (return (call $$getBridgejsmethod.Main.L__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.L)

;;; Code for bridgejsmethod.Main.M [INTERFACE]
(type $bridgejsmethod.Main.M.vtable (struct
 (field $m_getB__bridgejsmethod_Main_B (mut (ref $function.__$bridgejsmethod.Main.B)))
))

;;; void M.$clinit()
(func $$clinit__void@bridgejsmethod.Main.M
 ;;@ bridgejsmethod/Main.java:119:12
 (block
  ;; if (bridgejsmethod.Main.M.$initialized) return;
  ;;@ bridgejsmethod/Main.java:119:12
  (if (global.get $f_$initialized__bridgejsmethod_Main_M)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:119:12
    (return )
   )
  )
  ;; (bridgejsmethod.Main.M.$initialized = true);
  ;;@ bridgejsmethod/Main.java:119:12
  (global.set $f_$initialized__bridgejsmethod_Main_M (i32.const 1))
 )
)

;;; Class<?> M.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.M
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.M();
  (return (call $$getBridgejsmethod.Main.M__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.M)

;;; Code for bridgejsmethod.Main.N [CLASS]
(type $bridgejsmethod.Main.N (struct
 (field $vtable (ref $bridgejsmethod.Main.N.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_N (mut (ref null $bridgejsmethod.Main))))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.N.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getB__bridgejsmethod_Main_B (mut (ref $function.__$bridgejsmethod.Main.B))))
 (extends $java.lang.Object.vtable)
)

;;; N(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.N
 (param $this (ref null $bridgejsmethod.Main.N))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.N))
 ;;@ bridgejsmethod/Main.java:126:4
 (block
  ;; bridgejsmethod.Main.N.$clinit();
  ;;@ bridgejsmethod/Main.java:126:8
  (call $$clinit__void@bridgejsmethod.Main.N )
  ;; (N.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:126:4
  (struct.set $bridgejsmethod.Main.N $$outer_this__bridgejsmethod_Main_N(local.get $this) (local.get $$outer_this))
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:126:8
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return N.this;
  ;;@ bridgejsmethod/Main.java:126:4
  (return (local.get $this))
 )
)

;;; void N.$clinit()
(func $$clinit__void@bridgejsmethod.Main.N
 ;;@ bridgejsmethod/Main.java:125:17
 (block
  ;; if (bridgejsmethod.Main.N.$initialized) return;
  ;;@ bridgejsmethod/Main.java:125:17
  (if (global.get $f_$initialized__bridgejsmethod_Main_N)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:125:17
    (return )
   )
  )
  ;; (bridgejsmethod.Main.N.$initialized = true);
  ;;@ bridgejsmethod/Main.java:125:17
  (global.set $f_$initialized__bridgejsmethod_Main_N (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:125:17
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Code for bridgejsmethod.Main.O [CLASS]
(type $bridgejsmethod.Main.O (struct
 (field $vtable (ref $bridgejsmethod.Main.O.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_N (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_O (mut (ref null $bridgejsmethod.Main)))
 (field $f_b__bridgejsmethod_Main_O_ (mut (ref null $bridgejsmethod.Main.B))))
 (extends $bridgejsmethod.Main.N)
)
(type $bridgejsmethod.Main.O.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getB__bridgejsmethod_Main_B (mut (ref $function.__$bridgejsmethod.Main.B))))
 (extends $bridgejsmethod.Main.N.vtable)
)

;;; O(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.O
 (param $this (ref null $bridgejsmethod.Main.O))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.O))
 ;;@ bridgejsmethod/Main.java:132:8
 (block
  ;; bridgejsmethod.Main.O.$clinit();
  ;;@ bridgejsmethod/Main.java:132:8
  (call $$clinit__void@bridgejsmethod.Main.O )
  ;; (O.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:132:8
  (struct.set $bridgejsmethod.Main.O $$outer_this__bridgejsmethod_Main_O(local.get $this) (local.get $$outer_this))
  ;; N.this.N.<init>($outer_this);
  ;;@ bridgejsmethod/Main.java:132:8
  (drop (call $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.N (local.get $this)(local.get $$outer_this)))
  ;; return O.this;
  ;;@ bridgejsmethod/Main.java:132:8
  (return (local.get $this))
 )
)

;;; B O.getB()
(func $m_getB__bridgejsmethod_Main_B@bridgejsmethod.Main.O
 (type $function.__$bridgejsmethod.Main.B)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $bridgejsmethod.Main.B))
 ;;@ bridgejsmethod/Main.java:136:13
 (local $this (ref null $bridgejsmethod.Main.O))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.O.rtt)))
 (block
  ;; return O.this.b;
  ;;@ bridgejsmethod/Main.java:137:6
  (return (struct.get $bridgejsmethod.Main.O $f_b__bridgejsmethod_Main_O_(local.get $this)))
 )
)
(elem declare func $m_getB__bridgejsmethod_Main_B@bridgejsmethod.Main.O)

;;; void O.$clinit()
(func $$clinit__void@bridgejsmethod.Main.O
 ;;@ bridgejsmethod/Main.java:132:8
 (block
  ;; if (bridgejsmethod.Main.O.$initialized) return;
  ;;@ bridgejsmethod/Main.java:132:8
  (if (global.get $f_$initialized__bridgejsmethod_Main_O)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:132:8
    (return )
   )
  )
  ;; (bridgejsmethod.Main.O.$initialized = true);
  ;;@ bridgejsmethod/Main.java:132:8
  (global.set $f_$initialized__bridgejsmethod_Main_O (i32.const 1))
  ;; bridgejsmethod.Main.N.$clinit();
  ;;@ bridgejsmethod/Main.java:132:8
  (call $$clinit__void@bridgejsmethod.Main.N )
 )
)

;;; Class<?> O.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.O
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.O))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.O.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.O();
  (return (call $$getBridgejsmethod.Main.O__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.O)

;;; Code for bridgejsmethod.Main.P [INTERFACE]
(type $bridgejsmethod.Main.P.vtable (struct
 (field $m_getKey__java_lang_String (mut (ref $function.__$java.lang.String)))
))

;;; void P.$clinit()
(func $$clinit__void@bridgejsmethod.Main.P
 ;;@ bridgejsmethod/Main.java:141:12
 (block
  ;; if (bridgejsmethod.Main.P.$initialized) return;
  ;;@ bridgejsmethod/Main.java:141:12
  (if (global.get $f_$initialized__bridgejsmethod_Main_P)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:141:12
    (return )
   )
  )
  ;; (bridgejsmethod.Main.P.$initialized = true);
  ;;@ bridgejsmethod/Main.java:141:12
  (global.set $f_$initialized__bridgejsmethod_Main_P (i32.const 1))
 )
)

;;; Class<?> P.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.P
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.P();
  (return (call $$getBridgejsmethod.Main.P__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.P)

;;; Code for bridgejsmethod.Main.Q [CLASS]
(type $bridgejsmethod.Main.Q (struct
 (field $vtable (ref $bridgejsmethod.Main.Q.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_Q (mut (ref null $bridgejsmethod.Main))))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.Q.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getKey__java_lang_String (mut (ref $function.__$java.lang.String))))
 (extends $java.lang.Object.vtable)
)

;;; Q(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.Q
 (param $this (ref null $bridgejsmethod.Main.Q))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.Q))
 ;;@ bridgejsmethod/Main.java:147:17
 (block
  ;; bridgejsmethod.Main.Q.$clinit();
  ;;@ bridgejsmethod/Main.java:147:17
  (call $$clinit__void@bridgejsmethod.Main.Q )
  ;; (Q.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:147:17
  (struct.set $bridgejsmethod.Main.Q $$outer_this__bridgejsmethod_Main_Q(local.get $this) (local.get $$outer_this))
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:147:17
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Q.this;
  ;;@ bridgejsmethod/Main.java:147:17
  (return (local.get $this))
 )
)

;;; void Q.$clinit()
(func $$clinit__void@bridgejsmethod.Main.Q
 ;;@ bridgejsmethod/Main.java:147:17
 (block
  ;; if (bridgejsmethod.Main.Q.$initialized) return;
  ;;@ bridgejsmethod/Main.java:147:17
  (if (global.get $f_$initialized__bridgejsmethod_Main_Q)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:147:17
    (return )
   )
  )
  ;; (bridgejsmethod.Main.Q.$initialized = true);
  ;;@ bridgejsmethod/Main.java:147:17
  (global.set $f_$initialized__bridgejsmethod_Main_Q (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:147:17
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Code for bridgejsmethod.Main.R [CLASS]
(type $bridgejsmethod.Main.R (struct
 (field $vtable (ref $bridgejsmethod.Main.R.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_Q (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_R (mut (ref null $bridgejsmethod.Main))))
 (extends $bridgejsmethod.Main.Q)
)
(type $bridgejsmethod.Main.R.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getKey__java_lang_String (mut (ref $function.__$java.lang.String))))
 (extends $bridgejsmethod.Main.Q.vtable)
)

;;; R(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.R
 (param $this (ref null $bridgejsmethod.Main.R))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.R))
 ;;@ bridgejsmethod/Main.java:153:17
 (block
  ;; bridgejsmethod.Main.R.$clinit();
  ;;@ bridgejsmethod/Main.java:153:17
  (call $$clinit__void@bridgejsmethod.Main.R )
  ;; (R.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:153:17
  (struct.set $bridgejsmethod.Main.R $$outer_this__bridgejsmethod_Main_R(local.get $this) (local.get $$outer_this))
  ;; Q.this.Q.<init>($outer_this);
  ;;@ bridgejsmethod/Main.java:153:17
  (drop (call $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.Q (local.get $this)(local.get $$outer_this)))
  ;; return R.this;
  ;;@ bridgejsmethod/Main.java:153:17
  (return (local.get $this))
 )
)

;;; String R.getKey()
(func $m_getKey__java_lang_String@bridgejsmethod.Main.R
 (type $function.__$java.lang.String)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 ;;@ bridgejsmethod/Main.java:155:18
 (local $this (ref null $bridgejsmethod.Main.R))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.R.rtt)))
 (block
  ;; return null;
  ;;@ bridgejsmethod/Main.java:156:6
  (return (ref.null $java.lang.String))
 )
)
(elem declare func $m_getKey__java_lang_String@bridgejsmethod.Main.R)

;;; void R.$clinit()
(func $$clinit__void@bridgejsmethod.Main.R
 ;;@ bridgejsmethod/Main.java:153:17
 (block
  ;; if (bridgejsmethod.Main.R.$initialized) return;
  ;;@ bridgejsmethod/Main.java:153:17
  (if (global.get $f_$initialized__bridgejsmethod_Main_R)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:153:17
    (return )
   )
  )
  ;; (bridgejsmethod.Main.R.$initialized = true);
  ;;@ bridgejsmethod/Main.java:153:17
  (global.set $f_$initialized__bridgejsmethod_Main_R (i32.const 1))
  ;; bridgejsmethod.Main.Q.$clinit();
  ;;@ bridgejsmethod/Main.java:153:17
  (call $$clinit__void@bridgejsmethod.Main.Q )
 )
)

;;; Code for bridgejsmethod.Main.S [CLASS]
(type $bridgejsmethod.Main.S (struct
 (field $vtable (ref $bridgejsmethod.Main.S.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_Q (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_R (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_S (mut (ref null $bridgejsmethod.Main))))
 (extends $bridgejsmethod.Main.R)
)
(type $bridgejsmethod.Main.S.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getKey__java_lang_String (mut (ref $function.__$java.lang.String))))
 (extends $bridgejsmethod.Main.R.vtable)
)

;;; S(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.S
 (param $this (ref null $bridgejsmethod.Main.S))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.S))
 ;;@ bridgejsmethod/Main.java:160:8
 (block
  ;; bridgejsmethod.Main.S.$clinit();
  ;;@ bridgejsmethod/Main.java:160:8
  (call $$clinit__void@bridgejsmethod.Main.S )
  ;; (S.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:160:8
  (struct.set $bridgejsmethod.Main.S $$outer_this__bridgejsmethod_Main_S(local.get $this) (local.get $$outer_this))
  ;; R.this.R.<init>($outer_this);
  ;;@ bridgejsmethod/Main.java:160:8
  (drop (call $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.R (local.get $this)(local.get $$outer_this)))
  ;; return S.this;
  ;;@ bridgejsmethod/Main.java:160:8
  (return (local.get $this))
 )
)

;;; void S.$clinit()
(func $$clinit__void@bridgejsmethod.Main.S
 ;;@ bridgejsmethod/Main.java:160:8
 (block
  ;; if (bridgejsmethod.Main.S.$initialized) return;
  ;;@ bridgejsmethod/Main.java:160:8
  (if (global.get $f_$initialized__bridgejsmethod_Main_S)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:160:8
    (return )
   )
  )
  ;; (bridgejsmethod.Main.S.$initialized = true);
  ;;@ bridgejsmethod/Main.java:160:8
  (global.set $f_$initialized__bridgejsmethod_Main_S (i32.const 1))
  ;; bridgejsmethod.Main.R.$clinit();
  ;;@ bridgejsmethod/Main.java:160:8
  (call $$clinit__void@bridgejsmethod.Main.R )
 )
)

;;; Class<?> S.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.S
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.S))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.S.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.S();
  (return (call $$getBridgejsmethod.Main.S__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.S)

;;; Code for bridgejsmethod.Main.GrandParent [CLASS]
(type $bridgejsmethod.Main.GrandParent (struct
 (field $vtable (ref $bridgejsmethod.Main.GrandParent.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_GrandParent (mut (ref null $bridgejsmethod.Main))))
 (extends $java.lang.Object)
)
(type $bridgejsmethod.Main.GrandParent.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_jsMethod__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_method__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; GrandParent(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.GrandParent
 (param $this (ref null $bridgejsmethod.Main.GrandParent))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.GrandParent))
 ;;@ bridgejsmethod/Main.java:185:8
 (block
  ;; bridgejsmethod.Main.GrandParent.$clinit();
  ;;@ bridgejsmethod/Main.java:185:8
  (call $$clinit__void@bridgejsmethod.Main.GrandParent )
  ;; (GrandParent.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:185:8
  (struct.set $bridgejsmethod.Main.GrandParent $$outer_this__bridgejsmethod_Main_GrandParent(local.get $this) (local.get $$outer_this))
  ;; Object.this.Object.<init>();
  ;;@ bridgejsmethod/Main.java:185:8
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return GrandParent.this;
  ;;@ bridgejsmethod/Main.java:185:8
  (return (local.get $this))
 )
)

;;; void GrandParent.jsMethod(T t)
(func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.GrandParent
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:189:16
 (local $this (ref null $bridgejsmethod.Main.GrandParent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.GrandParent.rtt)))
 (block
 )
)
(elem declare func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.GrandParent)

;;; void GrandParent.method(T t)
(func $m_method__java_lang_Object__void@bridgejsmethod.Main.GrandParent
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:191:16
 (local $this (ref null $bridgejsmethod.Main.GrandParent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.GrandParent.rtt)))
 (block
 )
)
(elem declare func $m_method__java_lang_Object__void@bridgejsmethod.Main.GrandParent)

;;; void GrandParent.$clinit()
(func $$clinit__void@bridgejsmethod.Main.GrandParent
 ;;@ bridgejsmethod/Main.java:185:8
 (block
  ;; if (bridgejsmethod.Main.GrandParent.$initialized) return;
  ;;@ bridgejsmethod/Main.java:185:8
  (if (global.get $f_$initialized__bridgejsmethod_Main_GrandParent)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:185:8
    (return )
   )
  )
  ;; (bridgejsmethod.Main.GrandParent.$initialized = true);
  ;;@ bridgejsmethod/Main.java:185:8
  (global.set $f_$initialized__bridgejsmethod_Main_GrandParent (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ bridgejsmethod/Main.java:185:8
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> GrandParent.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.GrandParent
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.GrandParent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.GrandParent.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.GrandParent();
  (return (call $$getBridgejsmethod.Main.GrandParent__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.GrandParent)

;;; Code for bridgejsmethod.Main.Parent [CLASS]
(type $bridgejsmethod.Main.Parent (struct
 (field $vtable (ref $bridgejsmethod.Main.Parent.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_GrandParent (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_Parent (mut (ref null $bridgejsmethod.Main))))
 (extends $bridgejsmethod.Main.GrandParent)
)
(type $bridgejsmethod.Main.Parent.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_jsMethod__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_method__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_jsMethod__bridgejsmethod_Main_Parent__void (mut (ref $function.$bridgejsmethod.Main.Parent__$void)))
 (field $m_method__bridgejsmethod_Main_Parent__void (mut (ref $function.$bridgejsmethod.Main.Parent__$void))))
 (extends $bridgejsmethod.Main.GrandParent.vtable)
)

;;; Parent(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.Parent
 (param $this (ref null $bridgejsmethod.Main.Parent))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.Parent))
 ;;@ bridgejsmethod/Main.java:194:8
 (block
  ;; bridgejsmethod.Main.Parent.$clinit();
  ;;@ bridgejsmethod/Main.java:194:8
  (call $$clinit__void@bridgejsmethod.Main.Parent )
  ;; (Parent.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:194:8
  (struct.set $bridgejsmethod.Main.Parent $$outer_this__bridgejsmethod_Main_Parent(local.get $this) (local.get $$outer_this))
  ;; GrandParent.this.GrandParent.<init>($outer_this);
  ;;@ bridgejsmethod/Main.java:194:8
  (drop (call $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.GrandParent (local.get $this)(local.get $$outer_this)))
  ;; return Parent.this;
  ;;@ bridgejsmethod/Main.java:194:8
  (return (local.get $this))
 )
)

;;; void Parent.jsMethod(T t)
(func $m_jsMethod__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent
 (type $function.$bridgejsmethod.Main.Parent__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $bridgejsmethod.Main.Parent))
 ;;@ bridgejsmethod/Main.java:200:16
 (local $this (ref null $bridgejsmethod.Main.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Parent.rtt)))
 (block
 )
)
(elem declare func $m_jsMethod__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)

;;; void Parent.method(T t)
(func $m_method__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent
 (type $function.$bridgejsmethod.Main.Parent__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $bridgejsmethod.Main.Parent))
 ;;@ bridgejsmethod/Main.java:203:16
 (local $this (ref null $bridgejsmethod.Main.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Parent.rtt)))
 (block
 )
)
(elem declare func $m_method__bridgejsmethod_Main_Parent__void@bridgejsmethod.Main.Parent)

;;; void Parent.jsMethod(Object arg0)
(func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.Parent
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:194:8
 (local $this (ref null $bridgejsmethod.Main.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Parent.rtt)))
 (block
  ;; Parent.this.jsMethod(((T) arg0));
  ;;@ bridgejsmethod/Main.java:194:8
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $bridgejsmethod.Main.Parent.rtt))(struct.get $bridgejsmethod.Main.Parent.vtable $m_jsMethod__bridgejsmethod_Main_Parent__void (struct.get $bridgejsmethod.Main.Parent $vtable(local.get $this))))
 )
)
(elem declare func $m_jsMethod__java_lang_Object__void@bridgejsmethod.Main.Parent)

;;; void Parent.method(Object arg0)
(func $m_method__java_lang_Object__void@bridgejsmethod.Main.Parent
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 ;;@ bridgejsmethod/Main.java:194:8
 (local $this (ref null $bridgejsmethod.Main.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Parent.rtt)))
 (block
  ;; Parent.this.method(((T) arg0));
  ;;@ bridgejsmethod/Main.java:194:8
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $bridgejsmethod.Main.Parent.rtt))(struct.get $bridgejsmethod.Main.Parent.vtable $m_method__bridgejsmethod_Main_Parent__void (struct.get $bridgejsmethod.Main.Parent $vtable(local.get $this))))
 )
)
(elem declare func $m_method__java_lang_Object__void@bridgejsmethod.Main.Parent)

;;; void Parent.$clinit()
(func $$clinit__void@bridgejsmethod.Main.Parent
 ;;@ bridgejsmethod/Main.java:194:8
 (block
  ;; if (bridgejsmethod.Main.Parent.$initialized) return;
  ;;@ bridgejsmethod/Main.java:194:8
  (if (global.get $f_$initialized__bridgejsmethod_Main_Parent)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:194:8
    (return )
   )
  )
  ;; (bridgejsmethod.Main.Parent.$initialized = true);
  ;;@ bridgejsmethod/Main.java:194:8
  (global.set $f_$initialized__bridgejsmethod_Main_Parent (i32.const 1))
  ;; bridgejsmethod.Main.GrandParent.$clinit();
  ;;@ bridgejsmethod/Main.java:194:8
  (call $$clinit__void@bridgejsmethod.Main.GrandParent )
 )
)

;;; Class<?> Parent.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.Parent
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Parent.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.Parent();
  (return (call $$getBridgejsmethod.Main.Parent__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.Parent)

;;; Code for bridgejsmethod.Main.Child [CLASS]
(type $bridgejsmethod.Main.Child (struct
 (field $vtable (ref $bridgejsmethod.Main.Child.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__bridgejsmethod_Main_GrandParent (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_Parent (mut (ref null $bridgejsmethod.Main)))
 (field $$outer_this__bridgejsmethod_Main_Child (mut (ref null $bridgejsmethod.Main))))
 (extends $bridgejsmethod.Main.Parent)
)
(type $bridgejsmethod.Main.Child.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_jsMethod__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_method__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_jsMethod__bridgejsmethod_Main_Parent__void (mut (ref $function.$bridgejsmethod.Main.Parent__$void)))
 (field $m_method__bridgejsmethod_Main_Parent__void (mut (ref $function.$bridgejsmethod.Main.Parent__$void))))
 (extends $bridgejsmethod.Main.Parent.vtable)
)

;;; Child(Main $outer_this)
(func $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.Child
 (param $this (ref null $bridgejsmethod.Main.Child))
 (param $$outer_this (ref null $bridgejsmethod.Main))
 (result (ref null $bridgejsmethod.Main.Child))
 ;;@ bridgejsmethod/Main.java:210:8
 (block
  ;; bridgejsmethod.Main.Child.$clinit();
  ;;@ bridgejsmethod/Main.java:210:8
  (call $$clinit__void@bridgejsmethod.Main.Child )
  ;; (Child.this.this = $outer_this);
  ;;@ bridgejsmethod/Main.java:210:8
  (struct.set $bridgejsmethod.Main.Child $$outer_this__bridgejsmethod_Main_Child(local.get $this) (local.get $$outer_this))
  ;; Parent.this.Parent.<init>($outer_this);
  ;;@ bridgejsmethod/Main.java:210:8
  (drop (call $m_<init>__bridgejsmethod_Main@bridgejsmethod.Main.Parent (local.get $this)(local.get $$outer_this)))
  ;; return Child.this;
  ;;@ bridgejsmethod/Main.java:210:8
  (return (local.get $this))
 )
)

;;; void Child.$clinit()
(func $$clinit__void@bridgejsmethod.Main.Child
 ;;@ bridgejsmethod/Main.java:210:8
 (block
  ;; if (bridgejsmethod.Main.Child.$initialized) return;
  ;;@ bridgejsmethod/Main.java:210:8
  (if (global.get $f_$initialized__bridgejsmethod_Main_Child)
   (then
    ;; return;
    ;;@ bridgejsmethod/Main.java:210:8
    (return )
   )
  )
  ;; (bridgejsmethod.Main.Child.$initialized = true);
  ;;@ bridgejsmethod/Main.java:210:8
  (global.set $f_$initialized__bridgejsmethod_Main_Child (i32.const 1))
  ;; bridgejsmethod.Main.Parent.$clinit();
  ;;@ bridgejsmethod/Main.java:210:8
  (call $$clinit__void@bridgejsmethod.Main.Parent )
 )
)

;;; Class<?> Child.getClass()
(func $m_getClass__java_lang_Class@bridgejsmethod.Main.Child
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $bridgejsmethod.Main.Child))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $bridgejsmethod.Main.Child.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBridgejsmethod.Main.Child();
  (return (call $$getBridgejsmethod.Main.Child__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@bridgejsmethod.Main.Child)

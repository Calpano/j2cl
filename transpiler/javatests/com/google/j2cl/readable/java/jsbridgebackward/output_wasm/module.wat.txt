;;; Code for jsbridgebackward.A [vtable]
(global $jsbridgebackward.A.vtable (mut (ref null $jsbridgebackward.A.vtable)) (ref.null $jsbridgebackward.A.vtable))

;;; Code for jsbridgebackward.InterfaceImpl [vtable]
(global $jsbridgebackward.InterfaceImpl.vtable (mut (ref null $jsbridgebackward.InterfaceImpl.vtable)) (ref.null $jsbridgebackward.InterfaceImpl.vtable))

;;; Code for jsbridgebackward.MyJsInterface [static fields]
(global $f_$initialized__jsbridgebackward_MyJsInterface (mut i32) (i32.const 0))

;;; Code for jsbridgebackward.A [static fields]
(global $f_$initialized__jsbridgebackward_A (mut i32) (i32.const 0))

;;; Code for jsbridgebackward.InterfaceImpl [static fields]
(global $f_$initialized__jsbridgebackward_InterfaceImpl (mut i32) (i32.const 0))

;;; Code for jsbridgebackward.MyJsInterface [INTERFACE]
(type $jsbridgebackward.MyJsInterface.vtable (struct
 (field $m_foo__int__int (mut (ref $function.$int__$int)))
))

;;; void MyJsInterface.$clinit()
(func $$clinit__void@jsbridgebackward.MyJsInterface
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:21:10
  (block
   ;; if (jsbridgebackward.MyJsInterface.$initialized) return;
   ;;@ jsbridgebackward/InterfaceImpl.java:21:10
   (if (global.get $f_$initialized__jsbridgebackward_MyJsInterface)
    (then
     ;; return;
     ;;@ jsbridgebackward/InterfaceImpl.java:21:10
     (br $return.label)
    )
   )
   ;; (jsbridgebackward.MyJsInterface.$initialized = true);
   ;;@ jsbridgebackward/InterfaceImpl.java:21:10
   (global.set $f_$initialized__jsbridgebackward_MyJsInterface (i32.const 1))
  )
 )
)

;;; Class<?> MyJsInterface.getClass()
(func $m_getClass__java_lang_Class@jsbridgebackward.MyJsInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgebackward.MyJsInterface();
   (local.set $return.value (call $$getJsbridgebackward.MyJsInterface__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgebackward.MyJsInterface)

;;; Code for jsbridgebackward.A [CLASS]
(type $jsbridgebackward.A (struct
 (field $vtable (ref $jsbridgebackward.A.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsbridgebackward.A.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__int__int (mut (ref $function.$int__$int)))
))

;;; A()
(func $m_<init>___$pp_jsbridgebackward@jsbridgebackward.A
 (param $this (ref null $jsbridgebackward.A))
 (result (ref null $jsbridgebackward.A))
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:25:6
  (block
   ;; jsbridgebackward.A.$clinit();
   ;;@ jsbridgebackward/InterfaceImpl.java:25:6
   (call $$clinit__void@jsbridgebackward.A )
   ;; Object.this.Object.<init>();
   ;;@ jsbridgebackward/InterfaceImpl.java:25:6
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int A.foo(int a)
(func $m_foo__int__int@jsbridgebackward.A
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsbridgebackward.A))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgebackward.A.rtt)))
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:26:13
  (block
   ;; return a;
   ;;@ jsbridgebackward/InterfaceImpl.java:27:4
   (local.set $return.value (local.get $a))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_foo__int__int@jsbridgebackward.A)

;;; void A.$clinit()
(func $$clinit__void@jsbridgebackward.A
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:25:6
  (block
   ;; if (jsbridgebackward.A.$initialized) return;
   ;;@ jsbridgebackward/InterfaceImpl.java:25:6
   (if (global.get $f_$initialized__jsbridgebackward_A)
    (then
     ;; return;
     ;;@ jsbridgebackward/InterfaceImpl.java:25:6
     (br $return.label)
    )
   )
   ;; (jsbridgebackward.A.$initialized = true);
   ;;@ jsbridgebackward/InterfaceImpl.java:25:6
   (global.set $f_$initialized__jsbridgebackward_A (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ jsbridgebackward/InterfaceImpl.java:25:6
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> A.getClass()
(func $m_getClass__java_lang_Class@jsbridgebackward.A
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsbridgebackward.A))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgebackward.A.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgebackward.A();
   (local.set $return.value (call $$getJsbridgebackward.A__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgebackward.A)

;;; Code for jsbridgebackward.InterfaceImpl [CLASS]
(type $jsbridgebackward.InterfaceImpl (struct
 (field $vtable (ref $jsbridgebackward.InterfaceImpl.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsbridgebackward.InterfaceImpl.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__int__int (mut (ref $function.$int__$int)))
))

;;; InterfaceImpl()
(func $m_<init>__@jsbridgebackward.InterfaceImpl
 (param $this (ref null $jsbridgebackward.InterfaceImpl))
 (result (ref null $jsbridgebackward.InterfaceImpl))
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:31:13
  (block
   ;; jsbridgebackward.InterfaceImpl.$clinit();
   ;;@ jsbridgebackward/InterfaceImpl.java:31:13
   (call $$clinit__void@jsbridgebackward.InterfaceImpl )
   ;; A.this.A.<init>();
   ;;@ jsbridgebackward/InterfaceImpl.java:31:13
   (drop (call $m_<init>___$pp_jsbridgebackward@jsbridgebackward.A (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void InterfaceImpl.$clinit()
(func $$clinit__void@jsbridgebackward.InterfaceImpl
 (block $return.label
  ;;@ jsbridgebackward/InterfaceImpl.java:31:13
  (block
   ;; if (jsbridgebackward.InterfaceImpl.$initialized) return;
   ;;@ jsbridgebackward/InterfaceImpl.java:31:13
   (if (global.get $f_$initialized__jsbridgebackward_InterfaceImpl)
    (then
     ;; return;
     ;;@ jsbridgebackward/InterfaceImpl.java:31:13
     (br $return.label)
    )
   )
   ;; (jsbridgebackward.InterfaceImpl.$initialized = true);
   ;;@ jsbridgebackward/InterfaceImpl.java:31:13
   (global.set $f_$initialized__jsbridgebackward_InterfaceImpl (i32.const 1))
   ;; jsbridgebackward.A.$clinit();
   ;;@ jsbridgebackward/InterfaceImpl.java:31:13
   (call $$clinit__void@jsbridgebackward.A )
  )
 )
)

;;; Class<?> InterfaceImpl.getClass()
(func $m_getClass__java_lang_Class@jsbridgebackward.InterfaceImpl
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsbridgebackward.InterfaceImpl))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgebackward.InterfaceImpl.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgebackward.InterfaceImpl();
   (local.set $return.value (call $$getJsbridgebackward.InterfaceImpl__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgebackward.InterfaceImpl)

 ;;; Code for jsbridgebackward.A [vtable.init]
 (global.set $jsbridgebackward.A.vtable
  (struct.new_with_rtt $jsbridgebackward.A.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsbridgebackward.A)
   (ref.func $m_foo__int__int@jsbridgebackward.A)
   (rtt.canon $jsbridgebackward.A.vtable)
  )
 )

 ;;; Code for jsbridgebackward.A [itable.init]
 (global.set $jsbridgebackward.A.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for jsbridgebackward.InterfaceImpl [vtable.init]
 (global.set $jsbridgebackward.InterfaceImpl.vtable
  (struct.new_with_rtt $jsbridgebackward.InterfaceImpl.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsbridgebackward.InterfaceImpl)
   (ref.func $m_foo__int__int@jsbridgebackward.A)
   (rtt.canon $jsbridgebackward.InterfaceImpl.vtable)
  )
 )

 ;;; Code for jsbridgebackward.InterfaceImpl [itable.init]
 (global.set $jsbridgebackward.InterfaceImpl.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsbridgebackward.InterfaceImpl.itable) (i32.const 0)
 (struct.new_with_rtt $jsbridgebackward.MyJsInterface.vtable
  (ref.func $m_foo__int__int@jsbridgebackward.A)
  (rtt.canon $jsbridgebackward.MyJsInterface.vtable)
 ))

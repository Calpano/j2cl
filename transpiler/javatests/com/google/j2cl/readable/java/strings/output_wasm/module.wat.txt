;;; Code for strings.Strings

;;; CLASS  Strings

(global $ESCAPE_CODES@strings.Strings (mut (ref null $java.lang.String)) (ref.null $java.lang.String))
(global $ESCAPE_CODES_COPY@strings.Strings (mut (ref null $java.lang.String)) (ref.null $java.lang.String))
(type $strings.Strings (struct
 (field $someString@strings.Strings (mut (ref null $java.lang.String)))
 (field $nonBmpChar@strings.Strings (mut (ref null $java.lang.String)))
 (field $wideColon@strings.Strings (mut (ref null $java.lang.String)))
))

;;; Strings()
(func $<init><>:void@strings.Strings
 (param $this (ref null $strings.Strings))
 (result (ref null $strings.Strings))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Strings.test()
(func $test<>:void@strings.Strings
 (param $this (ref null $java.lang.Object))
 (local $s1 (ref null $java.lang.String))
 (local $s2 (ref null $java.lang.String))
 (local $s3 (ref null $java.lang.String))
 (local $s4 (ref null $java.lang.String))
 (local $c1 i32)
 (local $c2 i32)
 (local $$qualifier (ref null $strings.Strings.StringHolder))
 (local $$qualifier_1 (ref null $strings.Strings.StringHolder))
 (local $$qualifier_2 (ref null $strings.Strings.StringHolder))
 (block $return.label
  (block
   ;; String s1 = null;
   (local.set $s1 (ref.null $java.lang.String))
   
   ;; String s2 = null;
   (local.set $s2 (ref.null $java.lang.String))
   
   ;; String s3 = (s1 + s2);
   (local.set $s3 (ref.null $java.lang.String))
   
   ;; (s2 = (s2 + s2));
   (local.set $s2 (ref.null $java.lang.String))
   ;; (s1 = (s1 + "a"));
   (local.set $s1 (ref.null $java.lang.String))
   ;; (s3 = ((((s1 + s1) + s2) + null) + "a"));
   (local.set $s3 (ref.null $java.lang.String))
   ;; (s3 = (((("a" + s1) + s1) + s2) + null));
   (local.set $s3 (ref.null $java.lang.String))
   ;; String s4;
   
   ;; char c1 = 70;
   (local.set $c1 (i32.const 70))
   
   ;; char c2 = 111;
   (local.set $c2 (i32.const 111))
   
   ;; (s4 = ((c1 + c2) + "o"));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + (1 + "")));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + 1));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + 67));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + 1));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + 1.0));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + 1.0));
   (local.set $s4 (ref.null $java.lang.String))
   ;; (s4 = (s4 + ((short) 1)));
   (local.set $s4 (ref.null $java.lang.String))
   (block
    ;; StringHolder $qualifier = new StringHolder.<init>();
    (local.set $$qualifier (call $<init><>:void@strings.Strings.StringHolder (struct.new_default_with_rtt $strings.Strings.StringHolder (global.get $strings.Strings.StringHolder.rtt)) ))
    
    ;; ($qualifier.s = ($qualifier.s + s4));
    (struct.set $strings.Strings.StringHolder $s@strings.Strings.StringHolder  (local.get $$qualifier) (ref.null $java.lang.String)))
   (block
    ;; StringHolder $qualifier = new StringHolder.<init>();
    (local.set $$qualifier_1 (call $<init><>:void@strings.Strings.StringHolder (struct.new_default_with_rtt $strings.Strings.StringHolder (global.get $strings.Strings.StringHolder.rtt)) ))
    
    ;; ($qualifier.s = ($qualifier.s + c1));
    (struct.set $strings.Strings.StringHolder $s@strings.Strings.StringHolder  (local.get $$qualifier_1) (ref.null $java.lang.String)))
   (block
    ;; StringHolder $qualifier = new StringHolder.<init>();
    (local.set $$qualifier_2 (call $<init><>:void@strings.Strings.StringHolder (struct.new_default_with_rtt $strings.Strings.StringHolder (global.get $strings.Strings.StringHolder.rtt)) ))
    
    ;; ($qualifier.s = ($qualifier.s + "o"));
    (struct.set $strings.Strings.StringHolder $s@strings.Strings.StringHolder  (local.get $$qualifier_2) (ref.null $java.lang.String))))
 )
)

;;; CLASS  StringHolder

(type $strings.Strings.StringHolder (struct
 (field $s@strings.Strings.StringHolder (mut (ref null $java.lang.String)))
))

;;; StringHolder()
(func $<init><>:void@strings.Strings.StringHolder
 (param $this (ref null $strings.Strings.StringHolder))
 (result (ref null $strings.Strings.StringHolder))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)


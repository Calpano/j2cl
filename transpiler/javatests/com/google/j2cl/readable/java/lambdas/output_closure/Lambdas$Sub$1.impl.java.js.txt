goog.module('lambdas.Lambdas.Sub.$1$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const Runnable = goog.require('lambdas.Lambdas.Runnable$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Sub = goog.forwardDeclare('lambdas.Lambdas.Sub$impl');
let Super = goog.forwardDeclare('lambdas.Lambdas.Super$impl');

/**
 * @implements {Runnable}
 */
class $1 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {Sub} @nodts*/
  this.$outer_this__lambdas_Lambdas_Sub_1;
 }
 /** @nodts @return {!$1} */
 static $create__lambdas_Lambdas_Sub(/** Sub */ $outer_this) {
  $1.$clinit();
  let $instance = new $1();
  $instance.$ctor__lambdas_Lambdas_Sub_1__lambdas_Lambdas_Sub__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__lambdas_Lambdas_Sub_1__lambdas_Lambdas_Sub__void(/** Sub */ $outer_this) {
  this.$outer_this__lambdas_Lambdas_Sub_1 = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @override @nodts */
 m_run__void() {
  Super.prototype.m_m__void_$pp_lambdas.call(this.$outer_this__lambdas_Lambdas_Sub_1);
 }
 /** @nodts */
 static $clinit() {
  $1.$clinit = () =>{};
  $1.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $1;
 }
 
 /** @nodts */
 static $loadModules() {
  Super = goog.module.get('lambdas.Lambdas.Super$impl');
 }
}
Runnable.$markImplementor($1);
$Util.$setClassMetadata($1, 'lambdas.Lambdas$Sub$1');

exports = $1;

//# sourceMappingURL=Lambdas$Sub$1.js.map

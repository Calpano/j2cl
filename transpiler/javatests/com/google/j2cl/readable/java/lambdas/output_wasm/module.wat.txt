;;; Code for lambdas.Lambdas

;;; CLASS  Lambdas
(type $lambdas.Lambdas (struct
 (field $field@lambdas.Lambdas (mut i32))
))
(global $identityFunction@lambdas.Lambdas (mut (ref null $lambdas.Lambdas.IdentityFunction)) (ref.null $lambdas.Lambdas.IdentityFunction))

;;; Lambdas()
(func $<init><>:void@lambdas.Lambdas
 (param $this (ref null $lambdas.Lambdas))
 (result (ref null $lambdas.Lambdas))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; int Lambdas.call(FunctionalInterface intf, int n)
(func $call<lambdas.Lambdas.FunctionalInterface|int>:int@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (param $intf (ref null $java.lang.Object))
 (param $n i32)
 (result i32)
 (local $return.value i32)
 (block $return.label
  (block
   ;; return (Lambdas.this.field + intf.m(n));
   (local.set $return.value (i32.add (struct.get $lambdas.Lambdas $field@lambdas.Lambdas  (ref.null $lambdas.Lambdas)) (i32.const 0)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void Lambdas.testLambdaExpressionStyle()
(func $testLambdaExpressionStyle<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $i i32)
 (block $return.label
  (block
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.testLambdaBlockStyle()
(func $testLambdaBlockStyle<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $i i32)
 (block $return.label
  (block
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.testLambdaCaptureField()
(func $testLambdaCaptureField<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $i i32)
 (block $return.label
  (block
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.testLambdaCaptureLocal()
(func $testLambdaCaptureLocal<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $x i32)
 (local $i i32)
 (block $return.label
  (block
   ;; int x = 1;
   
   (local.set $x (i32.const 1))
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.testLambdaCaptureFieldAndLocal()
(func $testLambdaCaptureFieldAndLocal<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $x i32)
 (local $i i32)
 (local $y i32)
 (block $return.label
  (block
   ;; int x = 1;
   
   (local.set $x (i32.const 1))
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.funOuter()
(func $funOuter<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; void Lambdas.testLambdaCallOuterFunction()
(func $testLambdaCallOuterFunction<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $i i32)
 (block $return.label
  (block
   ;; Lambdas.this.call(function (int i){
   (i32.const 0)
   drop
  )
 )
)

;;; void Lambdas.testLambdaInStaticContext()
(func $testLambdaInStaticContext<>:void@lambdas.Lambdas
 (local $f (ref null $java.lang.Object))
 (local $i i32)
 (block $return.label
  (block
   ;; FunctionalInterface f = function (int i){
   
   (local.set $f (ref.null $java.lang.Object))
  )
 )
)

;;; void Lambdas.testInstanceMethodTypeVariableThroughLambda()
(func $testInstanceMethodTypeVariableThroughLambda<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $wrapped (ref null $java.lang.Object))
 (local $f (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Functional<T> wrapped = function (Functional<T> f){
   
   (local.set $wrapped (ref.null $java.lang.Object))
  )
 )
)

;;; void Lambdas.testStaticMethodTypeVariableThroughLambda()
(func $testStaticMethodTypeVariableThroughLambda<>:void@lambdas.Lambdas
 (local $wrapped (ref null $java.lang.Object))
 (local $f (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Functional<T> wrapped = function (Functional<T> f){
   
   (local.set $wrapped (ref.null $java.lang.Object))
  )
 )
)

;;; T Lambdas.callWithTypeVariable(GenericFunctionalInterface<T> intf, T e)
(func $callWithTypeVariable<lambdas.Lambdas.GenericFunctionalInterface|java.lang.Object>:java.lang.Object@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (param $intf (ref null $java.lang.Object))
 (param $e (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return intf.m(e);
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; Error Lambdas.callParameterized(GenericFunctionalInterface<Error> intf, Error e)
(func $callParameterized<lambdas.Lambdas.GenericFunctionalInterface|java.lang.Error>:java.lang.Error@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (param $intf (ref null $java.lang.Object))
 (param $e (ref null $java.lang.Error))
 (result (ref null $java.lang.Error))
 (local $return.value (ref null $java.lang.Error))
 (block $return.label
  (block
   ;; return ((Error) intf.m(e));
   (local.set $return.value (ref.cast $java.lang.Object $java.lang.Error (ref.null $java.lang.Error) (global.get $java.lang.Error.rtt)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; Enum<T> Lambdas.callTypeVariableWithBounds(GenericFunctionalInterface<Enum<T>> intf, Enum<T> e)
(func $callTypeVariableWithBounds<lambdas.Lambdas.GenericFunctionalInterface|java.lang.Enum>:java.lang.Enum@lambdas.Lambdas
 (param $intf (ref null $java.lang.Object))
 (param $e (ref null $java.lang.Enum))
 (result (ref null $java.lang.Enum))
 (local $return.value (ref null $java.lang.Enum))
 (block $return.label
  (block
   ;; return ((Enum<T>) intf.m(e));
   (local.set $return.value (ref.cast $java.lang.Object $java.lang.Enum (ref.null $java.lang.Enum) (global.get $java.lang.Enum.rtt)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; GenericFunctionalInterface<T> Lambdas.callWithBiFunction(BiFunction<T, String, Double> fn)
(func $callWithBiFunction<lambdas.Lambdas.BiFunction>:lambdas.Lambdas.GenericFunctionalInterface@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (param $fn (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void Lambdas.testLambdaWithGenerics()
(func $testLambdaWithGenerics<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $i (ref null $java.lang.Error))
 (local $i_1 (ref null $java.lang.Error))
 (local $i_2 (ref null $java.lang.Enum))
 (local $x (ref null $java.lang.Object))
 (local $y (ref null $java.lang.String))
 (local $f (ref null $java.lang.Object))
 (local $item (ref null $java.lang.Enum))
 (block $return.label
  (block
   ;; Lambdas.this.callWithTypeVariable(function (Error i){
   (ref.null $java.lang.Error)
   drop
   ;; Lambdas.this.callParameterized(function (Error i){
   (ref.null $java.lang.Error)
   drop
   ;; lambdas.Lambdas.callTypeVariableWithBounds(function (Enum<T> i){
   (call $callTypeVariableWithBounds<lambdas.Lambdas.GenericFunctionalInterface|java.lang.Enum>:java.lang.Enum@lambdas.Lambdas (ref.null $java.lang.Object)(ref.cast $java.lang.Object $java.lang.Enum (ref.null $java.lang.Object) (global.get $java.lang.Enum.rtt)))
   drop
   ;; Lambdas.this.callWithBiFunction(function (Object x,String y){
   (ref.null $java.lang.Object)
   drop
   ;; Function<? super T, ?> f = function (T item){
   
   (local.set $f (ref.null $java.lang.Object))
  )
 )
)

;;; Object Lambdas.m()
(func $m<>:java.lang.Object@lambdas.Lambdas
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void Lambdas.testLambdaCallingStaticMethod()
(func $testLambdaCallingStaticMethod<>:void@lambdas.Lambdas
 (local $f (ref null $java.lang.Object))
 (local $l (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Function<Object, ?> f = function (Object l){
   
   (local.set $f (ref.null $java.lang.Object))
  )
 )
)

;;; void Lambdas.testLambdaReturningVoidAsExpression()
(func $testLambdaReturningVoidAsExpression<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $runner (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; FunctionalInterfaceWithMethodReturningVoid runner = function (){
   
   (local.set $runner (ref.null $java.lang.Object))
  )
 )
)

;;; void Lambdas.testAnonymousInsideLambda()
(func $testAnonymousInsideLambda<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $runner (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; FunctionalInterfaceWithMethodReturningVoid runner = function (){
   
   (local.set $runner (ref.null $java.lang.Object))
  )
 )
)

;;; GenericJsFunction<E, E> Lambdas.identity()
(func $identity<>:lambdas.Lambdas.GenericJsFunction@lambdas.Lambdas
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; if ((lambdas.Lambdas.identityFunction == null)) {
   (if (ref.eq (global.get $identityFunction@lambdas.Lambdas) (ref.null $java.lang.Object))
    (then
     (block
      ;; (lambdas.Lambdas.identityFunction = new IdentityFunction.<init>());
      (global.set $identityFunction@lambdas.Lambdas (call $<init><>:void@lambdas.Lambdas.IdentityFunction (struct.new_with_rtt $lambdas.Lambdas.IdentityFunction (global.get $lambdas.Lambdas.IdentityFunction.rtt))))
     )
    )
   )
   ;; return ((GenericJsFunction<E, E>) lambdas.Lambdas.identityFunction);
   (local.set $return.value (global.get $identityFunction@lambdas.Lambdas))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void Lambdas.testJsInteropLambdas()
(func $testJsInteropLambdas<>:void@lambdas.Lambdas
 (local $thenable (ref null $java.lang.Object))
 (local $f1 (ref null $java.lang.Object))
 (local $f2 (ref null $java.lang.Object))
 (local $otherThenable (ref null $java.lang.Object))
 (local $f1_1 (ref null $java.lang.Object))
 (local $f2_1 (ref null $java.lang.Object))
 (local $stringJsSupplier (ref null $java.lang.Object))
 (local $equals (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Thenable<String> thenable = function (GenericJsFunction<Void, String> f1,GenericJsFunction<Void, Throwable> f2){
   
   (local.set $thenable (ref.null $java.lang.Object))
   ;; AnotherThenable<String> otherThenable = function (GenericJsFunction<Void, String> f1,GenericJsFunction<Void, Throwable> f2){
   
   (local.set $otherThenable (ref.null $java.lang.Object))
   ;; JsSupplier<Integer> stringJsSupplier = function (){
   
   (local.set $stringJsSupplier (ref.null $java.lang.Object))
   ;; stringJsSupplier.get();
   (ref.null $java.lang.Integer)
   drop
   ;; Equals equals = stringJsSupplier;
   
   (local.set $equals (local.get $stringJsSupplier))
   ;; equals.equals(null);
   (i32.const 0)
   drop
   ;; equals.get();
   (ref.null $java.lang.Object)
   drop
  )
 )
)

;;; void Lambdas.testIntersectionTyping()
(func $testIntersectionTyping<>:void@lambdas.Lambdas
 (local $o (ref null $java.lang.Object))
 (local $x (ref null $java.lang.String))
 (local $x_1 (ref null $java.lang.String))
 (local $x_2 (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object o = (((GenericFunctionalInterface<String>&JustADefaultT<Number>)) function (String x){
   
   (local.set $o (ref.null $java.lang.Object))
   ;; (o = (((GenericFunctionalInterface<String>&JustADefaultS<Number>)) function (String x){
   (local.set $o (ref.null $java.lang.Object))
   ;; (o = (((GenericFunctionalInterface<U>&JustADefaultS<V>)) function (U x){
   (local.set $o (ref.null $java.lang.Object))
  )
 )
)

;;; void Lambdas.testDefaultMethodsInIntersectionAdaptor()
(func $testDefaultMethodsInIntersectionAdaptor<>:void@lambdas.Lambdas
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $t (ref null $java.lang.String))
 (local $u (ref null $java.lang.String))
 (block $return.label
  (block
   ;; Object o = (((BiFunction<String, String, String>&MarkerWithDefaultMethod)) function (String t,String u){
   
   (local.set $o (ref.null $java.lang.Object))
  )
 )
)

;;; INTERFACE  FunctionalInterface

;;; INTERFACE  Functional

;;; CLASS  <anonymous> implements Functional<T>
(type $lambdas.Lambdas.1 (struct
 (field $this@lambdas.Lambdas.1 (mut (ref null $lambdas.Lambdas)))
))

;;; <anonymous> implements Functional<T>()
(func $<init><>:void@lambdas.Lambdas.1
 (param $this (ref null $lambdas.Lambdas.1))
 (result (ref null $lambdas.Lambdas.1))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Functional<T> <anonymous> implements Functional<T>.wrap(Functional<T> f)
(func $wrap<lambdas.Lambdas.Functional>:lambdas.Lambdas.Functional@lambdas.Lambdas.1
 (param $this (ref null $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; CLASS  <anonymous> implements Functional<T>
(type $lambdas.Lambdas.2 (struct
))

;;; <anonymous> implements Functional<T>()
(func $<init><>:void@lambdas.Lambdas.2
 (param $this (ref null $lambdas.Lambdas.2))
 (result (ref null $lambdas.Lambdas.2))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Functional<T> <anonymous> implements Functional<T>.wrap(Functional<T> f)
(func $wrap<lambdas.Lambdas.Functional>:lambdas.Lambdas.Functional@lambdas.Lambdas.2
 (param $this (ref null $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  GenericFunctionalInterface

;;; INTERFACE  BiFunction

;;; BiFunction<T, U, V> BiFunction.andThen(Function<? super R, ? extends V> after)
(func $andThen<lambdas.Lambdas.Function>:lambdas.Lambdas.BiFunction@lambdas.Lambdas.BiFunction
 (param $this (ref null $java.lang.Object))
 (param $after (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (local $t (ref null $java.lang.Object))
 (local $u (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return function (T t,U u){
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  Function

;;; Function<T, T> Function.identity()
(func $identity<>:lambdas.Lambdas.Function@lambdas.Lambdas.Function
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (local $t (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return function (T t){
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  FunctionalInterfaceWithMethodReturningVoid

;;; CLASS  <anonymous> extends Object
(type $lambdas.Lambdas.3 (struct
 (field $this@lambdas.Lambdas.3 (mut (ref null $lambdas.Lambdas)))
))

;;; <anonymous> extends Object()
(func $<init><>:void@lambdas.Lambdas.3
 (param $this (ref null $lambdas.Lambdas.3))
 (result (ref null $lambdas.Lambdas.3))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Parent
(type $lambdas.Lambdas.Parent (struct
 (field $fieldInParent@lambdas.Lambdas.Parent (mut i32))
))

;;; Parent()
(func $<init><>:void@lambdas.Lambdas.Parent
 (param $this (ref null $lambdas.Lambdas.Parent))
 (result (ref null $lambdas.Lambdas.Parent))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Parent.funInParent()
(func $funInParent<>:void@lambdas.Lambdas.Parent
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; CLASS  LambdaInSubClass
(type $lambdas.Lambdas.LambdaInSubClass (struct
 (field $fieldInParent@lambdas.Lambdas.Parent (mut i32))
))

;;; LambdaInSubClass()
(func $<init><>:void@lambdas.Lambdas.LambdaInSubClass
 (param $this (ref null $lambdas.Lambdas.LambdaInSubClass))
 (result (ref null $lambdas.Lambdas.LambdaInSubClass))
 (block $return.label
  (block
   ;; Parent.this.Parent.<init>();
   
  )
 )
 (local.get $this)
)

;;; void LambdaInSubClass.testLambdaInSubclass()
(func $testLambdaInSubclass<>:void@lambdas.Lambdas.LambdaInSubClass
 (param $this (ref null $java.lang.Object))
 (local $l (ref null $java.lang.Object))
 (local $i i32)
 (local $a i32)
 (block $return.label
  (block
   ;; FunctionalInterface l = function (int i){
   
   (local.set $l (ref.null $java.lang.Object))
  )
 )
)

;;; INTERFACE  GenericJsFunction

;;; INTERFACE  Thenable

;;; INTERFACE  AnotherThenable

;;; CLASS  IdentityFunction
(type $lambdas.Lambdas.IdentityFunction (struct
))

;;; IdentityFunction()
(func $<init><>:void@lambdas.Lambdas.IdentityFunction
 (param $this (ref null $lambdas.Lambdas.IdentityFunction))
 (result (ref null $lambdas.Lambdas.IdentityFunction))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Object IdentityFunction.apply(Object o)
(func $apply<java.lang.Object>:java.lang.Object@lambdas.Lambdas.IdentityFunction
 (param $this (ref null $java.lang.Object))
 (param $o (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return o;
   (local.set $return.value (local.get $o))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  Equals

;;; T Equals.get()
(func $get<>:java.lang.Object@lambdas.Lambdas.Equals
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  JsSupplier

;;; INTERFACE  JustADefaultT

;;; void JustADefaultT.method(T t)
(func $method<java.lang.Object>:void@lambdas.Lambdas.JustADefaultT
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; INTERFACE  JustADefaultS

;;; void JustADefaultS.method(S t)
(func $method<java.lang.Object>:void@lambdas.Lambdas.JustADefaultS
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; INTERFACE  MarkerWithDefaultMethod

;;; void MarkerWithDefaultMethod.defaultMethod()
(func $defaultMethod<>:void@lambdas.Lambdas.MarkerWithDefaultMethod
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)


package booleanoperations

open class BooleanOperations {
 constructor(): super()

 open fun test() {
  var ls: Boolean = true
  val rs: Boolean = true
  var r: Boolean = true
  val t: Boolean = !!!true
  r = ls == rs
  r = ls != rs
  r = ls.xor(rs)
  r = ls.and(rs)
  r = ls.or(rs)
  r = ls && rs
  r = ls || rs
  r = run {
   ls = rs
   ls
  }
  r = r.xor(rs)
  r = r.and(rs)
  r = r.or(rs)
  booleanoperations.BooleanOperations.acceptBoolean(ls == rs)
  booleanoperations.BooleanOperations.acceptBoolean(ls != rs)
  booleanoperations.BooleanOperations.acceptBoolean(ls.xor(rs))
  booleanoperations.BooleanOperations.acceptBoolean(ls.and(rs))
  booleanoperations.BooleanOperations.acceptBoolean(ls.or(rs))
  booleanoperations.BooleanOperations.acceptBoolean(ls && rs)
  booleanoperations.BooleanOperations.acceptBoolean(ls || rs)
  booleanoperations.BooleanOperations.acceptBoolean(run {
   ls = rs
   ls
  })
  var br: Boolean?
  br = ls == rs
  br = ls != rs
  br = ls.xor(rs)
  br = ls.and(rs)
  br = ls.or(rs)
  br = ls && rs
  br = ls || rs
  br = run {
   ls = rs
   ls
  }
  if (ls == rs) {
   r = true
  }
  if (ls != rs) {
   r = true
  }
  if (ls.xor(rs)) {
   r = true
  }
  if (ls.and(rs)) {
   r = true
  }
  if (ls.or(rs)) {
   r = true
  }
  if (ls && rs) {
   r = true
  }
  if (ls || rs) {
   r = true
  }
  var finalOuter: booleanoperations.`BooleanOperations$1Outer`? = booleanoperations.`BooleanOperations$1Outer`(this)
  finalOuter!!.b = finalOuter!!.b.or(true)
  var outer: booleanoperations.`BooleanOperations$1Outer`? = booleanoperations.`BooleanOperations$1Outer`(this)
  outer!!.b = outer!!.b.or(run {
   outer = null
   outer
  } == null)
 }

 companion object {
  @JvmStatic
  internal fun acceptBoolean(b: Boolean) {}
 }
}

open class `BooleanOperations$1Outer` {
 internal constructor(`$outer_this`: booleanoperations.BooleanOperations?): super() {
  this.`this` = `$outer_this`
 }

 @JvmField val `this`: booleanoperations.BooleanOperations?

 @JvmField internal var b: Boolean = false
}

open class `BooleanOperations$1Outer$Inner` {
 internal constructor(`$outer_this`: booleanoperations.`BooleanOperations$1Outer`?): super() {
  this.`this` = `$outer_this`
 }

 @JvmField val `this`: booleanoperations.`BooleanOperations$1Outer`?

 init {
  this.`this`!!.b = this.`this`!!.b.or(true)
 }
}

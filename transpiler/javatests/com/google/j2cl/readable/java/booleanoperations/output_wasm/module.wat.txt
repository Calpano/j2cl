;;; Code for booleanoperations.BooleanOperations

;;; CLASS  BooleanOperations
(type $booleanoperations.BooleanOperations (struct
))

;;; BooleanOperations()
(func $<init><>:void@booleanoperations.BooleanOperations
 (param $this (ref null $booleanoperations.BooleanOperations))
 (result (ref null $booleanoperations.BooleanOperations))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void BooleanOperations.acceptBoolean(boolean b)
(func $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations
 (param $b i32)
 (block $return.label
  (block
  )
 )
)

;;; void BooleanOperations.test()
(func $test<>:void@booleanoperations.BooleanOperations
 (param $this (ref null $java.lang.Object))
 (local $ls i32)
 (local $rs i32)
 (local $r i32)
 (local $br (ref null $java.lang.Boolean))
 (local $finalOuter (ref null $booleanoperations.BooleanOperations.1Outer))
 (local $outer (ref null $booleanoperations.BooleanOperations.1Outer))
 (block $return.label
  (block
   ;; boolean ls = true;
   
   (local.set $ls (i32.const 1))
   ;; boolean rs = true;
   
   (local.set $rs (i32.const 1))
   ;; boolean r = true;
   
   (local.set $r (i32.const 1))
   ;; (r = (ls == rs));
   (local.set $r (i32.eq (local.get $ls) (local.get $rs)))
   ;; (r = (ls != rs));
   (local.set $r (i32.ne (local.get $ls) (local.get $rs)))
   ;; (r = (ls ^ rs));
   (local.set $r (i32.xor (local.get $ls) (local.get $rs)))
   ;; (r = (ls & rs));
   (local.set $r (i32.and (local.get $ls) (local.get $rs)))
   ;; (r = (ls | rs));
   (local.set $r (i32.or (local.get $ls) (local.get $rs)))
   ;; (r = (ls) ? (rs) : (false));
   (local.set $r (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0))))
   ;; (r = (ls) ? (true) : (rs));
   (local.set $r (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs))))
   ;; (r = ((ls = rs),ls));
   (local.set $r (block (result i32)
    (local.set $ls (local.get $rs))
    (local.get $ls)
   ))
   ;; (r = (r ^ rs));
   (local.set $r (i32.xor (local.get $r) (local.get $rs)))
   ;; (r = (r & rs));
   (local.set $r (i32.and (local.get $r) (local.get $rs)))
   ;; (r = (r | rs));
   (local.set $r (i32.or (local.get $r) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls == rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.eq (local.get $ls) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls != rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.ne (local.get $ls) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls ^ rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.xor (local.get $ls) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls & rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.and (local.get $ls) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls | rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.or (local.get $ls) (local.get $rs)))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls) ? (rs) : (false));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0))))
   ;; booleanoperations.BooleanOperations.acceptBoolean((ls) ? (true) : (rs));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs))))
   ;; booleanoperations.BooleanOperations.acceptBoolean(((ls = rs),ls));
   (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (block (result i32)
    (local.set $ls (local.get $rs))
    (local.get $ls)
   ))
   ;; Boolean br;
   
   ;; (br = ((Boolean) (ls == rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls != rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls ^ rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls & rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls | rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls) ? (rs) : (false)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) (ls) ? (true) : (rs)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; (br = ((Boolean) ((ls = rs),ls)));
   (local.set $br (ref.null $java.lang.Boolean))
   ;; if ((ls == rs)) {
   (if (i32.eq (local.get $ls) (local.get $rs))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls != rs)) {
   (if (i32.ne (local.get $ls) (local.get $rs))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls ^ rs)) {
   (if (i32.xor (local.get $ls) (local.get $rs))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls & rs)) {
   (if (i32.and (local.get $ls) (local.get $rs))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls | rs)) {
   (if (i32.or (local.get $ls) (local.get $rs))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls) ? (rs) : (false)) {
   (if (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0)))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; if ((ls) ? (true) : (rs)) {
   (if (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs)))
    (then
     (block
      ;; (r = true);
      (local.set $r (i32.const 1))
     )
    )
   )
   ;; Outer finalOuter = BooleanOperations.this.new $1Outer.<init>();
   
   (local.set $finalOuter (call $<init><>:void@booleanoperations.BooleanOperations.1Outer (struct.new_with_rtt $booleanoperations.BooleanOperations.1Outer (ref.null $booleanoperations.BooleanOperations) (i32.const 0) (global.get $booleanoperations.BooleanOperations.1Outer.rtt))))
   ;; (finalOuter.b = (finalOuter.b | true));
   (struct.set $booleanoperations.BooleanOperations.1Outer $b@booleanoperations.BooleanOperations.1Outer  (local.get $finalOuter) (i32.or (struct.get $booleanoperations.BooleanOperations.1Outer $b@booleanoperations.BooleanOperations.1Outer  (local.get $finalOuter)) (i32.const 1)))
   ;; Outer outer = BooleanOperations.this.new $1Outer.<init>();
   
   (local.set $outer (call $<init><>:void@booleanoperations.BooleanOperations.1Outer (struct.new_with_rtt $booleanoperations.BooleanOperations.1Outer (ref.null $booleanoperations.BooleanOperations) (i32.const 0) (global.get $booleanoperations.BooleanOperations.1Outer.rtt))))
   ;; (outer.b = (outer.b | (((outer = null),outer) == null)));
   (struct.set $booleanoperations.BooleanOperations.1Outer $b@booleanoperations.BooleanOperations.1Outer  (local.get $outer) (i32.or (struct.get $booleanoperations.BooleanOperations.1Outer $b@booleanoperations.BooleanOperations.1Outer  (local.get $outer)) (ref.eq (block (result (ref null $booleanoperations.BooleanOperations.1Outer))
    (local.set $outer (ref.null $booleanoperations.BooleanOperations.1Outer))
    (local.get $outer)
   ) (ref.null $java.lang.Object))))
  )
 )
)

;;; CLASS  Outer
(type $booleanoperations.BooleanOperations.1Outer (struct
 (field $this@booleanoperations.BooleanOperations.1Outer (mut (ref null $booleanoperations.BooleanOperations)))
 (field $b@booleanoperations.BooleanOperations.1Outer (mut i32))
))

;;; Outer()
(func $<init><>:void@booleanoperations.BooleanOperations.1Outer
 (param $this (ref null $booleanoperations.BooleanOperations.1Outer))
 (result (ref null $booleanoperations.BooleanOperations.1Outer))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Inner
(type $booleanoperations.BooleanOperations.1Outer.Inner (struct
 (field $this@booleanoperations.BooleanOperations.1Outer.Inner (mut (ref null $booleanoperations.BooleanOperations.1Outer)))
))

;;; Inner()
(func $<init><>:void@booleanoperations.BooleanOperations.1Outer.Inner
 (param $this (ref null $booleanoperations.BooleanOperations.1Outer.Inner))
 (result (ref null $booleanoperations.BooleanOperations.1Outer.Inner))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)


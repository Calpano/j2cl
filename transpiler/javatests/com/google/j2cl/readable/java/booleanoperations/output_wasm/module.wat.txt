;;; Code for booleanoperations.BooleanOperations

;;; CLASS  BooleanOperations

(type $booleanoperations.BooleanOperations (struct
))

;;; BooleanOperations()
(func $<init><>:void@booleanoperations.BooleanOperations
 (param $this (ref null $booleanoperations.BooleanOperations))
 (result (ref null $booleanoperations.BooleanOperations))
 (block
  ;; Object.this.Object.<init>();
  
 )
 (local.get $this)
)

;;; void BooleanOperations.acceptBoolean(boolean b)
(func $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations
 (param $b i32)
 (block
 )
)

;;; void BooleanOperations.test()
(func $test<>:void@booleanoperations.BooleanOperations
 (param $this (ref null $java.lang.Object))
 (local $ls i32)
 (local $rs i32)
 (local $r i32)
 (local $br (ref null $java.lang.Boolean))
 (local $finalOuter (ref null $booleanoperations.BooleanOperations.1Outer))
 (local $outer (ref null $booleanoperations.BooleanOperations.1Outer))
 (block
  ;; boolean ls = true;
  (local.tee $ls (i32.const 1))
  drop
  
  ;; boolean rs = true;
  (local.tee $rs (i32.const 1))
  drop
  
  ;; boolean r = true;
  (local.tee $r (i32.const 1))
  drop
  
  ;; (r = (ls == rs));
  (local.tee $r (i32.eq (local.get $ls) (local.get $rs)))
  drop
  ;; (r = (ls != rs));
  (local.tee $r (i32.ne (local.get $ls) (local.get $rs)))
  drop
  ;; (r = (ls ^ rs));
  (local.tee $r (i32.xor (local.get $ls) (local.get $rs)))
  drop
  ;; (r = (ls & rs));
  (local.tee $r (i32.and (local.get $ls) (local.get $rs)))
  drop
  ;; (r = (ls | rs));
  (local.tee $r (i32.or (local.get $ls) (local.get $rs)))
  drop
  ;; (r = (ls) ? (rs) : (false));
  (local.tee $r (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0))))
  drop
  ;; (r = (ls) ? (true) : (rs));
  (local.tee $r (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs))))
  drop
  ;; (r = (ls = rs));
  (local.tee $r (local.tee $ls (local.get $rs)))
  drop
  ;; (r = (r ^ rs));
  (local.tee $r (i32.xor (local.get $r) (local.get $rs)))
  drop
  ;; (r = (r & rs));
  (local.tee $r (i32.and (local.get $r) (local.get $rs)))
  drop
  ;; (r = (r | rs));
  (local.tee $r (i32.or (local.get $r) (local.get $rs)))
  drop
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls == rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.eq (local.get $ls) (local.get $rs)))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls != rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.ne (local.get $ls) (local.get $rs)))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls ^ rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.xor (local.get $ls) (local.get $rs)))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls & rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.and (local.get $ls) (local.get $rs)))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls | rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (i32.or (local.get $ls) (local.get $rs)))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls) ? (rs) : (false));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0))))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls) ? (true) : (rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs))))
  ;; booleanoperations.BooleanOperations.acceptBoolean((ls = rs));
  (call $acceptBoolean<boolean>:void@booleanoperations.BooleanOperations (local.tee $ls (local.get $rs)))
  ;; Boolean br;
  
  ;; (br = ((Boolean) (ls == rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls != rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls ^ rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls & rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls | rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls) ? (rs) : (false)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls) ? (true) : (rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; (br = ((Boolean) (ls = rs)));
  (local.tee $br (ref.null $java.lang.Boolean))
  drop
  ;; if ((ls == rs)) {
  ;;   (r = true);
  ;; }
  (if (i32.eq (local.get $ls) (local.get $rs)) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls != rs)) {
  ;;   (r = true);
  ;; }
  (if (i32.ne (local.get $ls) (local.get $rs)) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls ^ rs)) {
  ;;   (r = true);
  ;; }
  (if (i32.xor (local.get $ls) (local.get $rs)) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls & rs)) {
  ;;   (r = true);
  ;; }
  (if (i32.and (local.get $ls) (local.get $rs)) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls | rs)) {
  ;;   (r = true);
  ;; }
  (if (i32.or (local.get $ls) (local.get $rs)) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls) ? (rs) : (false)) {
  ;;   (r = true);
  ;; }
  (if (if (result i32) (local.get $ls) (then (local.get $rs)) (else (i32.const 0))) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; if ((ls) ? (true) : (rs)) {
  ;;   (r = true);
  ;; }
  (if (if (result i32) (local.get $ls) (then (i32.const 1)) (else (local.get $rs))) (then (block
   ;; (r = true);
   (local.tee $r (i32.const 1))
   drop
  )))
  ;; Outer finalOuter = BooleanOperations.this.new $1Outer.<init>();
  (local.tee $finalOuter (call $<init><>:void@booleanoperations.BooleanOperations.1Outer (struct.new_default_with_rtt $booleanoperations.BooleanOperations.1Outer (global.get $booleanoperations.BooleanOperations.1Outer.rtt)) ))
  drop
  
  ;; (finalOuter.b = (finalOuter.b | true));
  (i32.const 0)
  drop
  ;; Outer outer = BooleanOperations.this.new $1Outer.<init>();
  (local.tee $outer (call $<init><>:void@booleanoperations.BooleanOperations.1Outer (struct.new_default_with_rtt $booleanoperations.BooleanOperations.1Outer (global.get $booleanoperations.BooleanOperations.1Outer.rtt)) ))
  drop
  
  ;; (outer.b = (outer.b | ((outer = null) == null)));
  (i32.const 0)
  drop
 )
)

;;; CLASS  Outer

(type $booleanoperations.BooleanOperations.1Outer (struct
 (field $this@booleanoperations.BooleanOperations.1Outer (ref null $booleanoperations.BooleanOperations))
 (field $b@booleanoperations.BooleanOperations.1Outer i32)
))

;;; Outer()
(func $<init><>:void@booleanoperations.BooleanOperations.1Outer
 (param $this (ref null $booleanoperations.BooleanOperations.1Outer))
 (result (ref null $booleanoperations.BooleanOperations.1Outer))
 (block
  ;; Object.this.Object.<init>();
  
 )
 (local.get $this)
)

;;; CLASS  Inner

(type $booleanoperations.BooleanOperations.1Outer.Inner (struct
 (field $this@booleanoperations.BooleanOperations.1Outer.Inner (ref null $booleanoperations.BooleanOperations.1Outer))
))

;;; Inner()
(func $<init><>:void@booleanoperations.BooleanOperations.1Outer.Inner
 (param $this (ref null $booleanoperations.BooleanOperations.1Outer.Inner))
 (result (ref null $booleanoperations.BooleanOperations.1Outer.Inner))
 (block
  ;; Object.this.Object.<init>();
  
 )
 (local.get $this)
)


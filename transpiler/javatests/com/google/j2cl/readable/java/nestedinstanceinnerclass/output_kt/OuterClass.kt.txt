package nestedinstanceinnerclass

open class OuterClass {
 open fun test() {
  TODO("expression.qualify needs rendering: new OuterClass.<init>().new InnerClass.<init>())")
 }
}

open class `OuterClass$InnerClass` {
 @JvmField val `this`: nestedinstanceinnerclass.OuterClass?
}

open class `OuterClass$InnerClass$InnerInnerClass` {
 @JvmField val `this`: nestedinstanceinnerclass.`OuterClass$InnerClass`?

 @JvmField var x: nestedinstanceinnerclass.`OuterClass$InnerClass`? = this.`this`

 @JvmField var y: nestedinstanceinnerclass.OuterClass? = this.`this`!!.`this`
}

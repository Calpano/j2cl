;;; Code for nestedinstanceinnerclass.OuterClass

;;; CLASS  OuterClass
(type $nestedinstanceinnerclass.OuterClass (struct
 (field $vtable (ref null $nestedinstanceinnerclass.OuterClass.vtable))
))
(type $nestedinstanceinnerclass.OuterClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $nestedinstanceinnerclass.OuterClass.vtable (mut (ref null $nestedinstanceinnerclass.OuterClass.vtable)) (ref.null $nestedinstanceinnerclass.OuterClass.vtable))

;;; OuterClass()
(func $m_<init>__void@nestedinstanceinnerclass.OuterClass
 (param $this (ref null $nestedinstanceinnerclass.OuterClass))
 (result (ref null $nestedinstanceinnerclass.OuterClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void OuterClass.test()
(func $m_test__void@nestedinstanceinnerclass.OuterClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $nestedinstanceinnerclass.OuterClass))
 (local.set $this (ref.cast $java.lang.Object $nestedinstanceinnerclass.OuterClass (local.get $this.untyped) (global.get $nestedinstanceinnerclass.OuterClass.rtt)))
 (block $return.label
  (block
   ;; new OuterClass.<init>().new InnerClass.<init>().new InnerInnerClass.<init>();
   (drop (call $m_<init>__void@nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (struct.new_with_rtt $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (global.get $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable) (ref.null $nestedinstanceinnerclass.OuterClass.InnerClass) (ref.null $nestedinstanceinnerclass.OuterClass.InnerClass) (ref.null $nestedinstanceinnerclass.OuterClass) (global.get $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.rtt))))
  )
 )
)
(elem declare func $m_test__void@nestedinstanceinnerclass.OuterClass)

;;; CLASS  InnerClass
(type $nestedinstanceinnerclass.OuterClass.InnerClass (struct
 (field $vtable (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.vtable))
 (field $this@nestedinstanceinnerclass.OuterClass.InnerClass (mut (ref null $nestedinstanceinnerclass.OuterClass)))
))
(type $nestedinstanceinnerclass.OuterClass.InnerClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $nestedinstanceinnerclass.OuterClass.InnerClass.vtable (mut (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.vtable)) (ref.null $nestedinstanceinnerclass.OuterClass.InnerClass.vtable))

;;; InnerClass()
(func $m_<init>__void@nestedinstanceinnerclass.OuterClass.InnerClass
 (param $this (ref null $nestedinstanceinnerclass.OuterClass.InnerClass))
 (result (ref null $nestedinstanceinnerclass.OuterClass.InnerClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  InnerInnerClass
(type $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (struct
 (field $vtable (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable))
 (field $this@nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (mut (ref null $nestedinstanceinnerclass.OuterClass.InnerClass)))
 (field $x@nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (mut (ref null $nestedinstanceinnerclass.OuterClass.InnerClass)))
 (field $y@nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass (mut (ref null $nestedinstanceinnerclass.OuterClass)))
))
(type $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable (mut (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable)) (ref.null $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable))

;;; InnerInnerClass()
(func $m_<init>__void@nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass
 (param $this (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass))
 (result (ref null $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Code for nestedinstanceinnerclass.OuterClass [vtable]
 (global.set $nestedinstanceinnerclass.OuterClass.vtable (struct.new_with_rtt $nestedinstanceinnerclass.OuterClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_test__void@nestedinstanceinnerclass.OuterClass) (rtt.canon $nestedinstanceinnerclass.OuterClass.vtable)))
;;; Code for nestedinstanceinnerclass.OuterClass.InnerClass [vtable]
 (global.set $nestedinstanceinnerclass.OuterClass.InnerClass.vtable (struct.new_with_rtt $nestedinstanceinnerclass.OuterClass.InnerClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $nestedinstanceinnerclass.OuterClass.InnerClass.vtable)))
;;; Code for nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass [vtable]
 (global.set $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable (struct.new_with_rtt $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass.vtable)))
))
(start $.runtime.init)


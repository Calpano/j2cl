;;; Code for cast.CastGenerics

;;; CLASS  CastGenerics
(type $cast.CastGenerics (struct
 (field $field@cast.CastGenerics (mut (ref null $java.lang.Object)))
))

;;; CastGenerics()
(func $m_<init>__void@cast.CastGenerics
 (param $this (ref null $cast.CastGenerics))
 (result (ref null $cast.CastGenerics))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; T CastGenerics.method()
(func $m_method__java_lang_Object_$pp_cast@cast.CastGenerics
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void CastGenerics.testErasureCast()
(func $m_testErasureCast__void@cast.CastGenerics
 (local $str (ref null $java.lang.String))
 (local $containerT (ref null $cast.CastGenerics.Container))
 (local $containerU (ref null $cast.CastGenerics.Container))
 (local $containerArrT (ref null $cast.CastGenerics.Container))
 (local $arrT (ref null $java.lang.Object))
 (local $arrA (ref null $java.lang.Object))
 (local $arrB (ref null $java.lang.Object))
 (local $containerArrU (ref null $cast.CastGenerics.Container))
 (local $arrU (ref null $java.lang.Object))
 (local $containerBase (ref null $cast.CastGenerics.Container))
 (local $containerImplementor (ref null $cast.CastGenerics.Container))
 (block $return.label
  (block
   ;; String str = ((String) new CastGenerics.<init>().field);
   
   (local.set $str (ref.cast $java.lang.Object $java.lang.String (struct.get $cast.CastGenerics $field@cast.CastGenerics  (call $m_<init>__void@cast.CastGenerics (struct.new_with_rtt $cast.CastGenerics (ref.null $java.lang.Object) (global.get $cast.CastGenerics.rtt)))) (global.get $java.lang.String.rtt)))
   ;; (str = ((String) new CastGenerics.<init>().method()));
   (local.set $str (ref.cast $java.lang.Object $java.lang.String (ref.null $java.lang.String) (global.get $java.lang.String.rtt)))
   ;; Container<T> containerT = null;
   
   (local.set $containerT (ref.null $cast.CastGenerics.Container))
   ;; ((A) containerT.get()).mA();
   
   ;; ((B) containerT.get()).mB();
   
   ;; Container<U> containerU = null;
   
   (local.set $containerU (ref.null $cast.CastGenerics.Container))
   ;; ((A) containerU.get()).mA();
   
   ;; ((B) containerU.get()).mB();
   
   ;; Container<T[]> containerArrT = null;
   
   (local.set $containerArrT (ref.null $cast.CastGenerics.Container))
   ;; T[] arrT = ((T[]) containerArrT.get());
   
   (local.set $arrT (ref.null $java.lang.Object))
   ;; arrT[0].mA();
   
   ;; ((B) arrT[0]).mB();
   
   ;; A[] arrA = ((A[]) containerArrT.get());
   
   (local.set $arrA (ref.null $java.lang.Object))
   ;; B[] arrB = ((B[]) containerArrT.get());
   
   (local.set $arrB (ref.null $java.lang.Object))
   ;; Container<U[]> containerArrU = null;
   
   (local.set $containerArrU (ref.null $cast.CastGenerics.Container))
   ;; U[] arrU = ((U[]) containerArrU.get());
   
   (local.set $arrU (ref.null $java.lang.Object))
   ;; arrU[0].mA();
   
   ;; ((B) arrU[0]).mB();
   
   ;; (arrA = ((A[]) containerArrU.get()));
   (local.set $arrA (ref.null $java.lang.Object))
   ;; (arrB = ((B[]) containerArrU.get()));
   (local.set $arrB (ref.null $java.lang.Object))
   ;; Container<BaseImplementor> containerBase = null;
   
   (local.set $containerBase (ref.null $cast.CastGenerics.Container))
   ;; ((BaseImplementor) containerBase.get()).mA();
   
   ;; ((BaseImplementor) containerBase.get()).mB();
   
   ;; Container<Implementor> containerImplementor = null;
   
   (local.set $containerImplementor (ref.null $cast.CastGenerics.Container))
   ;; ((Implementor) containerImplementor.get()).mA();
   
   ;; ((Implementor) containerImplementor.get()).mB();
   
  )
 )
)

;;; void CastGenerics.testCastToParamterizedType()
(func $m_testCastToParamterizedType__void@cast.CastGenerics
 (local $o (ref null $java.lang.Object))
 (local $cc (ref null $cast.CastGenerics))
 (block $return.label
  (block
   ;; Object o = new Integer.<init>(1);
   
   (local.set $o (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; CastGenerics<Error, Number> cc = ((CastGenerics<Error, Number>) o);
   
   (local.set $cc (ref.cast $java.lang.Object $cast.CastGenerics (local.get $o) (global.get $cast.CastGenerics.rtt)))
   ;; (cc = ((CastGenerics) o));
   (local.set $cc (ref.cast $java.lang.Object $cast.CastGenerics (local.get $o) (global.get $cast.CastGenerics.rtt)))
  )
 )
)

;;; void CastGenerics.testCastToTypeVariable()
(func $m_testCastToTypeVariable__void@cast.CastGenerics
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $e (ref null $java.lang.Number))
 (local $t (ref null $java.lang.Object))
 (local $es (ref null $java.lang.Object))
 (local $ts (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object o = new Integer.<init>(1);
   
   (local.set $o (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; E e = ((E) o);
   
   (local.set $e (ref.null $java.lang.Number))
   ;; T t = ((T) o);
   
   (local.set $t (ref.null $java.lang.Object))
   ;; E[] es = ((E[]) o);
   
   (local.set $es (ref.null $java.lang.Object))
   ;; T[] ts = ((T[]) o);
   
   (local.set $ts (ref.null $java.lang.Object))
  )
 )
)

;;; void CastGenerics.testCastToMethodTypeVariable()
(func $m_testCastToMethodTypeVariable__void@cast.CastGenerics
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $s (ref null $java.lang.Object))
 (local $c (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object o = new Integer.<init>(1);
   
   (local.set $o (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; S s = ((S) o);
   
   (local.set $s (ref.null $java.lang.Object))
   ;; Object c = ((CastGenerics<S, Number>) o);
   
   (local.set $c (ref.cast $java.lang.Object $cast.CastGenerics (local.get $o) (global.get $cast.CastGenerics.rtt)))
   ;; (c = ((S[]) o));
   (local.set $c (ref.null $java.lang.Object))
   ;; (c = ((V) o));
   (local.set $c (ref.null $java.lang.Enum))
  )
 )
)

;;; void CastGenerics.outerGenericMethod()
(func $m_outerGenericMethod__void@cast.CastGenerics
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; EE CastGenerics.method(Object o)
(func $m_method__java_lang_Object__cast_CastGenerics_Empty1@cast.CastGenerics
 (param $this (ref null $java.lang.Object))
 (param $o (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; if (o instanceof Empty1) {
   (if (i32.const 0)
    (then
     (block
      ;; return ((EE) o);
      (local.set $return.value (ref.null $java.lang.Object))
      (br $return.label)
     )
    )
   )
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; Foo<T> CastGenerics.doSomething()
(func $m_doSomething__cast_CastGenerics_Foo@cast.CastGenerics
 (result (ref null $cast.CastGenerics.Foo))
 (local $return.value (ref null $cast.CastGenerics.Foo))
 (block $return.label
  (block
   ;; return new $1.<init>();
   (local.set $return.value (call $m_<init>__void_$pp_cast@cast.CastGenerics.1 (struct.new_with_rtt $cast.CastGenerics.1 (global.get $cast.CastGenerics.1.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; INTERFACE  A

;;; INTERFACE  B

;;; CLASS  BaseImplementor
(type $cast.CastGenerics.BaseImplementor (struct
))

;;; BaseImplementor()
(func $m_<init>__void_$p_cast_CastGenerics_BaseImplementor@cast.CastGenerics.BaseImplementor
 (param $this (ref null $cast.CastGenerics.BaseImplementor))
 (result (ref null $cast.CastGenerics.BaseImplementor))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Implementor
(type $cast.CastGenerics.Implementor (struct
))

;;; Implementor()
(func $m_<init>__void_$p_cast_CastGenerics_Implementor@cast.CastGenerics.Implementor
 (param $this (ref null $cast.CastGenerics.Implementor))
 (result (ref null $cast.CastGenerics.Implementor))
 (block $return.label
  (block
   ;; BaseImplementor.this.BaseImplementor.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Implementor.mA()
(func $m_mA__void@cast.CastGenerics.Implementor
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; void Implementor.mB()
(func $m_mB__void@cast.CastGenerics.Implementor
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; CLASS  Container
(type $cast.CastGenerics.Container (struct
))

;;; Container()
(func $m_<init>__void_$p_cast_CastGenerics_Container@cast.CastGenerics.Container
 (param $this (ref null $cast.CastGenerics.Container))
 (result (ref null $cast.CastGenerics.Container))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; T Container.get()
(func $m_get__java_lang_Object_$pp_cast@cast.CastGenerics.Container
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Object))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; CLASS  Nested
(type $cast.CastGenerics.1Nested (struct
 (field $this@cast.CastGenerics.1Nested (mut (ref null $cast.CastGenerics)))
))

;;; Nested()
(func $m_<init>__void_$pp_cast@cast.CastGenerics.1Nested
 (param $this (ref null $cast.CastGenerics.1Nested))
 (result (ref null $cast.CastGenerics.1Nested))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Nested.nestedGenericMethod(Object o)
(func $m_nestedGenericMethod__java_lang_Object__void_$p_cast_CastGenerics_1Nested@cast.CastGenerics.1Nested
 (param $this (ref null $cast.CastGenerics.1Nested))
 (param $o (ref null $java.lang.Object))
 (local $t (ref null $java.lang.Enum))
 (block $return.label
  (block
   ;; TT t = ((TT) o);
   
   (local.set $t (ref.null $java.lang.Enum))
  )
 )
)

;;; INTERFACE  Empty1

;;; INTERFACE  Empty2

;;; CLASS  <anonymous> extends Foo<T>
(type $cast.CastGenerics.1 (struct
))

;;; <anonymous> extends Foo<T>()
(func $m_<init>__void_$pp_cast@cast.CastGenerics.1
 (param $this (ref null $cast.CastGenerics.1))
 (result (ref null $cast.CastGenerics.1))
 (block $return.label
  (block
   ;; Foo.this.Foo.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Foo
(type $cast.CastGenerics.Foo (struct
))

;;; Foo()
(func $m_<init>__void@cast.CastGenerics.Foo
 (param $this (ref null $cast.CastGenerics.Foo))
 (result (ref null $cast.CastGenerics.Foo))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
;;; Code for cast.CastPrimitives

;;; CLASS  CastPrimitives
(type $cast.CastPrimitives (struct
))

;;; CastPrimitives()
(func $m_<init>__void@cast.CastPrimitives
 (param $this (ref null $cast.CastPrimitives))
 (result (ref null $cast.CastPrimitives))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void CastPrimitives.testPrimitiveCasts()
(func $m_testPrimitiveCasts__void@cast.CastPrimitives
 (param $this (ref null $java.lang.Object))
 (local $b i32)
 (local $c i32)
 (local $s i32)
 (local $i i32)
 (local $l i64)
 (local $f f32)
 (local $d f64)
 (block $return.label
  (block
   ;; byte b = 1;
   
   (local.set $b (i32.const 0))
   ;; char c = 1;
   
   (local.set $c (i32.const 0))
   ;; short s = 1;
   
   (local.set $s (i32.const 0))
   ;; int i = 1;
   
   (local.set $i (i32.const 1))
   ;; long l = 1;
   
   (local.set $l (i64.const 1))
   ;; float f = 1.100000023841858;
   
   (local.set $f (f32.const 1.100000023841858))
   ;; double d = 1.1;
   
   (local.set $d (f64.const 1.1))
   ;; (b = ((byte) b));
   (local.set $b (i32.const 0))
   ;; (c = ((char) b));
   (local.set $c (i32.const 0))
   ;; (s = ((short) b));
   (local.set $s (i32.const 0))
   ;; (i = ((int) b));
   (local.set $i (i32.const 0))
   ;; (l = ((long) b));
   (local.set $l (i64.const 0))
   ;; (f = ((float) b));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) b));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) c));
   (local.set $b (i32.const 0))
   ;; (c = ((char) c));
   (local.set $c (i32.const 0))
   ;; (s = ((short) c));
   (local.set $s (i32.const 0))
   ;; (i = ((int) c));
   (local.set $i (i32.const 0))
   ;; (l = ((long) c));
   (local.set $l (i64.const 0))
   ;; (f = ((float) c));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) c));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) s));
   (local.set $b (i32.const 0))
   ;; (c = ((char) s));
   (local.set $c (i32.const 0))
   ;; (s = ((short) s));
   (local.set $s (i32.const 0))
   ;; (i = ((int) s));
   (local.set $i (i32.const 0))
   ;; (l = ((long) s));
   (local.set $l (i64.const 0))
   ;; (f = ((float) s));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) s));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) i));
   (local.set $b (i32.const 0))
   ;; (c = ((char) i));
   (local.set $c (i32.const 0))
   ;; (s = ((short) i));
   (local.set $s (i32.const 0))
   ;; (i = ((int) i));
   (local.set $i (i32.const 0))
   ;; (l = ((long) i));
   (local.set $l (i64.const 0))
   ;; (f = ((float) i));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) i));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) l));
   (local.set $b (i32.const 0))
   ;; (c = ((char) l));
   (local.set $c (i32.const 0))
   ;; (s = ((short) l));
   (local.set $s (i32.const 0))
   ;; (i = ((int) l));
   (local.set $i (i32.const 0))
   ;; (l = ((long) l));
   (local.set $l (i64.const 0))
   ;; (f = ((float) l));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) l));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) f));
   (local.set $b (i32.const 0))
   ;; (c = ((char) f));
   (local.set $c (i32.const 0))
   ;; (s = ((short) f));
   (local.set $s (i32.const 0))
   ;; (i = ((int) f));
   (local.set $i (i32.const 0))
   ;; (l = ((long) f));
   (local.set $l (i64.const 0))
   ;; (f = ((float) f));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) f));
   (local.set $d (f64.const 0.0))
   ;; (b = ((byte) d));
   (local.set $b (i32.const 0))
   ;; (c = ((char) d));
   (local.set $c (i32.const 0))
   ;; (s = ((short) d));
   (local.set $s (i32.const 0))
   ;; (i = ((int) d));
   (local.set $i (i32.const 0))
   ;; (l = ((long) d));
   (local.set $l (i64.const 0))
   ;; (f = ((float) d));
   (local.set $f (f32.const 0.0))
   ;; (d = ((double) d));
   (local.set $d (f64.const 0.0))
  )
 )
)

;;; void CastPrimitives.testReferenceToPrimitive()
(func $m_testReferenceToPrimitive__void@cast.CastPrimitives
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $bool i32)
 (local $b i32)
 (local $c i32)
 (local $s i32)
 (local $i i32)
 (local $l i64)
 (local $f f32)
 (local $d f64)
 (block $return.label
  (block
   ;; Object o = new Object.<init>();
   
   (local.set $o (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.rtt))))
   ;; boolean bool = ((boolean) o);
   
   (local.set $bool (i32.const 0))
   ;; byte b = ((byte) o);
   
   (local.set $b (i32.const 0))
   ;; char c = ((char) o);
   
   (local.set $c (i32.const 0))
   ;; short s = ((short) o);
   
   (local.set $s (i32.const 0))
   ;; int i = ((int) o);
   
   (local.set $i (i32.const 0))
   ;; long l = ((long) o);
   
   (local.set $l (i64.const 0))
   ;; float f = ((float) o);
   
   (local.set $f (f32.const 0.0))
   ;; double d = ((double) o);
   
   (local.set $d (f64.const 0.0))
  )
 )
)

;;; void CastPrimitives.testUnboxAndWiden()
(func $m_testUnboxAndWiden__void@cast.CastPrimitives
 (param $this (ref null $java.lang.Object))
 (local $boxedByte (ref null $java.lang.Byte))
 (local $s i32)
 (local $i i32)
 (local $l i64)
 (local $f f32)
 (local $d f64)
 (block $return.label
  (block
   ;; Byte boxedByte = java.lang.Byte.valueOf(((byte) 0));
   
   (local.set $boxedByte (call $m_valueOf__byte__java_lang_Byte@java.lang.Byte (i32.const 0)))
   ;; short s = ((short) boxedByte);
   
   (local.set $s (i32.const 0))
   ;; int i = ((int) boxedByte);
   
   (local.set $i (i32.const 0))
   ;; long l = ((long) boxedByte);
   
   (local.set $l (i64.const 0))
   ;; float f = ((float) boxedByte);
   
   (local.set $f (f32.const 0.0))
   ;; double d = ((double) boxedByte);
   
   (local.set $d (f64.const 0.0))
  )
 )
)

;;; void CastPrimitives.testImplicitArgumentCasts()
(func $m_testImplicitArgumentCasts__void@cast.CastPrimitives
 (param $this (ref null $java.lang.Object))
 (local $b i32)
 (local $c i32)
 (local $s i32)
 (local $i i32)
 (local $l i64)
 (local $f f32)
 (local $d f64)
 (block $return.label
  (block
   ;; byte b = 127;
   
   (local.set $b (i32.const 0))
   ;; char c = 65535;
   
   (local.set $c (i32.const 0))
   ;; short s = 32767;
   
   (local.set $s (i32.const 0))
   ;; int i = 2147483647;
   
   (local.set $i (i32.const 2147483647))
   ;; long l = 9223372036854775807;
   
   (local.set $l (i64.const 9223372036854775807))
   ;; float f = 3.4028234663852886E38;
   
   (local.set $f (f32.const 3.4028234663852886E38))
   ;; double d = 1.7976931348623157E308;
   
   (local.set $d (f64.const 1.7976931348623157E308))
   ;; cast.CastPrimitives.getShort(b);
   (call $m_getShort__short__short@cast.CastPrimitives (i32.const 0))
   drop
   ;; cast.CastPrimitives.getInt(b);
   (call $m_getInt__int__int@cast.CastPrimitives (i32.const 0))
   drop
   ;; cast.CastPrimitives.getLong(b);
   (call $m_getLong__long__long@cast.CastPrimitives (i64.const 0))
   drop
   ;; cast.CastPrimitives.getFloat(b);
   (call $m_getFloat__float__float@cast.CastPrimitives (f32.const 0.0))
   drop
   ;; cast.CastPrimitives.getDouble(b);
   (call $m_getDouble__double__double@cast.CastPrimitives (f64.const 0.0))
   drop
   ;; cast.CastPrimitives.getFloat(l);
   (call $m_getFloat__float__float@cast.CastPrimitives (f32.const 0.0))
   drop
   ;; cast.CastPrimitives.getDouble(l);
   (call $m_getDouble__double__double@cast.CastPrimitives (f64.const 0.0))
   drop
   ;; cast.CastPrimitives.getDouble(f);
   (call $m_getDouble__double__double@cast.CastPrimitives (f64.const 0.0))
   drop
   ;; new IntValueHolder.<init>(b);
   (call $m_<init>__int__void_$pp_cast@cast.CastPrimitives.IntValueHolder (struct.new_with_rtt $cast.CastPrimitives.IntValueHolder (global.get $cast.CastPrimitives.IntValueHolder.rtt))(i32.const 0))
   drop
   ;; new IntValueHolder.<init>(c);
   (call $m_<init>__int__void_$pp_cast@cast.CastPrimitives.IntValueHolder (struct.new_with_rtt $cast.CastPrimitives.IntValueHolder (global.get $cast.CastPrimitives.IntValueHolder.rtt))(i32.const 0))
   drop
   ;; new IntValueHolder.<init>(s);
   (call $m_<init>__int__void_$pp_cast@cast.CastPrimitives.IntValueHolder (struct.new_with_rtt $cast.CastPrimitives.IntValueHolder (global.get $cast.CastPrimitives.IntValueHolder.rtt))(i32.const 0))
   drop
   ;; new LongValueHolder.<init>(b);
   (call $m_<init>__long__void_$pp_cast@cast.CastPrimitives.LongValueHolder (struct.new_with_rtt $cast.CastPrimitives.LongValueHolder (global.get $cast.CastPrimitives.LongValueHolder.rtt))(i64.const 0))
   drop
   ;; new LongValueHolder.<init>(c);
   (call $m_<init>__long__void_$pp_cast@cast.CastPrimitives.LongValueHolder (struct.new_with_rtt $cast.CastPrimitives.LongValueHolder (global.get $cast.CastPrimitives.LongValueHolder.rtt))(i64.const 0))
   drop
   ;; new LongValueHolder.<init>(i);
   (call $m_<init>__long__void_$pp_cast@cast.CastPrimitives.LongValueHolder (struct.new_with_rtt $cast.CastPrimitives.LongValueHolder (global.get $cast.CastPrimitives.LongValueHolder.rtt))(i64.const 0))
   drop
  )
 )
)

;;; short CastPrimitives.getShort(short value)
(func $m_getShort__short__short@cast.CastPrimitives
 (param $value i32)
 (result i32)
 (local $return.value i32)
 (block $return.label
  (block
   ;; return value;
   (local.set $return.value (local.get $value))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; int CastPrimitives.getInt(int value)
(func $m_getInt__int__int@cast.CastPrimitives
 (param $value i32)
 (result i32)
 (local $return.value i32)
 (block $return.label
  (block
   ;; return value;
   (local.set $return.value (local.get $value))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; long CastPrimitives.getLong(long value)
(func $m_getLong__long__long@cast.CastPrimitives
 (param $value i64)
 (result i64)
 (local $return.value i64)
 (block $return.label
  (block
   ;; return value;
   (local.set $return.value (local.get $value))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; float CastPrimitives.getFloat(float value)
(func $m_getFloat__float__float@cast.CastPrimitives
 (param $value f32)
 (result f32)
 (local $return.value f32)
 (block $return.label
  (block
   ;; return value;
   (local.set $return.value (local.get $value))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; double CastPrimitives.getDouble(double value)
(func $m_getDouble__double__double@cast.CastPrimitives
 (param $value f64)
 (result f64)
 (local $return.value f64)
 (block $return.label
  (block
   ;; return value;
   (local.set $return.value (local.get $value))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void CastPrimitives.testImplicitLongAssignmentCasts()
(func $m_testImplicitLongAssignmentCasts__void@cast.CastPrimitives
 (param $this (ref null $java.lang.Object))
 (local $fbyte i32)
 (local $fchar i32)
 (local $fshort i32)
 (local $fint i32)
 (local $flong i64)
 (local $ffloat f32)
 (local $fdouble f64)
 (local $tlong i64)
 (block $return.label
  (block
   ;; byte fbyte = 11;
   
   (local.set $fbyte (i32.const 0))
   ;; char fchar = 12;
   
   (local.set $fchar (i32.const 0))
   ;; short fshort = 13;
   
   (local.set $fshort (i32.const 0))
   ;; int fint = 14;
   
   (local.set $fint (i32.const 14))
   ;; long flong = 15;
   
   (local.set $flong (i64.const 0))
   ;; float ffloat = 16;
   
   (local.set $ffloat (f32.const 0.0))
   ;; double fdouble = 17;
   
   (local.set $fdouble (f64.const 0.0))
   ;; long tlong = 0;
   
   (local.set $tlong (i64.const 0))
   (block
    ;; (tlong = fbyte);
    (local.set $tlong (i64.const 0))
    ;; (tlong = flong);
    (local.set $tlong (local.get $flong))
   )
   (block
    ;; (tlong = fint);
    (local.set $tlong (i64.const 0))
    ;; (tlong = (tlong + fint));
    (local.set $tlong (i64.add (local.get $tlong) (i64.const 0)))
    ;; (tlong = (tlong << fint));
    (local.set $tlong (i64.shl (local.get $tlong) (i64.const 0)))
   )
   (block
    ;; (tlong = (tlong + fchar));
    (local.set $tlong (i64.add (local.get $tlong) (i64.const 0)))
    ;; (tlong = (tlong + flong));
    (local.set $tlong (i64.add (local.get $tlong) (local.get $flong)))
    ;; (tlong = ((long) (tlong + ffloat)));
    (local.set $tlong (i64.const 0))
   )
   (block
    ;; (tlong = (flong * fint));
    (local.set $tlong (i64.mul (local.get $flong) (i64.const 0)))
    ;; (tlong = (flong >> fint));
    (local.set $tlong (i64.shr_s (local.get $flong) (i64.const 0)))
   )
   (block
    ;; (tlong = (flong + fshort));
    (local.set $tlong (i64.add (local.get $flong) (i64.const 0)))
    ;; (tlong = (flong + flong));
    (local.set $tlong (i64.add (local.get $flong) (local.get $flong)))
   )
   (block
    ;; (tlong = (flong << tlong));
    (local.set $tlong (i64.shl (local.get $flong) (local.get $tlong)))
    ;; (tlong = (tlong << flong));
    (local.set $tlong (i64.shl (local.get $tlong) (local.get $flong)))
   )
   (block
    ;; (tlong = ((0 + 1) + 2));
    (local.set $tlong (i64.add (i64.const 0) (i64.const 2)))
   )
  )
 )
)

;;; CLASS  IntValueHolder
(type $cast.CastPrimitives.IntValueHolder (struct
))

;;; IntValueHolder(int value)
(func $m_<init>__int__void_$pp_cast@cast.CastPrimitives.IntValueHolder
 (param $this (ref null $cast.CastPrimitives.IntValueHolder))
 (param $value i32)
 (result (ref null $cast.CastPrimitives.IntValueHolder))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  LongValueHolder
(type $cast.CastPrimitives.LongValueHolder (struct
))

;;; LongValueHolder(long value)
(func $m_<init>__long__void_$pp_cast@cast.CastPrimitives.LongValueHolder
 (param $this (ref null $cast.CastPrimitives.LongValueHolder))
 (param $value i64)
 (result (ref null $cast.CastPrimitives.LongValueHolder))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
;;; Code for cast.Casts

;;; CLASS  Casts
(type $cast.Casts (struct
))

;;; Casts()
(func $m_<init>__void@cast.Casts
 (param $this (ref null $cast.Casts))
 (result (ref null $cast.Casts))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Casts.testCastToClass()
(func $m_testCastToClass__void@cast.Casts
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $c (ref null $cast.Casts))
 (block $return.label
  (block
   ;; Object o = new Object.<init>();
   
   (local.set $o (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.rtt))))
   ;; Casts c = ((Casts) o);
   
   (local.set $c (ref.cast $java.lang.Object $cast.Casts (local.get $o) (global.get $cast.Casts.rtt)))
  )
 )
)

;;; void Casts.testCasToInterface()
(func $m_testCasToInterface__void@cast.Casts
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $s (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object o = new Object.<init>();
   
   (local.set $o (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.rtt))))
   ;; Serializable s = ((Serializable) o);
   
   (local.set $s (local.get $o))
  )
 )
)

;;; void Casts.testCastToBoxedType()
(func $m_testCastToBoxedType__void@cast.Casts
 (param $this (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $b (ref null $java.lang.Byte))
 (local $d (ref null $java.lang.Double))
 (local $f (ref null $java.lang.Float))
 (local $i (ref null $java.lang.Integer))
 (local $l (ref null $java.lang.Long))
 (local $s (ref null $java.lang.Short))
 (local $n (ref null $java.lang.Number))
 (local $c (ref null $java.lang.Character))
 (local $bool (ref null $java.lang.Boolean))
 (block $return.label
  (block
   ;; Object o = new Integer.<init>(1);
   
   (local.set $o (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; Byte b = ((Byte) o);
   
   (local.set $b (ref.cast $java.lang.Object $java.lang.Byte (local.get $o) (global.get $java.lang.Byte.rtt)))
   ;; Double d = ((Double) o);
   
   (local.set $d (ref.cast $java.lang.Object $java.lang.Double (local.get $o) (global.get $java.lang.Double.rtt)))
   ;; Float f = ((Float) o);
   
   (local.set $f (ref.cast $java.lang.Object $java.lang.Float (local.get $o) (global.get $java.lang.Float.rtt)))
   ;; Integer i = ((Integer) o);
   
   (local.set $i (ref.cast $java.lang.Object $java.lang.Integer (local.get $o) (global.get $java.lang.Integer.rtt)))
   ;; Long l = ((Long) o);
   
   (local.set $l (ref.cast $java.lang.Object $java.lang.Long (local.get $o) (global.get $java.lang.Long.rtt)))
   ;; Short s = ((Short) o);
   
   (local.set $s (ref.cast $java.lang.Object $java.lang.Short (local.get $o) (global.get $java.lang.Short.rtt)))
   ;; Number n = ((Number) o);
   
   (local.set $n (ref.cast $java.lang.Object $java.lang.Number (local.get $o) (global.get $java.lang.Number.rtt)))
   ;; Character c = ((Character) o);
   
   (local.set $c (ref.cast $java.lang.Object $java.lang.Character (local.get $o) (global.get $java.lang.Character.rtt)))
   ;; Boolean bool = ((Boolean) o);
   
   (local.set $bool (ref.cast $java.lang.Object $java.lang.Boolean (local.get $o) (global.get $java.lang.Boolean.rtt)))
  )
 )
)

;;; void Casts.testCastToArray()
(func $m_testCastToArray__void@cast.Casts
 (param $this (ref null $java.lang.Object))
 (local $foo (ref null $java.lang.Object))
 (local $bar (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object foo = ((Object[]) null);
   
   (local.set $foo (ref.null $java.lang.Object))
   ;; Object bar = ((Object[][]) null);
   
   (local.set $bar (ref.null $java.lang.Object))
  )
 )
)


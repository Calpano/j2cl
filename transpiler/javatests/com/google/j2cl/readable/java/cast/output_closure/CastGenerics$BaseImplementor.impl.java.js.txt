goog.module('cast.CastGenerics.BaseImplementor$impl');

const A = goog.require('cast.CastGenerics.A$impl');
const B = goog.require('cast.CastGenerics.B$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @abstract
 * @implements {A}
 * @implements {B}
 */
class BaseImplementor extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts */
 $ctor__cast_CastGenerics_BaseImplementor__() {
  this.$ctor__java_lang_Object__();
 }
 /** @nodts */
 static $clinit() {
  BaseImplementor.$clinit = () =>{};
  BaseImplementor.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof BaseImplementor;
 }
 
 /** @nodts */
 static $loadModules() {}
}
A.$markImplementor(BaseImplementor);
B.$markImplementor(BaseImplementor);
$Util.$setClassMetadata(BaseImplementor, 'cast.CastGenerics$BaseImplementor');

exports = BaseImplementor;

//# sourceMappingURL=CastGenerics$BaseImplementor.js.map

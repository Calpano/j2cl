;;; Code for classliteral.ClassLiteral [vtable]
(global $classliteral.ClassLiteral.vtable (mut (ref null $classliteral.ClassLiteral.vtable)) (ref.null $classliteral.ClassLiteral.vtable))

;;; Code for classliteral.ClassLiteral [static fields]
(global $f_$initialized__classliteral_ClassLiteral (mut i32) (i32.const 0))

 ;;; Code for classliteral.ClassLiteral [vtable.init]
 (global.set $classliteral.ClassLiteral.vtable
  (struct.new_with_rtt $classliteral.ClassLiteral.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@classliteral.ClassLiteral)
   (ref.func $m_main__void@classliteral.ClassLiteral)
   (rtt.canon $classliteral.ClassLiteral.vtable)
  )
 )

 ;;; Code for classliteral.ClassLiteral [itable.init]
 (global.set $classliteral.ClassLiteral.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

;;; Code for classliteral.ClassLiteral [CLASS]
(type $classliteral.ClassLiteral (struct
 (field $vtable (ref $classliteral.ClassLiteral.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $classliteral.ClassLiteral.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void))))
 (extends $java.lang.Object.vtable)
)

;;; ClassLiteral()
(func $m_<init>__@classliteral.ClassLiteral
 (param $this (ref null $classliteral.ClassLiteral))
 (result (ref null $classliteral.ClassLiteral))
 ;;@ classliteral/ClassLiteral.java:18:13
 (block
  ;; classliteral.ClassLiteral.$clinit();
  ;;@ classliteral/ClassLiteral.java:18:13
  (call $$clinit__void@classliteral.ClassLiteral )
  ;; Object.this.Object.<init>();
  ;;@ classliteral/ClassLiteral.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return ClassLiteral.this;
  ;;@ classliteral/ClassLiteral.java:18:13
  (return (local.get $this))
 )
)

;;; void ClassLiteral.main()
(func $m_main__void@classliteral.ClassLiteral
 (type $function.__$void)
 (param $this.untyped (ref null $java.lang.Object))
 ;;@ classliteral/ClassLiteral.java:20:14
 (local $o (ref null $java.lang.Object))
 (local $$qualifier (ref null $java.lang.Class))
 (local $this (ref null $classliteral.ClassLiteral))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $classliteral.ClassLiteral.rtt)))
 (block
  ;; Object o = javaemul.internal.ClassLiteralPool.$getClassliteral.ClassLiteral();
  ;;@ classliteral/ClassLiteral.java:21:4
  (local.set $o (call $$getClassliteral.ClassLiteral__java_lang_Class@javaemul.internal.ClassLiteralPool ))
  ;; (o = (Class<?> $qualifier = javaemul.internal.ClassLiteralPool.$getClassliteral.ClassLiteral(),$qualifier.getArrayType(2)));
  ;;@ classliteral/ClassLiteral.java:22:4
  (local.set $o (block (result (ref null $java.lang.Class))
   (local.set $$qualifier (call $$getClassliteral.ClassLiteral__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (call_ref (local.get $$qualifier)(i32.const 2)(struct.get $java.lang.Class.vtable $m_getArrayType__int__java_lang_Class_$pp_java_lang (struct.get $java.lang.Class $vtable(local.get $$qualifier))))
  ))
 )
)
(elem declare func $m_main__void@classliteral.ClassLiteral)

;;; void ClassLiteral.$clinit()
(func $$clinit__void@classliteral.ClassLiteral
 ;;@ classliteral/ClassLiteral.java:18:13
 (block
  ;; if (classliteral.ClassLiteral.$initialized) return;
  ;;@ classliteral/ClassLiteral.java:18:13
  (if (global.get $f_$initialized__classliteral_ClassLiteral)
   (then
    ;; return;
    ;;@ classliteral/ClassLiteral.java:18:13
    (return )
   )
  )
  ;; (classliteral.ClassLiteral.$initialized = true);
  ;;@ classliteral/ClassLiteral.java:18:13
  (global.set $f_$initialized__classliteral_ClassLiteral (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ classliteral/ClassLiteral.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> ClassLiteral.getClass()
(func $m_getClass__java_lang_Class@classliteral.ClassLiteral
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $classliteral.ClassLiteral))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $classliteral.ClassLiteral.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getClassliteral.ClassLiteral();
  (return (call $$getClassliteral.ClassLiteral__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@classliteral.ClassLiteral)

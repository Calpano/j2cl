;;; Code for classliteral.ClassLiteral [vtable]
(global $classliteral.ClassLiteral.vtable (mut (ref null $classliteral.ClassLiteral.vtable)) (ref.null $classliteral.ClassLiteral.vtable))

;;; Code for classliteral.ClassLiteral [static fields]
(global $f_$initialized__classliteral_ClassLiteral (mut i32) (i32.const 0))

;;; Code for classliteral.ClassLiteral [CLASS]
(type $classliteral.ClassLiteral (struct
 (field $vtable (ref null $classliteral.ClassLiteral.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $classliteral.ClassLiteral.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void)))
))

;;; ClassLiteral()
(func $m_<init>__void@classliteral.ClassLiteral
 (param $this (ref null $classliteral.ClassLiteral))
 (result (ref null $classliteral.ClassLiteral))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ClassLiteral.main()
(func $m_main__void@classliteral.ClassLiteral
 (param $this.untyped (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (local $this (ref null $classliteral.ClassLiteral))
 (local.set $this (ref.cast $java.lang.Object $classliteral.ClassLiteral (local.get $this.untyped) (global.get $classliteral.ClassLiteral.rtt)))
 (block $return.label
  (block
   ;; Object o = ClassLiteral.class;
   
   (local.set $o (ref.null $java.lang.Class))
   ;; (o = ClassLiteral[][].class);
   (local.set $o (ref.null $java.lang.Class))
  )
 )
)
(elem declare func $m_main__void@classliteral.ClassLiteral)

;;; void ClassLiteral.$clinit()
(func $$clinit__void@classliteral.ClassLiteral
 (block $return.label
  (block
   ;; if (classliteral.ClassLiteral.$initialized) return;
   (if (global.get $f_$initialized__classliteral_ClassLiteral)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (classliteral.ClassLiteral.$initialized = true);
   (global.set $f_$initialized__classliteral_ClassLiteral (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for classliteral.ClassLiteral [vtable.init]
 (global.set $classliteral.ClassLiteral.vtable (struct.new_with_rtt $classliteral.ClassLiteral.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_main__void@classliteral.ClassLiteral) (rtt.canon $classliteral.ClassLiteral.vtable)))

;;; Code for exception.MyException [vtable]
(global $exception.MyException.vtable (mut (ref null $exception.MyException.vtable)) (ref.null $exception.MyException.vtable))

;;; Code for exception.MyJsException [vtable]
(global $exception.MyJsException.vtable (mut (ref null $exception.MyJsException.vtable)) (ref.null $exception.MyJsException.vtable))

;;; Code for exception.MyException [static fields]
(global $f_$initialized__exception_MyException (mut i32) (i32.const 0))

;;; Code for exception.MyJsException [static fields]
(global $f_$initialized__exception_MyJsException (mut i32) (i32.const 0))

;;; Code for exception.MyException [CLASS]
(type $exception.MyException (struct
 (field $vtable (ref $exception.MyException.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $exception.MyException.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
))

;;; MyException()
(func $m_<init>__@exception.MyException
 (param $this (ref null $exception.MyException))
 (result (ref null $exception.MyException))
 ;;@ exception/MyException.java:19:2
 (block
  ;; exception.MyException.$clinit();
  ;;@ exception/MyException.java:19:2
  (call $$clinit__void@exception.MyException )
  ;; Exception.this.Exception.<init>();
  ;;@ exception/MyException.java:19:2
  (drop (call $m_<init>__@java.lang.Exception (local.get $this)))
  ;; return MyException.this;
  ;;@ exception/MyException.java:19:2
  (return (local.get $this))
 )
)

;;; MyException(Throwable cause)
(func $m_<init>__java_lang_Throwable@exception.MyException
 (param $this (ref null $exception.MyException))
 (param $cause (ref null $java.lang.Throwable))
 (result (ref null $exception.MyException))
 ;;@ exception/MyException.java:21:2
 (block
  ;; exception.MyException.$clinit();
  ;;@ exception/MyException.java:21:2
  (call $$clinit__void@exception.MyException )
  ;; Exception.this.Exception.<init>(cause);
  ;;@ exception/MyException.java:22:4
  (drop (call $m_<init>__java_lang_Throwable@java.lang.Exception (local.get $this)(local.get $cause)))
  ;; return MyException.this;
  ;;@ exception/MyException.java:21:2
  (return (local.get $this))
 )
)

;;; void MyException.$clinit()
(func $$clinit__void@exception.MyException
 ;;@ exception/MyException.java:18:12
 (block
  ;; if (exception.MyException.$initialized) return;
  ;;@ exception/MyException.java:18:12
  (if (global.get $f_$initialized__exception_MyException)
   (then
    ;; return;
    ;;@ exception/MyException.java:18:12
    (return )
   )
  )
  ;; (exception.MyException.$initialized = true);
  ;;@ exception/MyException.java:18:12
  (global.set $f_$initialized__exception_MyException (i32.const 1))
  ;; java.lang.Exception.$clinit();
  ;;@ exception/MyException.java:18:12
  (call $$clinit__void@java.lang.Exception )
 )
)

;;; Class<?> MyException.getClass()
(func $m_getClass__java_lang_Class@exception.MyException
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $exception.MyException))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $exception.MyException.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getException.MyException();
  (return (call $$getException.MyException__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@exception.MyException)

;;; Code for exception.MyJsException [CLASS]
(type $exception.MyJsException (struct
 (field $vtable (ref $exception.MyJsException.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $exception.MyJsException.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
))

;;; MyJsException()
(func $m_<init>__@exception.MyJsException
 (param $this (ref null $exception.MyJsException))
 (result (ref null $exception.MyJsException))
 ;;@ exception/MyJsException.java:23:9
 (block
  ;; exception.MyJsException.$clinit();
  ;;@ exception/MyJsException.java:23:9
  (call $$clinit__void@exception.MyJsException )
  ;; Exception.this.Exception.<init>();
  ;;@ exception/MyJsException.java:23:9
  (drop (call $m_<init>__@java.lang.Exception (local.get $this)))
  ;; return MyJsException.this;
  ;;@ exception/MyJsException.java:23:9
  (return (local.get $this))
 )
)

;;; MyJsException(Throwable cause)
(func $m_<init>__java_lang_Throwable@exception.MyJsException
 (param $this (ref null $exception.MyJsException))
 (param $cause (ref null $java.lang.Throwable))
 (result (ref null $exception.MyJsException))
 ;;@ exception/MyJsException.java:26:9
 (block
  ;; exception.MyJsException.$clinit();
  ;;@ exception/MyJsException.java:26:9
  (call $$clinit__void@exception.MyJsException )
  ;; MyJsException.this.MyJsException.<init>();
  ;;@ exception/MyJsException.java:27:4
  (drop (call $m_<init>__@exception.MyJsException (local.get $this)))
  ;; return MyJsException.this;
  ;;@ exception/MyJsException.java:26:9
  (return (local.get $this))
 )
)

;;; void MyJsException.$clinit()
(func $$clinit__void@exception.MyJsException
 ;;@ exception/MyJsException.java:22:12
 (block
  ;; if (exception.MyJsException.$initialized) return;
  ;;@ exception/MyJsException.java:22:12
  (if (global.get $f_$initialized__exception_MyJsException)
   (then
    ;; return;
    ;;@ exception/MyJsException.java:22:12
    (return )
   )
  )
  ;; (exception.MyJsException.$initialized = true);
  ;;@ exception/MyJsException.java:22:12
  (global.set $f_$initialized__exception_MyJsException (i32.const 1))
  ;; java.lang.Exception.$clinit();
  ;;@ exception/MyJsException.java:22:12
  (call $$clinit__void@java.lang.Exception )
 )
)

;;; Class<?> MyJsException.getClass()
(func $m_getClass__java_lang_Class@exception.MyJsException
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $exception.MyJsException))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $exception.MyJsException.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getException.MyJsException();
  (return (call $$getException.MyJsException__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@exception.MyJsException)

 ;;; Code for exception.MyException [vtable.init]
 (global.set $exception.MyException.vtable
  (struct.new_with_rtt $exception.MyException.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Throwable)
   (ref.func $m_getClass__java_lang_Class@exception.MyException)
   (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable)
   (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable)
   (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable)
   (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable)
   (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_printStackTrace__void@java.lang.Throwable)
   (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable)
   (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable)
   (rtt.canon $exception.MyException.vtable)
  )
 )

 ;;; Code for exception.MyException [itable.init]
 (global.set $exception.MyException.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $exception.MyException.itable) (i32.const 0)
 (struct.new_with_rtt $java.io.Serializable.vtable
  (rtt.canon $java.io.Serializable.vtable)
 ))

 ;;; Code for exception.MyJsException [vtable.init]
 (global.set $exception.MyJsException.vtable
  (struct.new_with_rtt $exception.MyJsException.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Throwable)
   (ref.func $m_getClass__java_lang_Class@exception.MyJsException)
   (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable)
   (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable)
   (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable)
   (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable)
   (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_printStackTrace__void@java.lang.Throwable)
   (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable)
   (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable)
   (rtt.canon $exception.MyJsException.vtable)
  )
 )

 ;;; Code for exception.MyJsException [itable.init]
 (global.set $exception.MyJsException.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $exception.MyJsException.itable) (i32.const 0)
 (struct.new_with_rtt $java.io.Serializable.vtable
  (rtt.canon $java.io.Serializable.vtable)
 ))

;;; Code for exception.MyException [CLASS]
(type $exception.MyException (struct
 (field $vtable (ref null $exception.MyException.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $Object.array)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $Object.array)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $exception.MyException.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$Object.array)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$Object.array)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$Object.array__$void)))
))
(global $exception.MyException.vtable (mut (ref null $exception.MyException.vtable)) (ref.null $exception.MyException.vtable))
(global $f_$initialized__exception_MyException (mut i32) (i32.const 0))

;;; MyException()
(func $m_<init>__void_$pp_exception@exception.MyException
 (param $this (ref null $exception.MyException))
 (result (ref null $exception.MyException))
 (block $return.label
  (block
   ;; Exception.this.Exception.<init>();
   (drop (call $m_<init>__void@java.lang.Exception (local.get $this)))
  )
 )
 (local.get $this)
)

;;; MyException(Throwable cause)
(func $m_<init>__java_lang_Throwable__void_$pp_exception@exception.MyException
 (param $this (ref null $exception.MyException))
 (param $cause (ref null $java.lang.Throwable))
 (result (ref null $exception.MyException))
 (block $return.label
  (block
   ;; Exception.this.Exception.<init>(cause);
   (drop (call $m_<init>__java_lang_Throwable__void@java.lang.Exception (local.get $this)(local.get $cause)))
  )
 )
 (local.get $this)
)

;;; void MyException.$clinit()
(func $$clinit__void@exception.MyException
 (block $return.label
  (block
   ;; if (exception.MyException.$initialized) return;
   (if (global.get $f_$initialized__exception_MyException)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (exception.MyException.$initialized = true);
   (global.set $f_$initialized__exception_MyException (i32.const 1))
   ;; java.lang.Exception.$clinit();
   (call $$clinit__void@java.lang.Exception )
  )
 )
)

;;; Code for exception.MyJsException [CLASS]
(type $exception.MyJsException (struct
 (field $vtable (ref null $exception.MyJsException.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $Object.array)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $Object.array)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $exception.MyJsException.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$Object.array)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$Object.array)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$Object.array__$void)))
))
(global $exception.MyJsException.vtable (mut (ref null $exception.MyJsException.vtable)) (ref.null $exception.MyJsException.vtable))
(global $f_$initialized__exception_MyJsException (mut i32) (i32.const 0))

;;; MyJsException()
(func $m_<init>__void@exception.MyJsException
 (param $this (ref null $exception.MyJsException))
 (result (ref null $exception.MyJsException))
 (block $return.label
  (block
   ;; exception.MyJsException.$clinit();
   (call $$clinit__void@exception.MyJsException )
   ;; Exception.this.Exception.<init>();
   (drop (call $m_<init>__void@java.lang.Exception (local.get $this)))
  )
 )
 (local.get $this)
)

;;; MyJsException(Throwable cause)
(func $m_<init>__java_lang_Throwable__void@exception.MyJsException
 (param $this (ref null $exception.MyJsException))
 (param $cause (ref null $java.lang.Throwable))
 (result (ref null $exception.MyJsException))
 (block $return.label
  (block
   ;; MyJsException.this.MyJsException.<init>();
   (drop (call $m_<init>__void@exception.MyJsException (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void MyJsException.$clinit()
(func $$clinit__void@exception.MyJsException
 (block $return.label
  (block
   ;; if (exception.MyJsException.$initialized) return;
   (if (global.get $f_$initialized__exception_MyJsException)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (exception.MyJsException.$initialized = true);
   (global.set $f_$initialized__exception_MyJsException (i32.const 1))
   ;; java.lang.Exception.$clinit();
   (call $$clinit__void@java.lang.Exception )
  )
 )
)

 ;;; Code for exception.MyException [vtable]
 (global.set $exception.MyException.vtable (struct.new_with_rtt $exception.MyException.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Throwable) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable) (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable) (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable) (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable) (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable) (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable) (ref.func $m_getMessage__java_lang_String@java.lang.Throwable) (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable) (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable) (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable) (ref.func $m_printStackTrace__void@java.lang.Throwable) (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable) (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable) (rtt.canon $exception.MyException.vtable)))

 ;;; Code for exception.MyJsException [vtable]
 (global.set $exception.MyJsException.vtable (struct.new_with_rtt $exception.MyJsException.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Throwable) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable) (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable) (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable) (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable) (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable) (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable) (ref.func $m_getMessage__java_lang_String@java.lang.Throwable) (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable) (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable) (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable) (ref.func $m_printStackTrace__void@java.lang.Throwable) (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable) (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable) (rtt.canon $exception.MyJsException.vtable)))

;;; Code for simpleliterals.SimpleLiterals [vtable]
(global $simpleliterals.SimpleLiterals.vtable (mut (ref null $simpleliterals.SimpleLiterals.vtable)) (ref.null $simpleliterals.SimpleLiterals.vtable))

;;; Code for simpleliterals.SimpleLiterals [static fields]
(global $f_$initialized__simpleliterals_SimpleLiterals (mut i32) (i32.const 0))

;;; Code for simpleliterals.SimpleLiterals [CLASS]
(type $simpleliterals.SimpleLiterals (struct
 (field $vtable (ref null $simpleliterals.SimpleLiterals.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simpleliterals.SimpleLiterals.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void)))
))

;;; SimpleLiterals()
(func $m_<init>__void@simpleliterals.SimpleLiterals
 (param $this (ref null $simpleliterals.SimpleLiterals))
 (result (ref null $simpleliterals.SimpleLiterals))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void SimpleLiterals.main()
(func $m_main__void@simpleliterals.SimpleLiterals
 (param $this.untyped (ref null $java.lang.Object))
 (local $a i32)
 (local $b i32)
 (local $c (ref null $java.lang.Object))
 (local $d i32)
 (local $e (ref null $java.lang.String))
 (local $$array_literal (ref null $char.array))
 (local $f (ref null $java.lang.Class))
 (local $this (ref null $simpleliterals.SimpleLiterals))
 (local.set $this (ref.cast $java.lang.Object $simpleliterals.SimpleLiterals (local.get $this.untyped) (global.get $simpleliterals.SimpleLiterals.rtt)))
 (block $return.label
  (block
   ;; boolean a = false;
   
   (local.set $a (i32.const 0))
   ;; char b = 97;
   
   (local.set $b (i32.const 97))
   ;; Object c = null;
   
   (local.set $c (ref.null $java.lang.Object))
   ;; int d = 101;
   
   (local.set $d (i32.const 101))
   ;; String e = java.lang.String.fromInternalArray((char[] $array_literal = new char[3],($array_literal[0] = 102),($array_literal[1] = 111),($array_literal[2] = 111),$array_literal));
   
   (local.set $e (call $m_fromInternalArray__arrayOf_char__java_lang_String@java.lang.String (block (result (ref null $char.array))
    
    (local.set $$array_literal (struct.new_with_rtt $char.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $char.array.elements (i32.const 3) (global.get $char.array.elements.rtt)) (global.get $char.array.rtt)))
    (array.set $char.array.elements (struct.get $char.array $elements (local.get $$array_literal)) (i32.const 0) (i32.const 102))
    (array.set $char.array.elements (struct.get $char.array $elements (local.get $$array_literal)) (i32.const 1) (i32.const 111))
    (array.set $char.array.elements (struct.get $char.array $elements (local.get $$array_literal)) (i32.const 2) (i32.const 111))
    (local.get $$array_literal)
   )))
   ;; Class<?> f = <expr>;
   
   (local.set $f (ref.null $java.lang.Class))
  )
 )
)
(elem declare func $m_main__void@simpleliterals.SimpleLiterals)

;;; void SimpleLiterals.$clinit()
(func $$clinit__void@simpleliterals.SimpleLiterals
 (block $return.label
  (block
   ;; if (simpleliterals.SimpleLiterals.$initialized) return;
   (if (global.get $f_$initialized__simpleliterals_SimpleLiterals)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simpleliterals.SimpleLiterals.$initialized = true);
   (global.set $f_$initialized__simpleliterals_SimpleLiterals (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for simpleliterals.SimpleLiterals [vtable.init]
 (global.set $simpleliterals.SimpleLiterals.vtable (struct.new_with_rtt $simpleliterals.SimpleLiterals.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_main__void@simpleliterals.SimpleLiterals) (rtt.canon $simpleliterals.SimpleLiterals.vtable)))

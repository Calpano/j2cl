;;; Code for assertsimple.AssertSimple [static fields]
(global $f_$initialized__assertsimple_AssertSimple (mut i32) (i32.const 0))

;;; Code for assertsimple.AssertSimple [vtable.init]
(global $assertsimple.AssertSimple.vtable (ref $assertsimple.AssertSimple.vtable) 
 (struct.new_with_rtt $assertsimple.AssertSimple.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@assertsimple.AssertSimple)
  (rtt.canon $assertsimple.AssertSimple.vtable)
 )
)

;;; Code for assertsimple.AssertSimple [itable.init]
(global $assertsimple.AssertSimple.itable (ref $itable) (array.init $itable 
 (rtt.canon $itable)))

;;; Code for assertsimple.AssertSimple [CLASS]
(type $assertsimple.AssertSimple (struct
 (field $vtable (ref $assertsimple.AssertSimple.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $assertsimple.AssertSimple.vtable (struct
 (field $m_equals__java_lang_Object__boolean (ref $function.$java.lang.Object__$boolean))
 (field $m_hashCode__int (ref $function.__$int))
 (field $m_toString__java_lang_String (ref $function.__$java.lang.String))
 (field $m_getClass__java_lang_Class (ref $function.__$java.lang.Class))
 )
  (extends $java.lang.Object.vtable)
)

;;; AssertSimple()
(func $m_<init>__@assertsimple.AssertSimple
 (param $this (ref null $assertsimple.AssertSimple))
 (result (ref null $assertsimple.AssertSimple))
 ;;@ assertsimple/AssertSimple.java:18:13
 (block
  ;; assertsimple.AssertSimple.$clinit();
  ;;@ assertsimple/AssertSimple.java:18:13
  (call $$clinit__void@assertsimple.AssertSimple )
  ;; Object.this.Object.<init>();
  ;;@ assertsimple/AssertSimple.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return AssertSimple.this;
  ;;@ assertsimple/AssertSimple.java:18:13
  (return (local.get $this))
 )
)

;;; void AssertSimple.main(String[] args)
(func $m_main__arrayOf_java_lang_String__void@assertsimple.AssertSimple
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ assertsimple/AssertSimple.java:19:21
 (block
  ;; assertsimple.AssertSimple.$clinit();
  ;;@ assertsimple/AssertSimple.java:19:41
  (call $$clinit__void@assertsimple.AssertSimple )
 )
)

;;; void AssertSimple.$clinit()
(func $$clinit__void@assertsimple.AssertSimple
 ;;@ assertsimple/AssertSimple.java:18:13
 (block
  ;; if (assertsimple.AssertSimple.$initialized) return;
  ;;@ assertsimple/AssertSimple.java:18:13
  (if (global.get $f_$initialized__assertsimple_AssertSimple)
   (then
    ;; return;
    ;;@ assertsimple/AssertSimple.java:18:13
    (return )
   )
  )
  ;; (assertsimple.AssertSimple.$initialized = true);
  ;;@ assertsimple/AssertSimple.java:18:13
  (global.set $f_$initialized__assertsimple_AssertSimple (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ assertsimple/AssertSimple.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> AssertSimple.getClass()
(func $m_getClass__java_lang_Class@assertsimple.AssertSimple
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $assertsimple.AssertSimple))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $assertsimple.AssertSimple.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getAssertsimple.AssertSimple();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getAssertsimple.AssertSimple__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@assertsimple.AssertSimple)

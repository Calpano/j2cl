package localclassinheritance

open class LocalClassInheritance {
 constructor(): super()

 open fun test() {
  var f: Int = 1
 }
}

open class `LocalClassInheritance$1Parent` {
 internal constructor(`$outer_this`: localclassinheritance.LocalClassInheritance?, `$captured_f`: Int): super() {
  this.`this` = `$outer_this`
  this.f = `$captured_f`
 }

 @JvmField val `this`: localclassinheritance.LocalClassInheritance?

 open fun n() {
  val i: Int = this.f
 }

 @JvmField val f: Int
}

open class `LocalClassInheritance$1Child`: localclassinheritance.`LocalClassInheritance$1Parent` {
 internal constructor(`$outer_this`: localclassinheritance.LocalClassInheritance?, `$captured_f`: Int): super(`$captured_f`) {
  this.`this` = `$outer_this`
  this.f = `$captured_f`
 }

 @JvmField val `this`: localclassinheritance.LocalClassInheritance?

 open override fun n() {
  val i: Int = this.f
 }

 @JvmField val f: Int
}

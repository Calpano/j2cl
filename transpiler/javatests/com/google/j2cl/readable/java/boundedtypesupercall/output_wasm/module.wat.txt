;;; Code for boundedtypesupercall.Main

;;; CLASS  Main

(type $boundedtypesupercall.Main (struct
))

;;; Main()
(func $<init><>:void@boundedtypesupercall.Main
 (param $this (ref null $boundedtypesupercall.Main))
 (result (ref null $boundedtypesupercall.Main))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Foo

(type $boundedtypesupercall.Main.Foo (struct
))

;;; Foo(T foo)
(func $<init><java.lang.Object>:void@boundedtypesupercall.Main.Foo
 (param $this (ref null $boundedtypesupercall.Main.Foo))
 (param $foo (ref null $java.lang.Object))
 (result (ref null $boundedtypesupercall.Main.Foo))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  Bar

(type $boundedtypesupercall.Main.Bar (struct
))

;;; Bar()
(func $<init><>:void@boundedtypesupercall.Main.Bar
 (param $this (ref null $boundedtypesupercall.Main.Bar))
 (result (ref null $boundedtypesupercall.Main.Bar))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; T Bar.getSomething()
(func $getSomething<>:java.lang.Comparable@boundedtypesupercall.Main.Bar
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Comparable))
 (local $return.value (ref null $java.lang.Comparable))
 (block $return.label
  (block
   ;; return null;
   (local.set $return.value (ref.null $java.lang.Comparable))
   (br $return.label))
 )
 (local.get $return.value)
)

;;; Foo<T> Bar.doSomething()
(func $doSomething<>:boundedtypesupercall.Main.Foo@boundedtypesupercall.Main.Bar
 (param $this (ref null $java.lang.Object))
 (result (ref null $boundedtypesupercall.Main.Foo))
 (local $return.value (ref null $boundedtypesupercall.Main.Foo))
 (block $return.label
  (block
   ;; return Bar.this.new $1.<init>(Bar.this.getSomething());
   (local.set $return.value (call $<init><java.lang.Comparable>:void@boundedtypesupercall.Main.Bar.1 (struct.new_default_with_rtt $boundedtypesupercall.Main.Bar.1 (global.get $boundedtypesupercall.Main.Bar.1.rtt)) (ref.null $java.lang.Comparable)))
   (br $return.label))
 )
 (local.get $return.value)
)

;;; CLASS  <anonymous> extends Foo<T>

(type $boundedtypesupercall.Main.Bar.1 (struct
 (field $this@boundedtypesupercall.Main.Bar.1 (ref null $boundedtypesupercall.Main.Bar))
))

;;; <anonymous> extends Foo<T>(T $_0)
(func $<init><java.lang.Comparable>:void@boundedtypesupercall.Main.Bar.1
 (param $this (ref null $boundedtypesupercall.Main.Bar.1))
 (param $$_0 (ref null $java.lang.Comparable))
 (result (ref null $boundedtypesupercall.Main.Bar.1))
 (block $return.label
  (block
   ;; Foo.this.Foo.<init>($_0);
   
  )
 )
 (local.get $this)
)

;;; void <anonymous> extends Foo<T>.foo()
(func $foo<>:void@boundedtypesupercall.Main.Bar.1
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)


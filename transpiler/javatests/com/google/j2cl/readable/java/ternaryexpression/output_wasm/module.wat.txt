;;; Code for ternaryexpression.TernaryExpression [CLASS]
(type $ternaryexpression.TernaryExpression (struct
 (field $vtable (ref null $ternaryexpression.TernaryExpression.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $ternaryexpression.TernaryExpression.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $ternaryexpression.TernaryExpression.vtable (mut (ref null $ternaryexpression.TernaryExpression.vtable)) (ref.null $ternaryexpression.TernaryExpression.vtable))
(global $f_$initialized__ternaryexpression_TernaryExpression (mut i32) (i32.const 0))

;;; TernaryExpression()
(func $m_<init>__void@ternaryexpression.TernaryExpression
 (param $this (ref null $ternaryexpression.TernaryExpression))
 (result (ref null $ternaryexpression.TernaryExpression))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void TernaryExpression.test()
(func $m_test__void@ternaryexpression.TernaryExpression
 (param $this.untyped (ref null $java.lang.Object))
 (local $a i32)
 (local $number i32)
 (local $b i32)
 (local $value i32)
 (local $this (ref null $ternaryexpression.TernaryExpression))
 (local.set $this (ref.cast $java.lang.Object $ternaryexpression.TernaryExpression (local.get $this.untyped) (global.get $ternaryexpression.TernaryExpression.rtt)))
 (block $return.label
  (block
   ;; boolean a = true;
   
   (local.set $a (i32.const 1))
   ;; int number = (a) ? (1) : (2);
   
   (local.set $number (if (result i32) (local.get $a) (then (i32.const 1)) (else (i32.const 2))))
   ;; boolean b = ((number == 1)) ? ((number == 2)) : ((number == 1));
   
   (local.set $b (if (result i32) (i32.eq (local.get $number) (i32.const 1)) (then (i32.eq (local.get $number) (i32.const 2))) (else (i32.eq (local.get $number) (i32.const 1)))))
   ;; int value = (b) ? (new Integer.<init>(15)) : (new Integer.<init>(30));
   
   (local.set $value (i32.const 0))
  )
 )
)
(elem declare func $m_test__void@ternaryexpression.TernaryExpression)

;;; void TernaryExpression.$clinit()
(func $$clinit__void@ternaryexpression.TernaryExpression
 (block $return.label
  (block
   ;; if (ternaryexpression.TernaryExpression.$initialized) return;
   (if (global.get $f_$initialized__ternaryexpression_TernaryExpression)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (ternaryexpression.TernaryExpression.$initialized = true);
   (global.set $f_$initialized__ternaryexpression_TernaryExpression (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for ternaryexpression.TernaryExpression [vtable]
 (global.set $ternaryexpression.TernaryExpression.vtable (struct.new_with_rtt $ternaryexpression.TernaryExpression.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_test__void@ternaryexpression.TernaryExpression) (rtt.canon $ternaryexpression.TernaryExpression.vtable)))

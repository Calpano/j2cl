;;; Code for blockscoping.BlockScoping [vtable]
(global $blockscoping.BlockScoping.vtable (mut (ref null $blockscoping.BlockScoping.vtable)) (ref.null $blockscoping.BlockScoping.vtable))

;;; Code for blockscoping.BlockScoping [static fields]
(global $f_$initialized__blockscoping_BlockScoping (mut i32) (i32.const 0))

;;; Code for blockscoping.BlockScoping [CLASS]
(type $blockscoping.BlockScoping (struct
 (field $vtable (ref $blockscoping.BlockScoping.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $blockscoping.BlockScoping.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void))))
 (extends $java.lang.Object.vtable)
)

;;; BlockScoping()
(func $m_<init>__@blockscoping.BlockScoping
 (param $this (ref null $blockscoping.BlockScoping))
 (result (ref null $blockscoping.BlockScoping))
 (block
  ;; blockscoping.BlockScoping.$clinit();
  ;;@ blockscoping/BlockScoping.java:18:13
  (call $$clinit__void@blockscoping.BlockScoping )
  ;; Object.this.Object.<init>();
  ;;@ blockscoping/BlockScoping.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return BlockScoping.this;
  ;;@ blockscoping/BlockScoping.java:18:13
  (return (local.get $this))
 )
)

;;; void BlockScoping.main()
(func $m_main__void@blockscoping.BlockScoping
 (type $function.__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (local $i i32)
 (local $i_1 i32)
 (local $this (ref null $blockscoping.BlockScoping))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $blockscoping.BlockScoping.rtt)))
 (block
  (block
   ;; int i = 0;
   ;;@ blockscoping/BlockScoping.java:22:6
   (local.set $i (i32.const 0))
  )
  (block
   ;; int i = 1;
   ;;@ blockscoping/BlockScoping.java:25:6
   (local.set $i_1 (i32.const 1))
  )
 )
)
(elem declare func $m_main__void@blockscoping.BlockScoping)

;;; void BlockScoping.$clinit()
(func $$clinit__void@blockscoping.BlockScoping
 (block
  ;; if (blockscoping.BlockScoping.$initialized) return;
  ;;@ blockscoping/BlockScoping.java:18:13
  (if (global.get $f_$initialized__blockscoping_BlockScoping)
   (then
    ;; return;
    ;;@ blockscoping/BlockScoping.java:18:13
    (return )
   )
  )
  ;; (blockscoping.BlockScoping.$initialized = true);
  ;;@ blockscoping/BlockScoping.java:18:13
  (global.set $f_$initialized__blockscoping_BlockScoping (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ blockscoping/BlockScoping.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> BlockScoping.getClass()
(func $m_getClass__java_lang_Class@blockscoping.BlockScoping
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $blockscoping.BlockScoping))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $blockscoping.BlockScoping.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getBlockscoping.BlockScoping();
  (return (call $$getBlockscoping.BlockScoping__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@blockscoping.BlockScoping)

 ;;; Code for blockscoping.BlockScoping [vtable.init]
 (global.set $blockscoping.BlockScoping.vtable
  (struct.new_with_rtt $blockscoping.BlockScoping.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@blockscoping.BlockScoping)
   (ref.func $m_main__void@blockscoping.BlockScoping)
   (rtt.canon $blockscoping.BlockScoping.vtable)
  )
 )

 ;;; Code for blockscoping.BlockScoping [itable.init]
 (global.set $blockscoping.BlockScoping.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

;;; Code for staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace

;;; CLASS  StaticJsMethodsWithClassNamespace
(type $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace (struct
 (field $vtable (ref null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable (mut (ref null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable)) (ref.null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable))
(global $f_$initialized__staticjsmethodswithclassnamespace_StaticJsMethodsWithClassNamespace (mut i32) (i32.const 0))

;;; StaticJsMethodsWithClassNamespace()
(func $m_<init>__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace
 (param $this (ref null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace))
 (result (ref null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace))
 (block $return.label
  (block
   ;; staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.$clinit();
   (call $$clinit__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void StaticJsMethodsWithClassNamespace.originalName()
(func $m_originalName__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace
 (block $return.label
  (block
   ;; staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.$clinit();
   (call $$clinit__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace )
  )
 )
)

;;; void StaticJsMethodsWithClassNamespace.test()
(func $m_test__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace))
 (local.set $this (ref.cast $java.lang.Object $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace (local.get $this.untyped) (global.get $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.rtt)))
 (block $return.label
  (block
   ;; staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.originalName();
   (call $m_originalName__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace )
   ;; staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.originalName();
   (call $m_originalName__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace )
  )
 )
)
(elem declare func $m_test__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace)

;;; void StaticJsMethodsWithClassNamespace.$clinit()
(func $$clinit__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace
 (block $return.label
  (block
   ;; if (staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.$initialized) return;
   (if (global.get $f_$initialized__staticjsmethodswithclassnamespace_StaticJsMethodsWithClassNamespace)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.$initialized = true);
   (global.set $f_$initialized__staticjsmethodswithclassnamespace_StaticJsMethodsWithClassNamespace (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; CLASS  ExternalCaller
(type $staticjsmethodswithclassnamespace.ExternalCaller (struct
 (field $vtable (ref null $staticjsmethodswithclassnamespace.ExternalCaller.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $staticjsmethodswithclassnamespace.ExternalCaller.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $staticjsmethodswithclassnamespace.ExternalCaller.vtable (mut (ref null $staticjsmethodswithclassnamespace.ExternalCaller.vtable)) (ref.null $staticjsmethodswithclassnamespace.ExternalCaller.vtable))
(global $f_$initialized__staticjsmethodswithclassnamespace_ExternalCaller (mut i32) (i32.const 0))

;;; ExternalCaller()
(func $m_<init>__void_$pp_staticjsmethodswithclassnamespace@staticjsmethodswithclassnamespace.ExternalCaller
 (param $this (ref null $staticjsmethodswithclassnamespace.ExternalCaller))
 (result (ref null $staticjsmethodswithclassnamespace.ExternalCaller))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ExternalCaller.test()
(func $m_test__void@staticjsmethodswithclassnamespace.ExternalCaller
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $staticjsmethodswithclassnamespace.ExternalCaller))
 (local.set $this (ref.cast $java.lang.Object $staticjsmethodswithclassnamespace.ExternalCaller (local.get $this.untyped) (global.get $staticjsmethodswithclassnamespace.ExternalCaller.rtt)))
 (block $return.label
  (block
   ;; staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.originalName();
   (call $m_originalName__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace )
  )
 )
)
(elem declare func $m_test__void@staticjsmethodswithclassnamespace.ExternalCaller)

;;; void ExternalCaller.$clinit()
(func $$clinit__void@staticjsmethodswithclassnamespace.ExternalCaller
 (block $return.label
  (block
   ;; if (staticjsmethodswithclassnamespace.ExternalCaller.$initialized) return;
   (if (global.get $f_$initialized__staticjsmethodswithclassnamespace_ExternalCaller)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (staticjsmethodswithclassnamespace.ExternalCaller.$initialized = true);
   (global.set $f_$initialized__staticjsmethodswithclassnamespace_ExternalCaller (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace [vtable]
 (global.set $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable (struct.new_with_rtt $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_test__void@staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace) (rtt.canon $staticjsmethodswithclassnamespace.StaticJsMethodsWithClassNamespace.vtable)))
;;; Code for staticjsmethodswithclassnamespace.ExternalCaller [vtable]
 (global.set $staticjsmethodswithclassnamespace.ExternalCaller.vtable (struct.new_with_rtt $staticjsmethodswithclassnamespace.ExternalCaller.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_test__void@staticjsmethodswithclassnamespace.ExternalCaller) (rtt.canon $staticjsmethodswithclassnamespace.ExternalCaller.vtable)))
))
(start $.runtime.init)


;;; Code for circularimportuse.Left

;;; CLASS  Left
(type $circularimportuse.Left (struct
))

;;; Left()
(func $m_<init>__void@circularimportuse.Left
 (param $this (ref null $circularimportuse.Left))
 (result (ref null $circularimportuse.Left))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Right Left.createRight()
(func $m_createRight__circularimportuse_Right_$pp_circularimportuse@circularimportuse.Left
 (param $this (ref null $java.lang.Object))
 (result (ref null $circularimportuse.Right))
 (local $return.value (ref null $circularimportuse.Right))
 (block $return.label
  (block
   ;; return new Right.<init>();
   (local.set $return.value (call $m_<init>__void@circularimportuse.Right (struct.new_with_rtt $circularimportuse.Right (global.get $circularimportuse.Right.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
;;; Code for circularimportuse.Main

;;; CLASS  Main
(type $circularimportuse.Main (struct
))

;;; Main()
(func $m_<init>__void@circularimportuse.Main
 (param $this (ref null $circularimportuse.Main))
 (result (ref null $circularimportuse.Main))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Main.main(String... args)
(func $m_main__arrayOf_java_lang_String__void@circularimportuse.Main
 (param $args (ref null $java.lang.Object))
 (local $left (ref null $circularimportuse.Left))
 (local $right (ref null $circularimportuse.Right))
 (block $return.label
  (block
   ;; Left left = new Left.<init>();
   
   (local.set $left (call $m_<init>__void@circularimportuse.Left (struct.new_with_rtt $circularimportuse.Left (global.get $circularimportuse.Left.rtt))))
   ;; Right right = new Right.<init>();
   
   (local.set $right (call $m_<init>__void@circularimportuse.Right (struct.new_with_rtt $circularimportuse.Right (global.get $circularimportuse.Right.rtt))))
  )
 )
)
;;; Code for circularimportuse.Right

;;; CLASS  Right
(type $circularimportuse.Right (struct
))

;;; Right()
(func $m_<init>__void@circularimportuse.Right
 (param $this (ref null $circularimportuse.Right))
 (result (ref null $circularimportuse.Right))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; Left Right.createLeft()
(func $m_createLeft__circularimportuse_Left_$pp_circularimportuse@circularimportuse.Right
 (param $this (ref null $java.lang.Object))
 (result (ref null $circularimportuse.Left))
 (local $return.value (ref null $circularimportuse.Left))
 (block $return.label
  (block
   ;; return new Left.<init>();
   (local.set $return.value (call $m_<init>__void@circularimportuse.Left (struct.new_with_rtt $circularimportuse.Left (global.get $circularimportuse.Left.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)


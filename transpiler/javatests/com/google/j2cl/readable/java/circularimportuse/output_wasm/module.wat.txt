;;; Code for circularimportuse.Left [static fields]
(global $f_$initialized__circularimportuse_Left (mut i32) (i32.const 0))

;;; Code for circularimportuse.Main [static fields]
(global $f_$initialized__circularimportuse_Main (mut i32) (i32.const 0))

;;; Code for circularimportuse.Right [static fields]
(global $f_$initialized__circularimportuse_Right (mut i32) (i32.const 0))

;;; Code for circularimportuse.Left [vtable.init]
(global $circularimportuse.Left.vtable (ref $circularimportuse.Left.vtable) 
 (struct.new_with_rtt $circularimportuse.Left.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@circularimportuse.Left)
  (ref.func $m_createRight__circularimportuse_Right_$pp_circularimportuse@circularimportuse.Left)
  (rtt.canon $circularimportuse.Left.vtable)
 )
)

;;; Code for circularimportuse.Left [itable.init]
(global $circularimportuse.Left.itable (ref $itable) (array.init $itable 
 (rtt.canon $itable)))

;;; Code for circularimportuse.Main [vtable.init]
(global $circularimportuse.Main.vtable (ref $circularimportuse.Main.vtable) 
 (struct.new_with_rtt $circularimportuse.Main.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@circularimportuse.Main)
  (rtt.canon $circularimportuse.Main.vtable)
 )
)

;;; Code for circularimportuse.Main [itable.init]
(global $circularimportuse.Main.itable (ref $itable) (array.init $itable 
 (rtt.canon $itable)))

;;; Code for circularimportuse.Right [vtable.init]
(global $circularimportuse.Right.vtable (ref $circularimportuse.Right.vtable) 
 (struct.new_with_rtt $circularimportuse.Right.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@circularimportuse.Right)
  (ref.func $m_createLeft__circularimportuse_Left_$pp_circularimportuse@circularimportuse.Right)
  (rtt.canon $circularimportuse.Right.vtable)
 )
)

;;; Code for circularimportuse.Right [itable.init]
(global $circularimportuse.Right.itable (ref $itable) (array.init $itable 
 (rtt.canon $itable)))

;;; Code for circularimportuse.Left [CLASS]
(type $circularimportuse.Left (struct
 (field $vtable (ref $circularimportuse.Left.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $circularimportuse.Left.vtable (struct
 (field $m_equals__java_lang_Object__boolean (ref $function.$java.lang.Object__$boolean))
 (field $m_hashCode__int (ref $function.__$int))
 (field $m_toString__java_lang_String (ref $function.__$java.lang.String))
 (field $m_getClass__java_lang_Class (ref $function.__$java.lang.Class))
 (field $m_createRight__circularimportuse_Right_$pp_circularimportuse (ref $function.__$circularimportuse.Right))
 )
  (extends $java.lang.Object.vtable)
)

;;; Left()
(func $m_<init>__@circularimportuse.Left
 (param $this (ref null $circularimportuse.Left))
 (result (ref null $circularimportuse.Left))
 ;;@ circularimportuse/Left.java:18:13
 (block
  ;; circularimportuse.Left.$clinit();
  ;;@ circularimportuse/Left.java:18:13
  (call $$clinit__void@circularimportuse.Left )
  ;; Object.this.Object.<init>();
  ;;@ circularimportuse/Left.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Left.this;
  ;;@ circularimportuse/Left.java:18:13
  (return (local.get $this))
 )
)

;;; Right Left.createRight()
(func $m_createRight__circularimportuse_Right_$pp_circularimportuse@circularimportuse.Left
 (type $function.__$circularimportuse.Right)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $circularimportuse.Right))
 ;;@ circularimportuse/Left.java:19:8
 (local $this (ref null $circularimportuse.Left))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $circularimportuse.Left.rtt)))
 (block
  ;; return new Right.<init>();
  ;;@ circularimportuse/Left.java:20:4
  (return (call $m_<init>__@circularimportuse.Right (struct.new_with_rtt $circularimportuse.Right (ref.as_non_null (global.get $circularimportuse.Right.vtable)) (ref.as_non_null (global.get $circularimportuse.Right.itable)) (i32.const 0) (global.get $circularimportuse.Right.rtt))))
 )
)
(elem declare func $m_createRight__circularimportuse_Right_$pp_circularimportuse@circularimportuse.Left)

;;; void Left.$clinit()
(func $$clinit__void@circularimportuse.Left
 ;;@ circularimportuse/Left.java:18:13
 (block
  ;; if (circularimportuse.Left.$initialized) return;
  ;;@ circularimportuse/Left.java:18:13
  (if (global.get $f_$initialized__circularimportuse_Left)
   (then
    ;; return;
    ;;@ circularimportuse/Left.java:18:13
    (return )
   )
  )
  ;; (circularimportuse.Left.$initialized = true);
  ;;@ circularimportuse/Left.java:18:13
  (global.set $f_$initialized__circularimportuse_Left (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ circularimportuse/Left.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Left.getClass()
(func $m_getClass__java_lang_Class@circularimportuse.Left
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $circularimportuse.Left))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $circularimportuse.Left.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getCircularimportuse.Left();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getCircularimportuse.Left__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@circularimportuse.Left)

;;; Code for circularimportuse.Main [CLASS]
(type $circularimportuse.Main (struct
 (field $vtable (ref $circularimportuse.Main.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $circularimportuse.Main.vtable (struct
 (field $m_equals__java_lang_Object__boolean (ref $function.$java.lang.Object__$boolean))
 (field $m_hashCode__int (ref $function.__$int))
 (field $m_toString__java_lang_String (ref $function.__$java.lang.String))
 (field $m_getClass__java_lang_Class (ref $function.__$java.lang.Class))
 )
  (extends $java.lang.Object.vtable)
)

;;; Main()
(func $m_<init>__@circularimportuse.Main
 (param $this (ref null $circularimportuse.Main))
 (result (ref null $circularimportuse.Main))
 ;;@ circularimportuse/Main.java:18:13
 (block
  ;; circularimportuse.Main.$clinit();
  ;;@ circularimportuse/Main.java:18:13
  (call $$clinit__void@circularimportuse.Main )
  ;; Object.this.Object.<init>();
  ;;@ circularimportuse/Main.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Main.this;
  ;;@ circularimportuse/Main.java:18:13
  (return (local.get $this))
 )
)

;;; void Main.main(String... args)
(func $m_main__arrayOf_java_lang_String__void@circularimportuse.Main
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ circularimportuse/Main.java:20:21
 (local $left (ref null $circularimportuse.Left))
 (local $right (ref null $circularimportuse.Right))
 (block
  ;; circularimportuse.Main.$clinit();
  ;;@ circularimportuse/Main.java:20:42
  (call $$clinit__void@circularimportuse.Main )
  ;; Left left = new Left.<init>();
  ;;@ circularimportuse/Main.java:21:4
  (local.set $left (call $m_<init>__@circularimportuse.Left (struct.new_with_rtt $circularimportuse.Left (ref.as_non_null (global.get $circularimportuse.Left.vtable)) (ref.as_non_null (global.get $circularimportuse.Left.itable)) (i32.const 0) (global.get $circularimportuse.Left.rtt))))
  ;; Right right = new Right.<init>();
  ;;@ circularimportuse/Main.java:22:4
  (local.set $right (call $m_<init>__@circularimportuse.Right (struct.new_with_rtt $circularimportuse.Right (ref.as_non_null (global.get $circularimportuse.Right.vtable)) (ref.as_non_null (global.get $circularimportuse.Right.itable)) (i32.const 0) (global.get $circularimportuse.Right.rtt))))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@circularimportuse.Main
 ;;@ circularimportuse/Main.java:18:13
 (block
  ;; if (circularimportuse.Main.$initialized) return;
  ;;@ circularimportuse/Main.java:18:13
  (if (global.get $f_$initialized__circularimportuse_Main)
   (then
    ;; return;
    ;;@ circularimportuse/Main.java:18:13
    (return )
   )
  )
  ;; (circularimportuse.Main.$initialized = true);
  ;;@ circularimportuse/Main.java:18:13
  (global.set $f_$initialized__circularimportuse_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ circularimportuse/Main.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@circularimportuse.Main
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $circularimportuse.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $circularimportuse.Main.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getCircularimportuse.Main();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getCircularimportuse.Main__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@circularimportuse.Main)

;;; Code for circularimportuse.Right [CLASS]
(type $circularimportuse.Right (struct
 (field $vtable (ref $circularimportuse.Right.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $circularimportuse.Right.vtable (struct
 (field $m_equals__java_lang_Object__boolean (ref $function.$java.lang.Object__$boolean))
 (field $m_hashCode__int (ref $function.__$int))
 (field $m_toString__java_lang_String (ref $function.__$java.lang.String))
 (field $m_getClass__java_lang_Class (ref $function.__$java.lang.Class))
 (field $m_createLeft__circularimportuse_Left_$pp_circularimportuse (ref $function.__$circularimportuse.Left))
 )
  (extends $java.lang.Object.vtable)
)

;;; Right()
(func $m_<init>__@circularimportuse.Right
 (param $this (ref null $circularimportuse.Right))
 (result (ref null $circularimportuse.Right))
 ;;@ circularimportuse/Right.java:18:13
 (block
  ;; circularimportuse.Right.$clinit();
  ;;@ circularimportuse/Right.java:18:13
  (call $$clinit__void@circularimportuse.Right )
  ;; Object.this.Object.<init>();
  ;;@ circularimportuse/Right.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Right.this;
  ;;@ circularimportuse/Right.java:18:13
  (return (local.get $this))
 )
)

;;; Left Right.createLeft()
(func $m_createLeft__circularimportuse_Left_$pp_circularimportuse@circularimportuse.Right
 (type $function.__$circularimportuse.Left)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $circularimportuse.Left))
 ;;@ circularimportuse/Right.java:19:7
 (local $this (ref null $circularimportuse.Right))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $circularimportuse.Right.rtt)))
 (block
  ;; return new Left.<init>();
  ;;@ circularimportuse/Right.java:20:4
  (return (call $m_<init>__@circularimportuse.Left (struct.new_with_rtt $circularimportuse.Left (ref.as_non_null (global.get $circularimportuse.Left.vtable)) (ref.as_non_null (global.get $circularimportuse.Left.itable)) (i32.const 0) (global.get $circularimportuse.Left.rtt))))
 )
)
(elem declare func $m_createLeft__circularimportuse_Left_$pp_circularimportuse@circularimportuse.Right)

;;; void Right.$clinit()
(func $$clinit__void@circularimportuse.Right
 ;;@ circularimportuse/Right.java:18:13
 (block
  ;; if (circularimportuse.Right.$initialized) return;
  ;;@ circularimportuse/Right.java:18:13
  (if (global.get $f_$initialized__circularimportuse_Right)
   (then
    ;; return;
    ;;@ circularimportuse/Right.java:18:13
    (return )
   )
  )
  ;; (circularimportuse.Right.$initialized = true);
  ;;@ circularimportuse/Right.java:18:13
  (global.set $f_$initialized__circularimportuse_Right (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ circularimportuse/Right.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Right.getClass()
(func $m_getClass__java_lang_Class@circularimportuse.Right
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $circularimportuse.Right))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $circularimportuse.Right.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getCircularimportuse.Right();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getCircularimportuse.Right__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@circularimportuse.Right)

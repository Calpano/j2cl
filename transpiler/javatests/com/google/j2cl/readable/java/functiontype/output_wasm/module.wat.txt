 ;;; Code for functiontype.Function [type definition]
 (type $functiontype.Function.vtable (struct 
  )
 )

 ;;; Code for functiontype.FunctionImpl [type definition]
 (type $functiontype.FunctionImpl (struct_subtype 
  (field $vtable (ref $functiontype.FunctionImpl.vtable)) 
  (field $itable (ref $functiontype.FunctionImpl.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
   $java.lang.Object)
 )
 (type $functiontype.FunctionImpl.vtable (struct_subtype 
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_test__functiontype_Function__void (ref $function.m_test__functiontype_Function__void))
   $java.lang.Object.vtable)
 )
 (type $functiontype.FunctionImpl.itable (struct_subtype 
 (field $slot0 (ref $functiontype.Function.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $java.lang.Object.itable))

;;; Code for functiontype.FunctionImpl [vtable.init]
(global $functiontype.FunctionImpl.vtable (ref $functiontype.FunctionImpl.vtable) 
 (struct.new $functiontype.FunctionImpl.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl)
  (ref.func $m_test__functiontype_Function__void@functiontype.FunctionImpl)
 )
)

;;; Code for functiontype.FunctionImpl [itable.init]
(global $functiontype.FunctionImpl.itable (ref $functiontype.FunctionImpl.itable) (struct.new $functiontype.FunctionImpl.itable 
 (struct.new $functiontype.Function.vtable
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for functiontype.Function [static fields]
(global $f_$initialized__functiontype_Function (mut i32) (i32.const 0))
(global $f_$class__functiontype_Function (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))

;;; Code for functiontype.FunctionImpl [static fields]
(global $f_$initialized__functiontype_FunctionImpl (mut i32) (i32.const 0))
(global $f_$class__functiontype_FunctionImpl (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))

;;; Code for functiontype.Function [methods]

;;; void Function.$clinit()
(func $$clinit__void@functiontype.Function
 ;;@ functiontype/FunctionImpl.java:18:10
 (block
  ;; if (functiontype.Function.$initialized) return;
  ;;@ functiontype/FunctionImpl.java:18:10
  (if (global.get $f_$initialized__functiontype_Function)
   (then
    ;; return;
    ;;@ functiontype/FunctionImpl.java:18:10
    (return )
   )
  )
  ;; (functiontype.Function.$initialized = true);
  ;;@ functiontype/FunctionImpl.java:18:10
  (global.set $f_$initialized__functiontype_Function (i32.const 1))
 )
)

;;; Class<T> Function.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@functiontype.Function
 (result (ref null $java.lang.Class))
 (block
  ;; if ((functiontype.Function.$class == null)) (functiontype.Function.$class = java.lang.Class.createForInterface(javaemul.internal.StringPool.$getString_|functiontype...|()));
  (if (ref.eq (global.get $f_$class__functiontype_Function) (ref.null $java.lang.Class))
   (then
    ;; (functiontype.Function.$class = java.lang.Class.createForInterface(javaemul.internal.StringPool.$getString_|functiontype...|()));
    (global.set $f_$class__functiontype_Function (call $m_createForInterface__java_lang_String__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|functiontype...|__java_lang_String (ref.func $$getString_|functiontype...|__java_lang_String@javaemul.internal.StringPool) )))
   )
  )
  ;; return functiontype.Function.$class;
  (return (global.get $f_$class__functiontype_Function))
 )
)

;;; Code for functiontype.FunctionImpl [methods]

;;; FunctionImpl FunctionImpl.$create()
(func $$create__@functiontype.FunctionImpl
 (result (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (local $$instance (ref null $functiontype.FunctionImpl))
 (block
  ;; FunctionImpl $instance = new FunctionImpl.<init>(0);
  ;;@ functiontype/FunctionImpl.java:20:13
  (local.set $$instance (struct.new $functiontype.FunctionImpl (ref.as_non_null (global.get $functiontype.FunctionImpl.vtable)) (ref.as_non_null (global.get $functiontype.FunctionImpl.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ functiontype/FunctionImpl.java:20:13
  (return (local.get $$instance))
 )
)

;;; void FunctionImpl.$ctor()
(func $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl
 (param $this (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;; functiontype.FunctionImpl.$clinit();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void@functiontype.FunctionImpl )
  ;; Object.this.$ctor();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void FunctionImpl.test(Function f)
(func $m_test__functiontype_Function__void@functiontype.FunctionImpl
 (type $function.m_test__functiontype_Function__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ functiontype/FunctionImpl.java:21:14
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast_static $functiontype.FunctionImpl (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_test__functiontype_Function__void@functiontype.FunctionImpl)

;;; void FunctionImpl.$clinit()
(func $$clinit__void@functiontype.FunctionImpl
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;; if (functiontype.FunctionImpl.$initialized) return;
  ;;@ functiontype/FunctionImpl.java:20:13
  (if (global.get $f_$initialized__functiontype_FunctionImpl)
   (then
    ;; return;
    ;;@ functiontype/FunctionImpl.java:20:13
    (return )
   )
  )
  ;; (functiontype.FunctionImpl.$initialized = true);
  ;;@ functiontype/FunctionImpl.java:20:13
  (global.set $f_$initialized__functiontype_FunctionImpl (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> FunctionImpl.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@functiontype.FunctionImpl
 (result (ref null $java.lang.Class))
 (block
  ;; if ((functiontype.FunctionImpl.$class == null)) (functiontype.FunctionImpl.$class = java.lang.Class.createForClass(javaemul.internal.StringPool.$getString_|functiontype...|_1(),java.lang.Object.$getClassMetadata()));
  (if (ref.eq (global.get $f_$class__functiontype_FunctionImpl) (ref.null $java.lang.Class))
   (then
    ;; (functiontype.FunctionImpl.$class = java.lang.Class.createForClass(javaemul.internal.StringPool.$getString_|functiontype...|_1(),java.lang.Object.$getClassMetadata()));
    (global.set $f_$class__functiontype_FunctionImpl (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|functiontype...|_1__java_lang_String (ref.func $$getString_|functiontype...|_1__java_lang_String@javaemul.internal.StringPool) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  ;; return functiontype.FunctionImpl.$class;
  (return (global.get $f_$class__functiontype_FunctionImpl))
 )
)

;;; Class<?> FunctionImpl.$getClassImpl()
(func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast_static $functiontype.FunctionImpl (local.get $this.untyped)))
 (block
  ;; return functiontype.FunctionImpl.$getClassMetadata();
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@functiontype.FunctionImpl) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@functiontype.FunctionImpl)

;;; Code for simplebridgemethods.Superclass [vtable]
(global $simplebridgemethods.Superclass.vtable (mut (ref null $simplebridgemethods.Superclass.vtable)) (ref.null $simplebridgemethods.Superclass.vtable))

;;; Code for simplebridgemethods.Subclass [vtable]
(global $simplebridgemethods.Subclass.vtable (mut (ref null $simplebridgemethods.Subclass.vtable)) (ref.null $simplebridgemethods.Subclass.vtable))

;;; Code for simplebridgemethods.AnotherSubclass [vtable]
(global $simplebridgemethods.AnotherSubclass.vtable (mut (ref null $simplebridgemethods.AnotherSubclass.vtable)) (ref.null $simplebridgemethods.AnotherSubclass.vtable))

;;; Code for simplebridgemethods.Task [vtable]
(global $simplebridgemethods.Task.vtable (mut (ref null $simplebridgemethods.Task.vtable)) (ref.null $simplebridgemethods.Task.vtable))

;;; Code for simplebridgemethods.AnotherTask [vtable]
(global $simplebridgemethods.AnotherTask.vtable (mut (ref null $simplebridgemethods.AnotherTask.vtable)) (ref.null $simplebridgemethods.AnotherTask.vtable))

;;; Code for simplebridgemethods.SimpleBridgeMethods [vtable]
(global $simplebridgemethods.SimpleBridgeMethods.vtable (mut (ref null $simplebridgemethods.SimpleBridgeMethods.vtable)) (ref.null $simplebridgemethods.SimpleBridgeMethods.vtable))

;;; Code for simplebridgemethods.Superclass [static fields]
(global $f_$initialized__simplebridgemethods_Superclass (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.Subclass [static fields]
(global $f_$initialized__simplebridgemethods_Subclass (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.AnotherSubclass [static fields]
(global $f_$initialized__simplebridgemethods_AnotherSubclass (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.Callable [static fields]
(global $f_$initialized__simplebridgemethods_Callable (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.Task [static fields]
(global $f_$initialized__simplebridgemethods_Task (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.AnotherTask [static fields]
(global $f_$initialized__simplebridgemethods_AnotherTask (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.SimpleBridgeMethods [static fields]
(global $f_$initialized__simplebridgemethods_SimpleBridgeMethods (mut i32) (i32.const 0))

;;; Code for simplebridgemethods.Superclass [CLASS]
(type $simplebridgemethods.Superclass (struct
 (field $vtable (ref null $simplebridgemethods.Superclass.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.Superclass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m1__java_lang_Error__void (mut (ref $function.$java.lang.Error__$void)))
))

;;; Superclass()
(func $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.Superclass
 (param $this (ref null $simplebridgemethods.Superclass))
 (result (ref null $simplebridgemethods.Superclass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Superclass.m1(T t)
(func $m_m1__java_lang_Error__void@simplebridgemethods.Superclass
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Error))
 (local $this (ref null $simplebridgemethods.Superclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Superclass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_m1__java_lang_Error__void@simplebridgemethods.Superclass)

;;; void Superclass.$clinit()
(func $$clinit__void@simplebridgemethods.Superclass
 (block $return.label
  (block
   ;; if (simplebridgemethods.Superclass.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_Superclass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.Superclass.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_Superclass (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Superclass.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.Superclass
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.Superclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Superclass.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.Superclass();
   (local.set $return.value (call $$getSimplebridgemethods.Superclass__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.Superclass)

;;; Code for simplebridgemethods.Subclass [CLASS]
(type $simplebridgemethods.Subclass (struct
 (field $vtable (ref null $simplebridgemethods.Subclass.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.Subclass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m1__java_lang_Error__void (mut (ref $function.$java.lang.Error__$void)))
 (field $m_m1__java_lang_AssertionError__void (mut (ref $function.$java.lang.AssertionError__$void)))
))

;;; Subclass()
(func $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.Subclass
 (param $this (ref null $simplebridgemethods.Subclass))
 (result (ref null $simplebridgemethods.Subclass))
 (block $return.label
  (block
   ;; Superclass.this.Superclass.<init>();
   (drop (call $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.Superclass (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Subclass.m1(AssertionError a)
(func $m_m1__java_lang_AssertionError__void@simplebridgemethods.Subclass
 (param $this.untyped (ref null $java.lang.Object))
 (param $a (ref null $java.lang.AssertionError))
 (local $this (ref null $simplebridgemethods.Subclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Subclass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_m1__java_lang_AssertionError__void@simplebridgemethods.Subclass)

;;; void Subclass.m1(Error arg0)
(func $m_m1__java_lang_Error__void@simplebridgemethods.Subclass
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Error))
 (local $this (ref null $simplebridgemethods.Subclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Subclass.rtt)))
 (block $return.label
  (block
   ;; Subclass.this.m1(((AssertionError) arg0));
   (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.AssertionError.rtt))(struct.get $simplebridgemethods.Subclass.vtable $m_m1__java_lang_AssertionError__void (struct.get $simplebridgemethods.Subclass $vtable(local.get $this))))
  )
 )
)
(elem declare func $m_m1__java_lang_Error__void@simplebridgemethods.Subclass)

;;; void Subclass.$clinit()
(func $$clinit__void@simplebridgemethods.Subclass
 (block $return.label
  (block
   ;; if (simplebridgemethods.Subclass.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_Subclass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.Subclass.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_Subclass (i32.const 1))
   ;; simplebridgemethods.Superclass.$clinit();
   (call $$clinit__void@simplebridgemethods.Superclass )
  )
 )
)

;;; Class<?> Subclass.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.Subclass
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.Subclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Subclass.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.Subclass();
   (local.set $return.value (call $$getSimplebridgemethods.Subclass__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.Subclass)

;;; Code for simplebridgemethods.AnotherSubclass [CLASS]
(type $simplebridgemethods.AnotherSubclass (struct
 (field $vtable (ref null $simplebridgemethods.AnotherSubclass.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.AnotherSubclass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m1__java_lang_Error__void (mut (ref $function.$java.lang.Error__$void)))
))

;;; AnotherSubclass()
(func $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.AnotherSubclass
 (param $this (ref null $simplebridgemethods.AnotherSubclass))
 (result (ref null $simplebridgemethods.AnotherSubclass))
 (block $return.label
  (block
   ;; Superclass.this.Superclass.<init>();
   (drop (call $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.Superclass (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AnotherSubclass.$clinit()
(func $$clinit__void@simplebridgemethods.AnotherSubclass
 (block $return.label
  (block
   ;; if (simplebridgemethods.AnotherSubclass.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_AnotherSubclass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.AnotherSubclass.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_AnotherSubclass (i32.const 1))
   ;; simplebridgemethods.Superclass.$clinit();
   (call $$clinit__void@simplebridgemethods.Superclass )
  )
 )
)

;;; Class<?> AnotherSubclass.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.AnotherSubclass
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.AnotherSubclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.AnotherSubclass.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.AnotherSubclass();
   (local.set $return.value (call $$getSimplebridgemethods.AnotherSubclass__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.AnotherSubclass)

;;; Code for simplebridgemethods.Callable [INTERFACE]
(type $simplebridgemethods.Callable.vtable (struct
 (field $m_call__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; void Callable.$clinit()
(func $$clinit__void@simplebridgemethods.Callable
 (block $return.label
  (block
   ;; if (simplebridgemethods.Callable.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_Callable)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.Callable.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_Callable (i32.const 1))
  )
 )
)

;;; Class<?> Callable.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.Callable
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.Callable();
   (local.set $return.value (call $$getSimplebridgemethods.Callable__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.Callable)

;;; Code for simplebridgemethods.Task [CLASS]
(type $simplebridgemethods.Task (struct
 (field $vtable (ref null $simplebridgemethods.Task.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.Task.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_call__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; Task()
(func $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.Task
 (param $this (ref null $simplebridgemethods.Task))
 (result (ref null $simplebridgemethods.Task))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Task.call(T t)
(func $m_call__java_lang_Object__void@simplebridgemethods.Task
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (local $this (ref null $simplebridgemethods.Task))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Task.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_call__java_lang_Object__void@simplebridgemethods.Task)

;;; void Task.$clinit()
(func $$clinit__void@simplebridgemethods.Task
 (block $return.label
  (block
   ;; if (simplebridgemethods.Task.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_Task)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.Task.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_Task (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Task.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.Task
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.Task))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.Task.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.Task();
   (local.set $return.value (call $$getSimplebridgemethods.Task__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.Task)

;;; Code for simplebridgemethods.AnotherTask [CLASS]
(type $simplebridgemethods.AnotherTask (struct
 (field $vtable (ref null $simplebridgemethods.AnotherTask.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.AnotherTask.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_call__simplebridgemethods_Superclass__void (mut (ref $function.$simplebridgemethods.Superclass__$void)))
 (field $m_call__java_lang_Object__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; AnotherTask()
(func $m_<init>__void_$pp_simplebridgemethods@simplebridgemethods.AnotherTask
 (param $this (ref null $simplebridgemethods.AnotherTask))
 (result (ref null $simplebridgemethods.AnotherTask))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AnotherTask.call(Superclass<T> t)
(func $m_call__simplebridgemethods_Superclass__void@simplebridgemethods.AnotherTask
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $simplebridgemethods.Superclass))
 (local $this (ref null $simplebridgemethods.AnotherTask))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.AnotherTask.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_call__simplebridgemethods_Superclass__void@simplebridgemethods.AnotherTask)

;;; void AnotherTask.call(Object arg0)
(func $m_call__java_lang_Object__void@simplebridgemethods.AnotherTask
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (local $this (ref null $simplebridgemethods.AnotherTask))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.AnotherTask.rtt)))
 (block $return.label
  (block
   ;; AnotherTask.this.call(((Superclass<T>) arg0));
   (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $simplebridgemethods.Superclass.rtt))(struct.get $simplebridgemethods.AnotherTask.vtable $m_call__simplebridgemethods_Superclass__void (struct.get $simplebridgemethods.AnotherTask $vtable(local.get $this))))
  )
 )
)
(elem declare func $m_call__java_lang_Object__void@simplebridgemethods.AnotherTask)

;;; void AnotherTask.$clinit()
(func $$clinit__void@simplebridgemethods.AnotherTask
 (block $return.label
  (block
   ;; if (simplebridgemethods.AnotherTask.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_AnotherTask)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.AnotherTask.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_AnotherTask (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> AnotherTask.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.AnotherTask
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.AnotherTask))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.AnotherTask.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.AnotherTask();
   (local.set $return.value (call $$getSimplebridgemethods.AnotherTask__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.AnotherTask)

;;; Code for simplebridgemethods.SimpleBridgeMethods [CLASS]
(type $simplebridgemethods.SimpleBridgeMethods (struct
 (field $vtable (ref null $simplebridgemethods.SimpleBridgeMethods.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $simplebridgemethods.SimpleBridgeMethods.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; SimpleBridgeMethods()
(func $m_<init>__void@simplebridgemethods.SimpleBridgeMethods
 (param $this (ref null $simplebridgemethods.SimpleBridgeMethods))
 (result (ref null $simplebridgemethods.SimpleBridgeMethods))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void SimpleBridgeMethods.$clinit()
(func $$clinit__void@simplebridgemethods.SimpleBridgeMethods
 (block $return.label
  (block
   ;; if (simplebridgemethods.SimpleBridgeMethods.$initialized) return;
   (if (global.get $f_$initialized__simplebridgemethods_SimpleBridgeMethods)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (simplebridgemethods.SimpleBridgeMethods.$initialized = true);
   (global.set $f_$initialized__simplebridgemethods_SimpleBridgeMethods (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> SimpleBridgeMethods.getClass()
(func $m_getClass__java_lang_Class@simplebridgemethods.SimpleBridgeMethods
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $simplebridgemethods.SimpleBridgeMethods))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplebridgemethods.SimpleBridgeMethods.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSimplebridgemethods.SimpleBridgeMethods();
   (local.set $return.value (call $$getSimplebridgemethods.SimpleBridgeMethods__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@simplebridgemethods.SimpleBridgeMethods)

 ;;; Code for simplebridgemethods.Superclass [vtable.init]
 (global.set $simplebridgemethods.Superclass.vtable
  (struct.new_with_rtt $simplebridgemethods.Superclass.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.Superclass)
   (ref.func $m_m1__java_lang_Error__void@simplebridgemethods.Superclass)
   (rtt.canon $simplebridgemethods.Superclass.vtable)
  )
 )

 ;;; Code for simplebridgemethods.Superclass [itable.init]
 (global.set $simplebridgemethods.Superclass.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for simplebridgemethods.Subclass [vtable.init]
 (global.set $simplebridgemethods.Subclass.vtable
  (struct.new_with_rtt $simplebridgemethods.Subclass.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.Subclass)
   (ref.func $m_m1__java_lang_Error__void@simplebridgemethods.Subclass)
   (ref.func $m_m1__java_lang_AssertionError__void@simplebridgemethods.Subclass)
   (rtt.canon $simplebridgemethods.Subclass.vtable)
  )
 )

 ;;; Code for simplebridgemethods.Subclass [itable.init]
 (global.set $simplebridgemethods.Subclass.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for simplebridgemethods.AnotherSubclass [vtable.init]
 (global.set $simplebridgemethods.AnotherSubclass.vtable
  (struct.new_with_rtt $simplebridgemethods.AnotherSubclass.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.AnotherSubclass)
   (ref.func $m_m1__java_lang_Error__void@simplebridgemethods.Superclass)
   (rtt.canon $simplebridgemethods.AnotherSubclass.vtable)
  )
 )

 ;;; Code for simplebridgemethods.AnotherSubclass [itable.init]
 (global.set $simplebridgemethods.AnotherSubclass.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for simplebridgemethods.Task [vtable.init]
 (global.set $simplebridgemethods.Task.vtable
  (struct.new_with_rtt $simplebridgemethods.Task.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.Task)
   (ref.func $m_call__java_lang_Object__void@simplebridgemethods.Task)
   (rtt.canon $simplebridgemethods.Task.vtable)
  )
 )

 ;;; Code for simplebridgemethods.Task [itable.init]
 (global.set $simplebridgemethods.Task.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $simplebridgemethods.Task.itable) (i32.const 0)
 (struct.new_with_rtt $simplebridgemethods.Callable.vtable
  (ref.func $m_call__java_lang_Object__void@simplebridgemethods.Task)
  (rtt.canon $simplebridgemethods.Callable.vtable)
 ))

 ;;; Code for simplebridgemethods.AnotherTask [vtable.init]
 (global.set $simplebridgemethods.AnotherTask.vtable
  (struct.new_with_rtt $simplebridgemethods.AnotherTask.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.AnotherTask)
   (ref.func $m_call__simplebridgemethods_Superclass__void@simplebridgemethods.AnotherTask)
   (ref.func $m_call__java_lang_Object__void@simplebridgemethods.AnotherTask)
   (rtt.canon $simplebridgemethods.AnotherTask.vtable)
  )
 )

 ;;; Code for simplebridgemethods.AnotherTask [itable.init]
 (global.set $simplebridgemethods.AnotherTask.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $simplebridgemethods.AnotherTask.itable) (i32.const 0)
 (struct.new_with_rtt $simplebridgemethods.Callable.vtable
  (ref.func $m_call__java_lang_Object__void@simplebridgemethods.AnotherTask)
  (rtt.canon $simplebridgemethods.Callable.vtable)
 ))

 ;;; Code for simplebridgemethods.SimpleBridgeMethods [vtable.init]
 (global.set $simplebridgemethods.SimpleBridgeMethods.vtable
  (struct.new_with_rtt $simplebridgemethods.SimpleBridgeMethods.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplebridgemethods.SimpleBridgeMethods)
   (rtt.canon $simplebridgemethods.SimpleBridgeMethods.vtable)
  )
 )

 ;;; Code for simplebridgemethods.SimpleBridgeMethods [itable.init]
 (global.set $simplebridgemethods.SimpleBridgeMethods.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

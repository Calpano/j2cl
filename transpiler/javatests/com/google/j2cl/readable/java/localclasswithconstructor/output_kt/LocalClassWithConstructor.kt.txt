// Generated from "localclasswithconstructor/LocalClassWithConstructor.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package localclasswithconstructor

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.native.ObjCName

@ObjCName("LocalclasswithconstructorLocalClassWithConstructor", exact = true)
open class LocalClassWithConstructor {
 @ObjCName("test")
 open fun test(
  @ObjCName("withInt") p: Int
 ) {
  val localVar: Int = 1
  open class ___1LocalClass {
   @JvmField
   var field: Int = 0

   constructor(a: Int, b: Int) {
    this.field = localVar + a + b
   }

   constructor(a: Int): this(a, p) {
    this.field = localVar
   }
  }
  ___1LocalClass(1)
 }
}

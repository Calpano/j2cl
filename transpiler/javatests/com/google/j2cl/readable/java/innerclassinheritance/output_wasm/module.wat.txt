;;; Code for innerclassinheritance.ParentOuter [vtable]
(global $innerclassinheritance.ParentOuter.vtable (mut (ref null $innerclassinheritance.ParentOuter.vtable)) (ref.null $innerclassinheritance.ParentOuter.vtable))

;;; Code for innerclassinheritance.ParentInner [vtable]
(global $innerclassinheritance.ParentInner.vtable (mut (ref null $innerclassinheritance.ParentInner.vtable)) (ref.null $innerclassinheritance.ParentInner.vtable))

;;; Code for innerclassinheritance.ChildClass [vtable]
(global $innerclassinheritance.ChildClass.vtable (mut (ref null $innerclassinheritance.ChildClass.vtable)) (ref.null $innerclassinheritance.ChildClass.vtable))

;;; Code for innerclassinheritance.ChildClass.InnerClass [vtable]
(global $innerclassinheritance.ChildClass.InnerClass.vtable (mut (ref null $innerclassinheritance.ChildClass.InnerClass.vtable)) (ref.null $innerclassinheritance.ChildClass.InnerClass.vtable))

;;; Code for innerclassinheritance.ChildClass.1LocalClass [vtable]
(global $innerclassinheritance.ChildClass.1LocalClass.vtable (mut (ref null $innerclassinheritance.ChildClass.1LocalClass.vtable)) (ref.null $innerclassinheritance.ChildClass.1LocalClass.vtable))

;;; Code for innerclassinheritance.MultipleNestings [vtable]
(global $innerclassinheritance.MultipleNestings.vtable (mut (ref null $innerclassinheritance.MultipleNestings.vtable)) (ref.null $innerclassinheritance.MultipleNestings.vtable))

;;; Code for innerclassinheritance.MultipleNestings.Parent [vtable]
(global $innerclassinheritance.MultipleNestings.Parent.vtable (mut (ref null $innerclassinheritance.MultipleNestings.Parent.vtable)) (ref.null $innerclassinheritance.MultipleNestings.Parent.vtable))

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1 [vtable]
(global $innerclassinheritance.MultipleNestings.InnerClass1.vtable (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1.vtable)) (ref.null $innerclassinheritance.MultipleNestings.InnerClass1.vtable))

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 [vtable]
(global $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable)) (ref.null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable))

;;; Code for innerclassinheritance.ParentOuter [static fields]
(global $f_$initialized__innerclassinheritance_ParentOuter (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.ParentInner [static fields]
(global $f_$initialized__innerclassinheritance_ParentInner (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.ChildClass [static fields]
(global $f_$initialized__innerclassinheritance_ChildClass (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.ChildClass.InnerClass [static fields]
(global $f_$initialized__innerclassinheritance_ChildClass_InnerClass (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.ChildClass.1LocalClass [static fields]
(global $f_$initialized__innerclassinheritance_ChildClass_1LocalClass (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.MultipleNestings [static fields]
(global $f_$initialized__innerclassinheritance_MultipleNestings (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.MultipleNestings.Parent [static fields]
(global $f_$initialized__innerclassinheritance_MultipleNestings_Parent (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1 [static fields]
(global $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1 (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 [static fields]
(global $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2 (mut i32) (i32.const 0))

;;; Code for innerclassinheritance.ParentOuter [CLASS]
(type $innerclassinheritance.ParentOuter (struct
 (field $vtable (ref null $innerclassinheritance.ParentOuter.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fieldInParentOuter__innerclassinheritance_ParentOuter (mut i32))
))
(type $innerclassinheritance.ParentOuter.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
))

;;; ParentOuter()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentOuter
 (param $this (ref null $innerclassinheritance.ParentOuter))
 (result (ref null $innerclassinheritance.ParentOuter))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ParentOuter.funInParentOuter()
(func $m_funInParentOuter__void@innerclassinheritance.ParentOuter
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ParentOuter))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ParentOuter.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentOuter__void@innerclassinheritance.ParentOuter)

;;; void ParentOuter.$clinit()
(func $$clinit__void@innerclassinheritance.ParentOuter
 (block $return.label
  (block
   ;; if (innerclassinheritance.ParentOuter.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_ParentOuter)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.ParentOuter.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_ParentOuter (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for innerclassinheritance.ParentInner [CLASS]
(type $innerclassinheritance.ParentInner (struct
 (field $vtable (ref null $innerclassinheritance.ParentInner.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fieldInParentInner__innerclassinheritance_ParentInner (mut i32))
))
(type $innerclassinheritance.ParentInner.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentInner__void (mut (ref $function.__$void)))
))

;;; ParentInner()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentInner
 (param $this (ref null $innerclassinheritance.ParentInner))
 (result (ref null $innerclassinheritance.ParentInner))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ParentInner.funInParentInner()
(func $m_funInParentInner__void@innerclassinheritance.ParentInner
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ParentInner))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ParentInner.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentInner__void@innerclassinheritance.ParentInner)

;;; void ParentInner.$clinit()
(func $$clinit__void@innerclassinheritance.ParentInner
 (block $return.label
  (block
   ;; if (innerclassinheritance.ParentInner.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_ParentInner)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.ParentInner.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_ParentInner (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for innerclassinheritance.ChildClass [CLASS]
(type $innerclassinheritance.ChildClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fieldInParentOuter__innerclassinheritance_ParentOuter (mut i32))
 (field $f_fieldInOuter__innerclassinheritance_ChildClass (mut i32))
))
(type $innerclassinheritance.ChildClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
 (field $m_funInOuter__void (mut (ref $function.__$void)))
 (field $m_testLocalClass__void (mut (ref $function.__$void)))
))

;;; ChildClass()
(func $m_<init>__void@innerclassinheritance.ChildClass
 (param $this (ref null $innerclassinheritance.ChildClass))
 (result (ref null $innerclassinheritance.ChildClass))
 (block $return.label
  (block
   ;; ParentOuter.this.ParentOuter.<init>();
   (drop (call $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentOuter (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ChildClass.funInOuter()
(func $m_funInOuter__void@innerclassinheritance.ChildClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInOuter__void@innerclassinheritance.ChildClass)

;;; void ChildClass.testLocalClass()
(func $m_testLocalClass__void@innerclassinheritance.ChildClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $$qualifier (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local $this (ref null $innerclassinheritance.ChildClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.rtt)))
 (block $return.label
  (block
   (block
    ;; LocalClass $qualifier = new $1LocalClass.<init>(ChildClass.this);
    
    (local.set $$qualifier (call $m_<init>__innerclassinheritance_ChildClass__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.1LocalClass (struct.new_with_rtt $innerclassinheritance.ChildClass.1LocalClass (global.get $innerclassinheritance.ChildClass.1LocalClass.vtable) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null $innerclassinheritance.ChildClass) (ref.null $java.lang.Object) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt))(local.get $this)))
    ;; $qualifier.test();
    (call_ref (local.get $$qualifier)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_test__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $$qualifier))))
   )
  )
 )
)
(elem declare func $m_testLocalClass__void@innerclassinheritance.ChildClass)

;;; void ChildClass.$clinit()
(func $$clinit__void@innerclassinheritance.ChildClass
 (block $return.label
  (block
   ;; if (innerclassinheritance.ChildClass.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_ChildClass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.ChildClass.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_ChildClass (i32.const 1))
   ;; innerclassinheritance.ParentOuter.$clinit();
   (call $$clinit__void@innerclassinheritance.ParentOuter )
  )
 )
)

;;; Code for innerclassinheritance.ChildClass.InnerClass [CLASS]
(type $innerclassinheritance.ChildClass.InnerClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.InnerClass.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fieldInParentInner__innerclassinheritance_ParentInner (mut i32))
 (field $$outer_this__innerclassinheritance_ChildClass_InnerClass (mut (ref null $innerclassinheritance.ChildClass)))
 (field $f_fieldInInner__innerclassinheritance_ChildClass_InnerClass (mut i32))
))
(type $innerclassinheritance.ChildClass.InnerClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentInner__void (mut (ref $function.__$void)))
 (field $m_funInInner__void (mut (ref $function.__$void)))
 (field $m_testInnerClass__int (mut (ref $function.__$int)))
))

;;; InnerClass(ChildClass $outer_this)
(func $m_<init>__innerclassinheritance_ChildClass__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.InnerClass
 (param $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (param $$outer_this (ref null $innerclassinheritance.ChildClass))
 (result (ref null $innerclassinheritance.ChildClass.InnerClass))
 (block $return.label
  (block
   ;; (InnerClass.this.this = $outer_this);
   (struct.set $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this) (local.get $$outer_this))
   ;; ParentInner.this.ParentInner.<init>();
   (drop (call $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentInner (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void InnerClass.funInInner()
(func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.InnerClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass)

;;; int InnerClass.testInnerClass()
(func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $a i32)
 (local $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.InnerClass.rtt)))
 (block $return.label
  (block
   ;; InnerClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this)))))
   ;; InnerClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this)))))
   ;; InnerClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this)))))
   ;; InnerClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this)))))
   ;; InnerClass.this.funInParentInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ParentInner.vtable $m_funInParentInner__void (struct.get $innerclassinheritance.ParentInner $vtable(local.get $this))))
   ;; InnerClass.this.funInParentInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ParentInner.vtable $m_funInParentInner__void (struct.get $innerclassinheritance.ParentInner $vtable(local.get $this))))
   ;; InnerClass.this.funInInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.InnerClass.vtable $m_funInInner__void (struct.get $innerclassinheritance.ChildClass.InnerClass $vtable(local.get $this))))
   ;; InnerClass.this.funInInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.InnerClass.vtable $m_funInInner__void (struct.get $innerclassinheritance.ChildClass.InnerClass $vtable(local.get $this))))
   ;; int a = InnerClass.this.this.fieldInParentOuter;
   
   (local.set $a (struct.get $innerclassinheritance.ParentOuter $f_fieldInParentOuter__innerclassinheritance_ParentOuter(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))))
   ;; (a = InnerClass.this.this.fieldInParentOuter);
   (local.set $a (struct.get $innerclassinheritance.ParentOuter $f_fieldInParentOuter__innerclassinheritance_ParentOuter(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))))
   ;; (a = InnerClass.this.this.fieldInOuter);
   (local.set $a (struct.get $innerclassinheritance.ChildClass $f_fieldInOuter__innerclassinheritance_ChildClass(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))))
   ;; (a = InnerClass.this.this.fieldInOuter);
   (local.set $a (struct.get $innerclassinheritance.ChildClass $f_fieldInOuter__innerclassinheritance_ChildClass(struct.get $innerclassinheritance.ChildClass.InnerClass $$outer_this__innerclassinheritance_ChildClass_InnerClass(local.get $this))))
   ;; (a = InnerClass.this.fieldInParentInner);
   (local.set $a (struct.get $innerclassinheritance.ParentInner $f_fieldInParentInner__innerclassinheritance_ParentInner(local.get $this)))
   ;; (a = InnerClass.this.fieldInParentInner);
   (local.set $a (struct.get $innerclassinheritance.ParentInner $f_fieldInParentInner__innerclassinheritance_ParentInner(local.get $this)))
   ;; (a = InnerClass.this.fieldInInner);
   (local.set $a (struct.get $innerclassinheritance.ChildClass.InnerClass $f_fieldInInner__innerclassinheritance_ChildClass_InnerClass(local.get $this)))
   ;; (a = InnerClass.this.fieldInInner);
   (local.set $a (struct.get $innerclassinheritance.ChildClass.InnerClass $f_fieldInInner__innerclassinheritance_ChildClass_InnerClass(local.get $this)))
   ;; return a;
   (local.set $return.value (local.get $a))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass)

;;; void InnerClass.$clinit()
(func $$clinit__void@innerclassinheritance.ChildClass.InnerClass
 (block $return.label
  (block
   ;; if (innerclassinheritance.ChildClass.InnerClass.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_ChildClass_InnerClass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.ChildClass.InnerClass.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_ChildClass_InnerClass (i32.const 1))
   ;; innerclassinheritance.ParentInner.$clinit();
   (call $$clinit__void@innerclassinheritance.ParentInner )
  )
 )
)

;;; Code for innerclassinheritance.ChildClass.1LocalClass [CLASS]
(type $innerclassinheritance.ChildClass.1LocalClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.1LocalClass.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fieldInParentOuter__innerclassinheritance_ParentOuter (mut i32))
 (field $f_fieldInOuter__innerclassinheritance_ChildClass (mut i32))
 (field $$outer_this__innerclassinheritance_ChildClass_1LocalClass (mut (ref null $innerclassinheritance.ChildClass)))
 (field $f_object__innerclassinheritance_ChildClass_1LocalClass (mut (ref null $java.lang.Object)))
))
(type $innerclassinheritance.ChildClass.1LocalClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
 (field $m_funInOuter__void (mut (ref $function.__$void)))
 (field $m_testLocalClass__void (mut (ref $function.__$void)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; LocalClass(ChildClass $outer_this)
(func $m_<init>__innerclassinheritance_ChildClass__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.1LocalClass
 (param $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (param $$outer_this (ref null $innerclassinheritance.ChildClass))
 (result (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (block $return.label
  (block
   ;; ($1LocalClass.this.this = $outer_this);
   (struct.set $innerclassinheritance.ChildClass.1LocalClass $$outer_this__innerclassinheritance_ChildClass_1LocalClass(local.get $this) (local.get $$outer_this))
   ;; ChildClass.this.ChildClass.<init>();
   (drop (call $m_<init>__void@innerclassinheritance.ChildClass (local.get $this)))
   ;; $1LocalClass.this.$init();
   (call $$init__void_$p_innerclassinheritance_ChildClass_1LocalClass@innerclassinheritance.ChildClass.1LocalClass (local.get $this))
  )
 )
 (local.get $this)
)

;;; void LocalClass.funInParentOuter()
(func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass)

;;; void LocalClass.test()
(func $m_test__void@innerclassinheritance.ChildClass.1LocalClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt)))
 (block $return.label
  (block
   ;; $1LocalClass.this.funInOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(local.get $this))))
   ;; $1LocalClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.1LocalClass $$outer_this__innerclassinheritance_ChildClass_1LocalClass(local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.1LocalClass $$outer_this__innerclassinheritance_ChildClass_1LocalClass(local.get $this)))))
   ;; $1LocalClass.this.funInParentOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $this))))
   ;; $1LocalClass.this.funInParentOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $this))))
   ;; $1LocalClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.1LocalClass $$outer_this__innerclassinheritance_ChildClass_1LocalClass(local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.1LocalClass $$outer_this__innerclassinheritance_ChildClass_1LocalClass(local.get $this)))))
  )
 )
)
(elem declare func $m_test__void@innerclassinheritance.ChildClass.1LocalClass)

;;; void LocalClass.$init()
(func $$init__void_$p_innerclassinheritance_ChildClass_1LocalClass@innerclassinheritance.ChildClass.1LocalClass
 (param $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (block $return.label
  (block
   ;; ($1LocalClass.this.object = $1LocalClass.this);
   (struct.set $innerclassinheritance.ChildClass.1LocalClass $f_object__innerclassinheritance_ChildClass_1LocalClass(local.get $this) (local.get $this))
  )
 )
)

;;; void LocalClass.$clinit()
(func $$clinit__void@innerclassinheritance.ChildClass.1LocalClass
 (block $return.label
  (block
   ;; if (innerclassinheritance.ChildClass.1LocalClass.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_ChildClass_1LocalClass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.ChildClass.1LocalClass.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_ChildClass_1LocalClass (i32.const 1))
   ;; innerclassinheritance.ChildClass.$clinit();
   (call $$clinit__void@innerclassinheritance.ChildClass )
  )
 )
)

;;; Code for innerclassinheritance.MultipleNestings [CLASS]
(type $innerclassinheritance.MultipleNestings (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $innerclassinheritance.MultipleNestings.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInM__void (mut (ref $function.__$void)))
))

;;; MultipleNestings()
(func $m_<init>__void@innerclassinheritance.MultipleNestings
 (param $this (ref null $innerclassinheritance.MultipleNestings))
 (result (ref null $innerclassinheritance.MultipleNestings))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void MultipleNestings.funInM()
(func $m_funInM__void@innerclassinheritance.MultipleNestings
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInM__void@innerclassinheritance.MultipleNestings)

;;; void MultipleNestings.$clinit()
(func $$clinit__void@innerclassinheritance.MultipleNestings
 (block $return.label
  (block
   ;; if (innerclassinheritance.MultipleNestings.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_MultipleNestings)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.MultipleNestings.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_MultipleNestings (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for innerclassinheritance.MultipleNestings.Parent [CLASS]
(type $innerclassinheritance.MultipleNestings.Parent (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.Parent.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__innerclassinheritance_MultipleNestings_Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
))
(type $innerclassinheritance.MultipleNestings.Parent.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
))

;;; Parent(MultipleNestings $outer_this)
(func $m_<init>__innerclassinheritance_MultipleNestings__void@innerclassinheritance.MultipleNestings.Parent
 (param $this (ref null $innerclassinheritance.MultipleNestings.Parent))
 (param $$outer_this (ref null $innerclassinheritance.MultipleNestings))
 (result (ref null $innerclassinheritance.MultipleNestings.Parent))
 (block $return.label
  (block
   ;; (Parent.this.this = $outer_this);
   (struct.set $innerclassinheritance.MultipleNestings.Parent $$outer_this__innerclassinheritance_MultipleNestings_Parent(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Parent.fun()
(func $m_fun__void@innerclassinheritance.MultipleNestings.Parent
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.Parent.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_fun__void@innerclassinheritance.MultipleNestings.Parent)

;;; void Parent.$clinit()
(func $$clinit__void@innerclassinheritance.MultipleNestings.Parent
 (block $return.label
  (block
   ;; if (innerclassinheritance.MultipleNestings.Parent.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_MultipleNestings_Parent)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.MultipleNestings.Parent.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_MultipleNestings_Parent (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1 [CLASS]
(type $innerclassinheritance.MultipleNestings.InnerClass1 (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.InnerClass1.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__innerclassinheritance_MultipleNestings_Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
 (field $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1 (mut (ref null $innerclassinheritance.MultipleNestings)))
))
(type $innerclassinheritance.MultipleNestings.InnerClass1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
 (field $m_funInI1__void (mut (ref $function.__$void)))
))

;;; InnerClass1(MultipleNestings $outer_this)
(func $m_<init>__innerclassinheritance_MultipleNestings__void@innerclassinheritance.MultipleNestings.InnerClass1
 (param $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (param $$outer_this (ref null $innerclassinheritance.MultipleNestings))
 (result (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (block $return.label
  (block
   ;; (InnerClass1.this.this = $outer_this);
   (struct.set $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(local.get $this) (local.get $$outer_this))
   ;; Parent.this.Parent.<init>($outer_this);
   (drop (call $m_<init>__innerclassinheritance_MultipleNestings__void@innerclassinheritance.MultipleNestings.Parent (local.get $this)(local.get $$outer_this)))
  )
 )
 (local.get $this)
)

;;; void InnerClass1.funInI1()
(func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1)

;;; void InnerClass1.$clinit()
(func $$clinit__void@innerclassinheritance.MultipleNestings.InnerClass1
 (block $return.label
  (block
   ;; if (innerclassinheritance.MultipleNestings.InnerClass1.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.MultipleNestings.InnerClass1.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1 (i32.const 1))
   ;; innerclassinheritance.MultipleNestings.Parent.$clinit();
   (call $$clinit__void@innerclassinheritance.MultipleNestings.Parent )
  )
 )
)

;;; Code for innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 [CLASS]
(type $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__innerclassinheritance_MultipleNestings_Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
 (field $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2 (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1)))
))
(type $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
 (field $m_funInI2__void (mut (ref $function.__$void)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; InnerClass2(InnerClass1 $outer_this)
(func $m_<init>__innerclassinheritance_MultipleNestings_InnerClass1__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (param $$outer_this (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (result (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (block $return.label
  (block
   ;; (InnerClass2.this.this = $outer_this);
   (struct.set $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this) (local.get $$outer_this))
   ;; Parent.this.Parent.<init>($outer_this.this);
   (drop (call $m_<init>__innerclassinheritance_MultipleNestings__void@innerclassinheritance.MultipleNestings.Parent (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(local.get $$outer_this))))
  )
 )
 (local.get $this)
)

;;; void InnerClass2.funInI2()
(func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2)

;;; void InnerClass2.test()
(func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.rtt)))
 (block $return.label
  (block
   ;; InnerClass2.this.fun();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(local.get $this))))
   ;; InnerClass2.this.fun();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(local.get $this))))
   ;; InnerClass2.this.this.fun();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this))(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this)))))
   ;; InnerClass2.this.this.this.funInM();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this)))(struct.get $innerclassinheritance.MultipleNestings.vtable $m_funInM__void (struct.get $innerclassinheritance.MultipleNestings $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this))))))
   ;; InnerClass2.this.this.this.funInM();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this)))(struct.get $innerclassinheritance.MultipleNestings.vtable $m_funInM__void (struct.get $innerclassinheritance.MultipleNestings $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this))))))
   ;; InnerClass2.this.this.funInI1();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this))(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.vtable $m_funInI1__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this)))))
   ;; InnerClass2.this.this.funInI1();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this))(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.vtable $m_funInI1__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $$outer_this__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2(local.get $this)))))
   ;; InnerClass2.this.funInI2();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable $m_funInI2__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $vtable(local.get $this))))
  )
 )
)
(elem declare func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2)

;;; void InnerClass2.$clinit()
(func $$clinit__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (block $return.label
  (block
   ;; if (innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.$initialized) return;
   (if (global.get $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.$initialized = true);
   (global.set $f_$initialized__innerclassinheritance_MultipleNestings_InnerClass1_InnerClass2 (i32.const 1))
   ;; innerclassinheritance.MultipleNestings.Parent.$clinit();
   (call $$clinit__void@innerclassinheritance.MultipleNestings.Parent )
  )
 )
)

 ;;; Code for innerclassinheritance.ParentOuter [vtable.init]
 (global.set $innerclassinheritance.ParentOuter.vtable (struct.new_with_rtt $innerclassinheritance.ParentOuter.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ParentOuter) (rtt.canon $innerclassinheritance.ParentOuter.vtable)))

 ;;; Code for innerclassinheritance.ParentInner [vtable.init]
 (global.set $innerclassinheritance.ParentInner.vtable (struct.new_with_rtt $innerclassinheritance.ParentInner.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentInner__void@innerclassinheritance.ParentInner) (rtt.canon $innerclassinheritance.ParentInner.vtable)))

 ;;; Code for innerclassinheritance.ChildClass [vtable.init]
 (global.set $innerclassinheritance.ChildClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ParentOuter) (ref.func $m_funInOuter__void@innerclassinheritance.ChildClass) (ref.func $m_testLocalClass__void@innerclassinheritance.ChildClass) (rtt.canon $innerclassinheritance.ChildClass.vtable)))

 ;;; Code for innerclassinheritance.ChildClass.InnerClass [vtable.init]
 (global.set $innerclassinheritance.ChildClass.InnerClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.InnerClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentInner__void@innerclassinheritance.ParentInner) (ref.func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass) (ref.func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass) (rtt.canon $innerclassinheritance.ChildClass.InnerClass.vtable)))

 ;;; Code for innerclassinheritance.ChildClass.1LocalClass [vtable.init]
 (global.set $innerclassinheritance.ChildClass.1LocalClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.1LocalClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass) (ref.func $m_funInOuter__void@innerclassinheritance.ChildClass) (ref.func $m_testLocalClass__void@innerclassinheritance.ChildClass) (ref.func $m_test__void@innerclassinheritance.ChildClass.1LocalClass) (rtt.canon $innerclassinheritance.ChildClass.1LocalClass.vtable)))

 ;;; Code for innerclassinheritance.MultipleNestings [vtable.init]
 (global.set $innerclassinheritance.MultipleNestings.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInM__void@innerclassinheritance.MultipleNestings) (rtt.canon $innerclassinheritance.MultipleNestings.vtable)))

 ;;; Code for innerclassinheritance.MultipleNestings.Parent [vtable.init]
 (global.set $innerclassinheritance.MultipleNestings.Parent.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.Parent.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (rtt.canon $innerclassinheritance.MultipleNestings.Parent.vtable)))

 ;;; Code for innerclassinheritance.MultipleNestings.InnerClass1 [vtable.init]
 (global.set $innerclassinheritance.MultipleNestings.InnerClass1.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.InnerClass1.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (ref.func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1) (rtt.canon $innerclassinheritance.MultipleNestings.InnerClass1.vtable)))

 ;;; Code for innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 [vtable.init]
 (global.set $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (ref.func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2) (ref.func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2) (rtt.canon $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable)))

;;; Code for innerclassinheritance.ChildClass

;;; CLASS  ParentOuter
(type $innerclassinheritance.ParentOuter (struct
 (field $vtable (ref null $innerclassinheritance.ParentOuter.vtable))
 (field $fieldInParentOuter@innerclassinheritance.ParentOuter (mut i32))
))
(type $innerclassinheritance.ParentOuter.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.ParentOuter.vtable (mut (ref null $innerclassinheritance.ParentOuter.vtable)) (ref.null $innerclassinheritance.ParentOuter.vtable))

;;; ParentOuter()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentOuter
 (param $this (ref null $innerclassinheritance.ParentOuter))
 (result (ref null $innerclassinheritance.ParentOuter))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ParentOuter.funInParentOuter()
(func $m_funInParentOuter__void@innerclassinheritance.ParentOuter
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ParentOuter))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ParentOuter (local.get $this.untyped) (global.get $innerclassinheritance.ParentOuter.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentOuter__void@innerclassinheritance.ParentOuter)

;;; CLASS  ParentInner
(type $innerclassinheritance.ParentInner (struct
 (field $vtable (ref null $innerclassinheritance.ParentInner.vtable))
 (field $fieldInParentInner@innerclassinheritance.ParentInner (mut i32))
))
(type $innerclassinheritance.ParentInner.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentInner__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.ParentInner.vtable (mut (ref null $innerclassinheritance.ParentInner.vtable)) (ref.null $innerclassinheritance.ParentInner.vtable))

;;; ParentInner()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ParentInner
 (param $this (ref null $innerclassinheritance.ParentInner))
 (result (ref null $innerclassinheritance.ParentInner))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ParentInner.funInParentInner()
(func $m_funInParentInner__void@innerclassinheritance.ParentInner
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ParentInner))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ParentInner (local.get $this.untyped) (global.get $innerclassinheritance.ParentInner.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentInner__void@innerclassinheritance.ParentInner)

;;; CLASS  ChildClass
(type $innerclassinheritance.ChildClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.vtable))
 (field $fieldInParentOuter@innerclassinheritance.ParentOuter (mut i32))
 (field $fieldInOuter@innerclassinheritance.ChildClass (mut i32))
))
(type $innerclassinheritance.ChildClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
 (field $m_funInOuter__void (mut (ref $function.__$void)))
 (field $m_testLocalClass__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.ChildClass.vtable (mut (ref null $innerclassinheritance.ChildClass.vtable)) (ref.null $innerclassinheritance.ChildClass.vtable))

;;; ChildClass()
(func $m_<init>__void@innerclassinheritance.ChildClass
 (param $this (ref null $innerclassinheritance.ChildClass))
 (result (ref null $innerclassinheritance.ChildClass))
 (block $return.label
  (block
   ;; ParentOuter.this.ParentOuter.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ChildClass.funInOuter()
(func $m_funInOuter__void@innerclassinheritance.ChildClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInOuter__void@innerclassinheritance.ChildClass)

;;; void ChildClass.testLocalClass()
(func $m_testLocalClass__void@innerclassinheritance.ChildClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $$qualifier (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local $this (ref null $innerclassinheritance.ChildClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.rtt)))
 (block $return.label
  (block
   (block
    ;; LocalClass $qualifier = ChildClass.this.new $1LocalClass.<init>();
    
    (local.set $$qualifier (call $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.1LocalClass (struct.new_with_rtt $innerclassinheritance.ChildClass.1LocalClass (global.get $innerclassinheritance.ChildClass.1LocalClass.vtable) (i32.const 0) (i32.const 0) (ref.null $innerclassinheritance.ChildClass) (ref.null $java.lang.Object) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt))))
    ;; $qualifier.test();
    (call_ref (local.get $$qualifier)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_test__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $$qualifier))))
   )
  )
 )
)
(elem declare func $m_testLocalClass__void@innerclassinheritance.ChildClass)

;;; CLASS  InnerClass
(type $innerclassinheritance.ChildClass.InnerClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.InnerClass.vtable))
 (field $fieldInParentInner@innerclassinheritance.ParentInner (mut i32))
 (field $this@innerclassinheritance.ChildClass.InnerClass (mut (ref null $innerclassinheritance.ChildClass)))
 (field $fieldInInner@innerclassinheritance.ChildClass.InnerClass (mut i32))
))
(type $innerclassinheritance.ChildClass.InnerClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentInner__void (mut (ref $function.__$void)))
 (field $m_funInInner__void (mut (ref $function.__$void)))
 (field $m_testInnerClass__int (mut (ref $function.__$int)))
))
(global $innerclassinheritance.ChildClass.InnerClass.vtable (mut (ref null $innerclassinheritance.ChildClass.InnerClass.vtable)) (ref.null $innerclassinheritance.ChildClass.InnerClass.vtable))

;;; InnerClass()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.InnerClass
 (param $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (result (ref null $innerclassinheritance.ChildClass.InnerClass))
 (block $return.label
  (block
   ;; ParentInner.this.ParentInner.<init>();
   
  )
 )
 (local.get $this)
)

;;; void InnerClass.funInInner()
(func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass.InnerClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.InnerClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass)

;;; int InnerClass.testInnerClass()
(func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $a i32)
 (local $this (ref null $innerclassinheritance.ChildClass.InnerClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass.InnerClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.InnerClass.rtt)))
 (block $return.label
  (block
   ;; InnerClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))))
   ;; InnerClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))))
   ;; InnerClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))))
   ;; InnerClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))))
   ;; InnerClass.this.funInParentInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ParentInner.vtable $m_funInParentInner__void (struct.get $innerclassinheritance.ParentInner $vtable(local.get $this))))
   ;; InnerClass.this.funInParentInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ParentInner.vtable $m_funInParentInner__void (struct.get $innerclassinheritance.ParentInner $vtable(local.get $this))))
   ;; InnerClass.this.funInInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.InnerClass.vtable $m_funInInner__void (struct.get $innerclassinheritance.ChildClass.InnerClass $vtable(local.get $this))))
   ;; InnerClass.this.funInInner();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.InnerClass.vtable $m_funInInner__void (struct.get $innerclassinheritance.ChildClass.InnerClass $vtable(local.get $this))))
   ;; int a = InnerClass.this.this.fieldInParentOuter;
   
   (local.set $a (struct.get $innerclassinheritance.ParentOuter $fieldInParentOuter@innerclassinheritance.ParentOuter  (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))))
   ;; (a = InnerClass.this.this.fieldInParentOuter);
   (local.set $a (struct.get $innerclassinheritance.ParentOuter $fieldInParentOuter@innerclassinheritance.ParentOuter  (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))))
   ;; (a = InnerClass.this.this.fieldInOuter);
   (local.set $a (struct.get $innerclassinheritance.ChildClass $fieldInOuter@innerclassinheritance.ChildClass  (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))))
   ;; (a = InnerClass.this.this.fieldInOuter);
   (local.set $a (struct.get $innerclassinheritance.ChildClass $fieldInOuter@innerclassinheritance.ChildClass  (struct.get $innerclassinheritance.ChildClass.InnerClass $this@innerclassinheritance.ChildClass.InnerClass  (local.get $this))))
   ;; (a = InnerClass.this.fieldInParentInner);
   (local.set $a (struct.get $innerclassinheritance.ParentInner $fieldInParentInner@innerclassinheritance.ParentInner  (local.get $this)))
   ;; (a = InnerClass.this.fieldInParentInner);
   (local.set $a (struct.get $innerclassinheritance.ParentInner $fieldInParentInner@innerclassinheritance.ParentInner  (local.get $this)))
   ;; (a = InnerClass.this.fieldInInner);
   (local.set $a (struct.get $innerclassinheritance.ChildClass.InnerClass $fieldInInner@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))
   ;; (a = InnerClass.this.fieldInInner);
   (local.set $a (struct.get $innerclassinheritance.ChildClass.InnerClass $fieldInInner@innerclassinheritance.ChildClass.InnerClass  (local.get $this)))
   ;; return a;
   (local.set $return.value (local.get $a))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass)

;;; CLASS  LocalClass
(type $innerclassinheritance.ChildClass.1LocalClass (struct
 (field $vtable (ref null $innerclassinheritance.ChildClass.1LocalClass.vtable))
 (field $fieldInParentOuter@innerclassinheritance.ParentOuter (mut i32))
 (field $fieldInOuter@innerclassinheritance.ChildClass (mut i32))
 (field $this@innerclassinheritance.ChildClass.1LocalClass (mut (ref null $innerclassinheritance.ChildClass)))
 (field $object@innerclassinheritance.ChildClass.1LocalClass (mut (ref null $java.lang.Object)))
))
(type $innerclassinheritance.ChildClass.1LocalClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInParentOuter__void (mut (ref $function.__$void)))
 (field $m_funInOuter__void (mut (ref $function.__$void)))
 (field $m_testLocalClass__void (mut (ref $function.__$void)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.ChildClass.1LocalClass.vtable (mut (ref null $innerclassinheritance.ChildClass.1LocalClass.vtable)) (ref.null $innerclassinheritance.ChildClass.1LocalClass.vtable))

;;; LocalClass()
(func $m_<init>__void_$pp_innerclassinheritance@innerclassinheritance.ChildClass.1LocalClass
 (param $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (result (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (block $return.label
  (block
   ;; ChildClass.this.ChildClass.<init>();
   
  )
 )
 (local.get $this)
)

;;; void LocalClass.funInParentOuter()
(func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass.1LocalClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass)

;;; void LocalClass.test()
(func $m_test__void@innerclassinheritance.ChildClass.1LocalClass
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.ChildClass.1LocalClass))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.ChildClass.1LocalClass (local.get $this.untyped) (global.get $innerclassinheritance.ChildClass.1LocalClass.rtt)))
 (block $return.label
  (block
   ;; $1LocalClass.this.funInOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(local.get $this))))
   ;; $1LocalClass.this.this.funInOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.1LocalClass $this@innerclassinheritance.ChildClass.1LocalClass  (local.get $this))(struct.get $innerclassinheritance.ChildClass.vtable $m_funInOuter__void (struct.get $innerclassinheritance.ChildClass $vtable(struct.get $innerclassinheritance.ChildClass.1LocalClass $this@innerclassinheritance.ChildClass.1LocalClass  (local.get $this)))))
   ;; $1LocalClass.this.funInParentOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $this))))
   ;; $1LocalClass.this.funInParentOuter();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.ChildClass.1LocalClass.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ChildClass.1LocalClass $vtable(local.get $this))))
   ;; $1LocalClass.this.this.funInParentOuter();
   (call_ref (struct.get $innerclassinheritance.ChildClass.1LocalClass $this@innerclassinheritance.ChildClass.1LocalClass  (local.get $this))(struct.get $innerclassinheritance.ParentOuter.vtable $m_funInParentOuter__void (struct.get $innerclassinheritance.ParentOuter $vtable(struct.get $innerclassinheritance.ChildClass.1LocalClass $this@innerclassinheritance.ChildClass.1LocalClass  (local.get $this)))))
  )
 )
)
(elem declare func $m_test__void@innerclassinheritance.ChildClass.1LocalClass)
;;; Code for innerclassinheritance.MultipleNestings

;;; CLASS  MultipleNestings
(type $innerclassinheritance.MultipleNestings (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.vtable))
))
(type $innerclassinheritance.MultipleNestings.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_funInM__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.MultipleNestings.vtable (mut (ref null $innerclassinheritance.MultipleNestings.vtable)) (ref.null $innerclassinheritance.MultipleNestings.vtable))

;;; MultipleNestings()
(func $m_<init>__void@innerclassinheritance.MultipleNestings
 (param $this (ref null $innerclassinheritance.MultipleNestings))
 (result (ref null $innerclassinheritance.MultipleNestings))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void MultipleNestings.funInM()
(func $m_funInM__void@innerclassinheritance.MultipleNestings
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.MultipleNestings (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInM__void@innerclassinheritance.MultipleNestings)

;;; CLASS  Parent
(type $innerclassinheritance.MultipleNestings.Parent (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.Parent.vtable))
 (field $this@innerclassinheritance.MultipleNestings.Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
))
(type $innerclassinheritance.MultipleNestings.Parent.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.MultipleNestings.Parent.vtable (mut (ref null $innerclassinheritance.MultipleNestings.Parent.vtable)) (ref.null $innerclassinheritance.MultipleNestings.Parent.vtable))

;;; Parent()
(func $m_<init>__void@innerclassinheritance.MultipleNestings.Parent
 (param $this (ref null $innerclassinheritance.MultipleNestings.Parent))
 (result (ref null $innerclassinheritance.MultipleNestings.Parent))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Parent.fun()
(func $m_fun__void@innerclassinheritance.MultipleNestings.Parent
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.Parent))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.MultipleNestings.Parent (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.Parent.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_fun__void@innerclassinheritance.MultipleNestings.Parent)

;;; CLASS  InnerClass1
(type $innerclassinheritance.MultipleNestings.InnerClass1 (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.InnerClass1.vtable))
 (field $this@innerclassinheritance.MultipleNestings.Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
 (field $this@innerclassinheritance.MultipleNestings.InnerClass1 (mut (ref null $innerclassinheritance.MultipleNestings)))
))
(type $innerclassinheritance.MultipleNestings.InnerClass1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
 (field $m_funInI1__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.MultipleNestings.InnerClass1.vtable (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1.vtable)) (ref.null $innerclassinheritance.MultipleNestings.InnerClass1.vtable))

;;; InnerClass1()
(func $m_<init>__void@innerclassinheritance.MultipleNestings.InnerClass1
 (param $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (result (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (block $return.label
  (block
   ;; Parent.this.Parent.<init>();
   
  )
 )
 (local.get $this)
)

;;; void InnerClass1.funInI1()
(func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.MultipleNestings.InnerClass1 (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1)

;;; CLASS  InnerClass2
(type $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 (struct
 (field $vtable (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable))
 (field $this@innerclassinheritance.MultipleNestings.Parent (mut (ref null $innerclassinheritance.MultipleNestings)))
 (field $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1)))
))
(type $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_fun__void (mut (ref $function.__$void)))
 (field $m_funInI2__void (mut (ref $function.__$void)))
 (field $m_test__void (mut (ref $function.__$void)))
))
(global $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (mut (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable)) (ref.null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable))

;;; InnerClass2()
(func $m_<init>__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (result (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (block $return.label
  (block
   ;; Parent.this.Parent.<init>();
   
  )
 )
 (local.get $this)
)

;;; void InnerClass2.funInI2()
(func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2)

;;; void InnerClass2.test()
(func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2))
 (local.set $this (ref.cast $java.lang.Object $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 (local.get $this.untyped) (global.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.rtt)))
 (block $return.label
  (block
   ;; InnerClass2.this.fun();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(local.get $this))))
   ;; InnerClass2.this.fun();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(local.get $this))))
   ;; InnerClass2.this.this.fun();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this))(struct.get $innerclassinheritance.MultipleNestings.Parent.vtable $m_fun__void (struct.get $innerclassinheritance.MultipleNestings.Parent $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this)))))
   ;; InnerClass2.this.this.this.funInM();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $this@innerclassinheritance.MultipleNestings.InnerClass1  (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this)))(struct.get $innerclassinheritance.MultipleNestings.vtable $m_funInM__void (struct.get $innerclassinheritance.MultipleNestings $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $this@innerclassinheritance.MultipleNestings.InnerClass1  (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this))))))
   ;; InnerClass2.this.this.this.funInM();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $this@innerclassinheritance.MultipleNestings.InnerClass1  (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this)))(struct.get $innerclassinheritance.MultipleNestings.vtable $m_funInM__void (struct.get $innerclassinheritance.MultipleNestings $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $this@innerclassinheritance.MultipleNestings.InnerClass1  (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this))))))
   ;; InnerClass2.this.this.funInI1();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this))(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.vtable $m_funInI1__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this)))))
   ;; InnerClass2.this.this.funInI1();
   (call_ref (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this))(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.vtable $m_funInI1__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1 $vtable(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $this@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2  (local.get $this)))))
   ;; InnerClass2.this.funInI2();
   (call_ref (local.get $this)(struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable $m_funInI2__void (struct.get $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 $vtable(local.get $this))))
  )
 )
)
(elem declare func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2)

;;; Code for innerclassinheritance.ParentOuter [vtable]
 (global.set $innerclassinheritance.ParentOuter.vtable (struct.new_with_rtt $innerclassinheritance.ParentOuter.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ParentOuter) (rtt.canon $innerclassinheritance.ParentOuter.vtable)))
;;; Code for innerclassinheritance.ParentInner [vtable]
 (global.set $innerclassinheritance.ParentInner.vtable (struct.new_with_rtt $innerclassinheritance.ParentInner.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentInner__void@innerclassinheritance.ParentInner) (rtt.canon $innerclassinheritance.ParentInner.vtable)))
;;; Code for innerclassinheritance.ChildClass [vtable]
 (global.set $innerclassinheritance.ChildClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ParentOuter) (ref.func $m_funInOuter__void@innerclassinheritance.ChildClass) (ref.func $m_testLocalClass__void@innerclassinheritance.ChildClass) (rtt.canon $innerclassinheritance.ChildClass.vtable)))
;;; Code for innerclassinheritance.ChildClass.InnerClass [vtable]
 (global.set $innerclassinheritance.ChildClass.InnerClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.InnerClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentInner__void@innerclassinheritance.ParentInner) (ref.func $m_funInInner__void@innerclassinheritance.ChildClass.InnerClass) (ref.func $m_testInnerClass__int@innerclassinheritance.ChildClass.InnerClass) (rtt.canon $innerclassinheritance.ChildClass.InnerClass.vtable)))
;;; Code for innerclassinheritance.ChildClass.1LocalClass [vtable]
 (global.set $innerclassinheritance.ChildClass.1LocalClass.vtable (struct.new_with_rtt $innerclassinheritance.ChildClass.1LocalClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInParentOuter__void@innerclassinheritance.ChildClass.1LocalClass) (ref.func $m_funInOuter__void@innerclassinheritance.ChildClass) (ref.func $m_testLocalClass__void@innerclassinheritance.ChildClass) (ref.func $m_test__void@innerclassinheritance.ChildClass.1LocalClass) (rtt.canon $innerclassinheritance.ChildClass.1LocalClass.vtable)))
;;; Code for innerclassinheritance.MultipleNestings [vtable]
 (global.set $innerclassinheritance.MultipleNestings.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_funInM__void@innerclassinheritance.MultipleNestings) (rtt.canon $innerclassinheritance.MultipleNestings.vtable)))
;;; Code for innerclassinheritance.MultipleNestings.Parent [vtable]
 (global.set $innerclassinheritance.MultipleNestings.Parent.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.Parent.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (rtt.canon $innerclassinheritance.MultipleNestings.Parent.vtable)))
;;; Code for innerclassinheritance.MultipleNestings.InnerClass1 [vtable]
 (global.set $innerclassinheritance.MultipleNestings.InnerClass1.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.InnerClass1.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (ref.func $m_funInI1__void@innerclassinheritance.MultipleNestings.InnerClass1) (rtt.canon $innerclassinheritance.MultipleNestings.InnerClass1.vtable)))
;;; Code for innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2 [vtable]
 (global.set $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable (struct.new_with_rtt $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_fun__void@innerclassinheritance.MultipleNestings.Parent) (ref.func $m_funInI2__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2) (ref.func $m_test__void@innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2) (rtt.canon $innerclassinheritance.MultipleNestings.InnerClass1.InnerClass2.vtable)))
))
(start $.runtime.init)


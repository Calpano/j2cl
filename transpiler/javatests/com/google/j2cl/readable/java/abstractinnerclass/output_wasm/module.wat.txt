;;; Code for abstractinnerclass.InnerClasses [vtable]
(global $abstractinnerclass.InnerClasses.vtable (mut (ref null $abstractinnerclass.InnerClasses.vtable)) (ref.null $abstractinnerclass.InnerClasses.vtable))

;;; Code for abstractinnerclass.InnerClasses.B [vtable]
(global $abstractinnerclass.InnerClasses.B.vtable (mut (ref null $abstractinnerclass.InnerClasses.B.vtable)) (ref.null $abstractinnerclass.InnerClasses.B.vtable))

;;; Code for abstractinnerclass.InnerClasses.C [vtable]
(global $abstractinnerclass.InnerClasses.C.vtable (mut (ref null $abstractinnerclass.InnerClasses.C.vtable)) (ref.null $abstractinnerclass.InnerClasses.C.vtable))

;;; Code for abstractinnerclass.InnerClasses [static fields]
(global $f_$initialized__abstractinnerclass_InnerClasses (mut i32) (i32.const 0))

;;; Code for abstractinnerclass.InnerClasses.A [static fields]
(global $f_$initialized__abstractinnerclass_InnerClasses_A (mut i32) (i32.const 0))

;;; Code for abstractinnerclass.InnerClasses.B [static fields]
(global $f_$initialized__abstractinnerclass_InnerClasses_B (mut i32) (i32.const 0))

;;; Code for abstractinnerclass.InnerClasses.C [static fields]
(global $f_$initialized__abstractinnerclass_InnerClasses_C (mut i32) (i32.const 0))

;;; Code for abstractinnerclass.InnerClasses [CLASS]
(type $abstractinnerclass.InnerClasses (struct
 (field $vtable (ref null $abstractinnerclass.InnerClasses.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $abstractinnerclass.InnerClasses.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; InnerClasses()
(func $m_<init>__void@abstractinnerclass.InnerClasses
 (param $this (ref null $abstractinnerclass.InnerClasses))
 (result (ref null $abstractinnerclass.InnerClasses))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void InnerClasses.$clinit()
(func $$clinit__void@abstractinnerclass.InnerClasses
 (block $return.label
  (block
   ;; if (abstractinnerclass.InnerClasses.$initialized) return;
   (if (global.get $f_$initialized__abstractinnerclass_InnerClasses)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (abstractinnerclass.InnerClasses.$initialized = true);
   (global.set $f_$initialized__abstractinnerclass_InnerClasses (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for abstractinnerclass.InnerClasses.A [INTERFACE]

;;; void A.$clinit()
(func $$clinit__void@abstractinnerclass.InnerClasses.A
 (block $return.label
  (block
   ;; if (abstractinnerclass.InnerClasses.A.$initialized) return;
   (if (global.get $f_$initialized__abstractinnerclass_InnerClasses_A)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (abstractinnerclass.InnerClasses.A.$initialized = true);
   (global.set $f_$initialized__abstractinnerclass_InnerClasses_A (i32.const 1))
  )
 )
)

;;; Code for abstractinnerclass.InnerClasses.B [CLASS]
(type $abstractinnerclass.InnerClasses.B (struct
 (field $vtable (ref null $abstractinnerclass.InnerClasses.B.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $abstractinnerclass.InnerClasses.B.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_bar__void_$pp_abstractinnerclass (mut (ref $function.__$void)))
))

;;; B()
(func $m_<init>__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.B
 (param $this (ref null $abstractinnerclass.InnerClasses.B))
 (result (ref null $abstractinnerclass.InnerClasses.B))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void B.bar()
(func $m_bar__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.B
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $abstractinnerclass.InnerClasses.B))
 (local.set $this (ref.cast $java.lang.Object $abstractinnerclass.InnerClasses.B (local.get $this.untyped) (global.get $abstractinnerclass.InnerClasses.B.rtt)))
 (block $return.label
  (block
   ;; B.this.foo();
   
  )
 )
)
(elem declare func $m_bar__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.B)

;;; void B.$clinit()
(func $$clinit__void@abstractinnerclass.InnerClasses.B
 (block $return.label
  (block
   ;; if (abstractinnerclass.InnerClasses.B.$initialized) return;
   (if (global.get $f_$initialized__abstractinnerclass_InnerClasses_B)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (abstractinnerclass.InnerClasses.B.$initialized = true);
   (global.set $f_$initialized__abstractinnerclass_InnerClasses_B (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for abstractinnerclass.InnerClasses.C [CLASS]
(type $abstractinnerclass.InnerClasses.C (struct
 (field $vtable (ref null $abstractinnerclass.InnerClasses.C.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__abstractinnerclass_InnerClasses_C (mut (ref null $abstractinnerclass.InnerClasses)))
))
(type $abstractinnerclass.InnerClasses.C.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_bar__void_$pp_abstractinnerclass (mut (ref $function.__$void)))
))

;;; C(InnerClasses $outer_this)
(func $m_<init>__abstractinnerclass_InnerClasses__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.C
 (param $this (ref null $abstractinnerclass.InnerClasses.C))
 (param $$outer_this (ref null $abstractinnerclass.InnerClasses))
 (result (ref null $abstractinnerclass.InnerClasses.C))
 (block $return.label
  (block
   ;; (C.this.this = $outer_this);
   (struct.set $abstractinnerclass.InnerClasses.C $$outer_this__abstractinnerclass_InnerClasses_C(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void C.bar()
(func $m_bar__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.C
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $abstractinnerclass.InnerClasses.C))
 (local.set $this (ref.cast $java.lang.Object $abstractinnerclass.InnerClasses.C (local.get $this.untyped) (global.get $abstractinnerclass.InnerClasses.C.rtt)))
 (block $return.label
  (block
   ;; C.this.foo();
   
  )
 )
)
(elem declare func $m_bar__void_$pp_abstractinnerclass@abstractinnerclass.InnerClasses.C)

;;; void C.$clinit()
(func $$clinit__void@abstractinnerclass.InnerClasses.C
 (block $return.label
  (block
   ;; if (abstractinnerclass.InnerClasses.C.$initialized) return;
   (if (global.get $f_$initialized__abstractinnerclass_InnerClasses_C)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (abstractinnerclass.InnerClasses.C.$initialized = true);
   (global.set $f_$initialized__abstractinnerclass_InnerClasses_C (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for abstractinnerclass.InnerClasses [vtable.init]
 (global.set $abstractinnerclass.InnerClasses.vtable (struct.new_with_rtt $abstractinnerclass.InnerClasses.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $abstractinnerclass.InnerClasses.vtable)))

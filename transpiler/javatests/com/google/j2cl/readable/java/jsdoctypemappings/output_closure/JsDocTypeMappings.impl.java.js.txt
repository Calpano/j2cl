goog.module('jsdoctypemappings.JsDocTypeMappings$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Byte = goog.forwardDeclare('java.lang.Byte$impl');
let Character = goog.forwardDeclare('java.lang.Character$impl');
let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');
let Float = goog.forwardDeclare('java.lang.Float$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Long = goog.forwardDeclare('java.lang.Long$impl');
let Short = goog.forwardDeclare('java.lang.Short$impl');
let Comparator = goog.forwardDeclare('java.util.Comparator$impl');
let ExportedType = goog.forwardDeclare('jsdoctypemappings.JsDocTypeMappings.ExportedTypeNewName$impl');
let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');

class JsDocTypeMappings extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!JsDocTypeMappings} */
 static $create__() {
  JsDocTypeMappings.$clinit();
  let $instance = new JsDocTypeMappings();
  $instance.$ctor__jsdoctypemappings_JsDocTypeMappings__();
  return $instance;
 }
 /** @nodts */
 $ctor__jsdoctypemappings_JsDocTypeMappings__() {
  this.$ctor__java_lang_Object__();
 }
 /** @nodts @return {Comparator<?>} */
 m_returnComparatorWildcard___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {(Comparable|boolean|number|string)} */
 m_returnComparable___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?string} */
 m_returnJavaLangString___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {*} */
 m_returnJavaLangObject___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Byte} */
 m_returnJavaLangByte___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Short} */
 m_returnJavaLangShort___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Integer} */
 m_returnJavaLangInteger___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Long} */
 m_returnJavaLangLong___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Float} */
 m_returnJavaLangFloat___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?number} */
 m_returnJavaLangDouble___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Character} */
 m_returnJavaLangCharacter___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?boolean} */
 m_returnJavaLangBoolean___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {number} */
 m_returnByte___$pp_jsdoctypemappings() {
  return 0;
 }
 /** @nodts @return {number} */
 m_returnShort___$pp_jsdoctypemappings() {
  return 0;
 }
 /** @nodts @return {number} */
 m_returnInt___$pp_jsdoctypemappings() {
  return 0;
 }
 /** @nodts @return {!$Long} */
 m_returnLong___$pp_jsdoctypemappings() {
  return $Long.fromInt(0);
 }
 /** @nodts @return {number} */
 m_returnFloat___$pp_jsdoctypemappings() {
  return 0;
 }
 /** @nodts @return {number} */
 m_returnDouble___$pp_jsdoctypemappings() {
  return 0;
 }
 /** @nodts @return {number} */
 m_returnChar___$pp_jsdoctypemappings() {
  return 0 /* '\u0000' */;
 }
 /** @nodts @return {boolean} */
 m_returnBoolean___$pp_jsdoctypemappings() {
  return false;
 }
 /** @nodts */
 m_returnVoid___$pp_jsdoctypemappings() {}
 /** @nodts @return {?function():void} */
 m_returnNativeFunction___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {Array} */
 m_returnNativeType___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {ExportedType} */
 m_returnExportedType___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @template MethodTypeParameter @return {MethodTypeParameter} */
 m_returnMethodTypeParameter___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?number} */
 m_returnNativeNumber___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?boolean} */
 m_returnNativeBoolean___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?string} */
 m_returnNativeString___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {null} */
 m_returnNativeNull___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?undefined} */
 m_returnNativeUndefined___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?void} */
 m_returnNativeVoid___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {*} */
 m_returnStar___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts @return {?} */
 m_returnNativeWildcard___$pp_jsdoctypemappings() {
  return null;
 }
 /** @nodts */
 static $clinit() {
  JsDocTypeMappings.$clinit = () =>{};
  JsDocTypeMappings.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof JsDocTypeMappings;
 }
 
 /** @nodts */
 static $loadModules() {
  $Long = goog.module.get('nativebootstrap.Long$impl');
 }
}
$Util.$setClassMetadata(JsDocTypeMappings, 'jsdoctypemappings.JsDocTypeMappings');

exports = JsDocTypeMappings;

//# sourceMappingURL=JsDocTypeMappings.js.map

package jsdoctypemappings

open class JsDocTypeMappings {
 internal open fun returnComparatorWildcard(): java.util.Comparator<*>? {
  return null
 }

 internal open fun returnComparable(): Comparable? {
  return null
 }

 internal open fun returnJavaLangString(): String? {
  return null
 }

 internal open fun returnJavaLangObject(): Any? {
  return null
 }

 internal open fun returnJavaLangByte(): Byte? {
  return null
 }

 internal open fun returnJavaLangShort(): Short? {
  return null
 }

 internal open fun returnJavaLangInteger(): Int? {
  return null
 }

 internal open fun returnJavaLangLong(): Long? {
  return null
 }

 internal open fun returnJavaLangFloat(): Float? {
  return null
 }

 internal open fun returnJavaLangDouble(): Double? {
  return null
 }

 internal open fun returnJavaLangCharacter(): java.lang.Character? {
  return null
 }

 internal open fun returnJavaLangBoolean(): Boolean? {
  return null
 }

 internal open fun returnByte(): Byte {
  return 0
 }

 internal open fun returnShort(): Short {
  return 0
 }

 internal open fun returnInt(): Int {
  return 0
 }

 internal open fun returnLong(): Long {
  return 0L
 }

 internal open fun returnFloat(): Float {
  return 0.0f
 }

 internal open fun returnDouble(): Double {
  return 0.0
 }

 internal open fun returnChar(): Char {
  return 0
 }

 internal open fun returnBoolean(): Boolean {
  return false
 }

 internal open fun returnVoid() {}

 internal open fun returnNativeFunction(): jsdoctypemappings.`JsDocTypeMappings$NativeFunction`? {
  return null
 }

 internal open fun returnNativeType(): jsdoctypemappings.`JsDocTypeMappings$NativeType`? {
  return null
 }

 internal open fun returnExportedType(): jsdoctypemappings.`JsDocTypeMappings$ExportedType`? {
  return null
 }

 internal open fun <MethodTypeParameter> returnMethodTypeParameter(): MethodTypeParameter? {
  return null
 }

 internal open fun returnNativeNumber(): jsdoctypemappings.`JsDocTypeMappings$NativeNumber`? {
  return null
 }

 internal open fun returnNativeBoolean(): jsdoctypemappings.`JsDocTypeMappings$NativeBoolean`? {
  return null
 }

 internal open fun returnNativeString(): jsdoctypemappings.`JsDocTypeMappings$NativeString`? {
  return null
 }

 internal open fun returnNativeNull(): jsdoctypemappings.`JsDocTypeMappings$NativeNull`? {
  return null
 }

 internal open fun returnNativeUndefined(): jsdoctypemappings.`JsDocTypeMappings$NativeUndefined`? {
  return null
 }

 internal open fun returnNativeVoid(): jsdoctypemappings.`JsDocTypeMappings$NativeVoid`? {
  return null
 }

 internal open fun returnStar(): jsdoctypemappings.`JsDocTypeMappings$NativeStar`? {
  return null
 }

 internal open fun returnNativeWildcard(): jsdoctypemappings.`JsDocTypeMappings$NativeWildcard`? {
  return null
 }
}

interface `JsDocTypeMappings$NativeFunction` {
 fun f()
}

open class `JsDocTypeMappings$NativeType` {}

open class `JsDocTypeMappings$ExportedType` {
 @JvmField val `this`: jsdoctypemappings.JsDocTypeMappings?
}

interface `JsDocTypeMappings$NativeNumber` {}

interface `JsDocTypeMappings$NativeBoolean` {}

interface `JsDocTypeMappings$NativeString` {}

interface `JsDocTypeMappings$NativeNull` {}

interface `JsDocTypeMappings$NativeUndefined` {}

interface `JsDocTypeMappings$NativeVoid` {}

interface `JsDocTypeMappings$NativeStar` {}

interface `JsDocTypeMappings$NativeWildcard` {}

;;; Code for jsmethodoverride.Parent [vtable]
(global $jsmethodoverride.Parent.vtable (mut (ref null $jsmethodoverride.Parent.vtable)) (ref.null $jsmethodoverride.Parent.vtable))

;;; Code for jsmethodoverride.Child [vtable]
(global $jsmethodoverride.Child.vtable (mut (ref null $jsmethodoverride.Child.vtable)) (ref.null $jsmethodoverride.Child.vtable))

;;; Code for jsmethodoverride.Parent [static fields]
(global $f_$initialized__jsmethodoverride_Parent (mut i32) (i32.const 0))

;;; Code for jsmethodoverride.Child [static fields]
(global $f_$initialized__jsmethodoverride_Child (mut i32) (i32.const 0))

;;; Code for jsmethodoverride.Parent [CLASS]
(type $jsmethodoverride.Parent (struct
 (field $vtable (ref null $jsmethodoverride.Parent.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsmethodoverride.Parent.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__void (mut (ref $function.__$void)))
))

;;; Parent()
(func $m_<init>__void_$pp_jsmethodoverride@jsmethodoverride.Parent
 (param $this (ref null $jsmethodoverride.Parent))
 (result (ref null $jsmethodoverride.Parent))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Parent.foo()
(func $m_foo__void@jsmethodoverride.Parent
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $jsmethodoverride.Parent))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsmethodoverride.Parent.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_foo__void@jsmethodoverride.Parent)

;;; void Parent.$clinit()
(func $$clinit__void@jsmethodoverride.Parent
 (block $return.label
  (block
   ;; if (jsmethodoverride.Parent.$initialized) return;
   (if (global.get $f_$initialized__jsmethodoverride_Parent)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsmethodoverride.Parent.$initialized = true);
   (global.set $f_$initialized__jsmethodoverride_Parent (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for jsmethodoverride.Child [CLASS]
(type $jsmethodoverride.Child (struct
 (field $vtable (ref null $jsmethodoverride.Child.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsmethodoverride.Child.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__void (mut (ref $function.__$void)))
))

;;; Child()
(func $m_<init>__void@jsmethodoverride.Child
 (param $this (ref null $jsmethodoverride.Child))
 (result (ref null $jsmethodoverride.Child))
 (block $return.label
  (block
   ;; jsmethodoverride.Child.$clinit();
   (call $$clinit__void@jsmethodoverride.Child )
   ;; Parent.this.Parent.<init>();
   (drop (call $m_<init>__void_$pp_jsmethodoverride@jsmethodoverride.Parent (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Child.foo()
(func $m_foo__void@jsmethodoverride.Child
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $jsmethodoverride.Child))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsmethodoverride.Child.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_foo__void@jsmethodoverride.Child)

;;; void Child.$clinit()
(func $$clinit__void@jsmethodoverride.Child
 (block $return.label
  (block
   ;; if (jsmethodoverride.Child.$initialized) return;
   (if (global.get $f_$initialized__jsmethodoverride_Child)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsmethodoverride.Child.$initialized = true);
   (global.set $f_$initialized__jsmethodoverride_Child (i32.const 1))
   ;; jsmethodoverride.Parent.$clinit();
   (call $$clinit__void@jsmethodoverride.Parent )
  )
 )
)

 ;;; Code for jsmethodoverride.Parent [vtable.init]
 (global.set $jsmethodoverride.Parent.vtable (struct.new_with_rtt $jsmethodoverride.Parent.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_foo__void@jsmethodoverride.Parent) (rtt.canon $jsmethodoverride.Parent.vtable)))

 ;;; Code for jsmethodoverride.Child [vtable.init]
 (global.set $jsmethodoverride.Child.vtable (struct.new_with_rtt $jsmethodoverride.Child.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_foo__void@jsmethodoverride.Child) (rtt.canon $jsmethodoverride.Child.vtable)))

// Generated from "packageprivatemethods/package1/SuperParent.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package packageprivatemethods.package1

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("PackageprivatemethodsPackage1SuperParent", exact = true)
open class SuperParent {
 @HiddenFromObjC
 open fun overrideInParentExposedInChild_pp_packageprivatemethods_package1(a: Int): Int {
  return a - 1
 }

 @HiddenFromObjC
 open fun exposedInChild_pp_packageprivatemethods_package1(a: Int, b: Int): Int {
  return a + b
 }

 @HiddenFromObjC
 open fun exposedInChildWithInterface_pp_packageprivatemethods_package1(a: Int, b: Int): Int {
  return a + b
 }

 @HiddenFromObjC
 open fun exposedAbstractInParent_pp_packageprivatemethods_package1(a: Int, b: Int, c: Int): Int {
  return a + b + c
 }
}

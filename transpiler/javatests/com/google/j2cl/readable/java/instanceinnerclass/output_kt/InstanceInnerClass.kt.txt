package instanceinnerclass

open class InstanceInnerClass {
 @JvmField var instanceField: Int = 0

 open fun funOuter() {}

 open fun test() {
  TODO("expression.qualify needs rendering: new InstanceInnerClass.<init>())")
 }
}

open class InnerClass {
 @JvmField val `this`: instanceinnerclass.InstanceInnerClass?

 @JvmField var field: Int = this.`this`!!.instanceField + this.`this`!!.instanceField

 @JvmField var enclosingInstance: instanceinnerclass.InstanceInnerClass? = this.`this`

 open fun funInner() {
  this.`this`!!.funOuter()
  this.`this`!!.funOuter()
 }
}

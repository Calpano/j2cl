// Generated from "jsnonnull/Main.java"
package jsnonnull

import javaemul.lang.*
import kotlin.jvm.*

open class Main {
 @kotlin.jvm.JvmField var f1_private_jsnonnull_Main: kotlin.String = "Hello"

 @kotlin.jvm.JvmField var f2_private_jsnonnull_Main: kotlin.String? = null

 @kotlin.jvm.JvmField var f4_private_jsnonnull_Main: kotlin.collections.MutableList<kotlin.String> = kotlin.collections.ArrayList<kotlin.String>()

 @kotlin.jvm.JvmField var f5_private_jsnonnull_Main: kotlin.collections.MutableList<kotlin.String>? = kotlin.collections.ArrayList<kotlin.String>()

 @kotlin.jvm.JvmField var f6_private_jsnonnull_Main: kotlin.collections.MutableList<kotlin.String?> = kotlin.collections.ArrayList<kotlin.String?>()

 @kotlin.jvm.JvmField var f7_private_jsnonnull_Main: kotlin.collections.MutableList<kotlin.String?>? = null

 @kotlin.jvm.JvmField var f8_private_jsnonnull_Main: kotlin.Array<kotlin.String> = kotlin.arrayOf<kotlin.String>()

 @kotlin.jvm.JvmField var f9_private_jsnonnull_Main: kotlin.Array<kotlin.String?> = kotlin.arrayOf<kotlin.String?>()

 @kotlin.jvm.JvmField var f10_private_jsnonnull_Main: kotlin.Array<kotlin.String>? = kotlin.arrayOf<kotlin.String>()

 @kotlin.jvm.JvmField var f12_private_jsnonnull_Main: kotlin.collections.MutableList<kotlin.String?>? = kotlin.collections.ArrayList<kotlin.String?>()

 constructor(a: kotlin.String)

 open fun m1(a: kotlin.String, b: kotlin.collections.MutableList<kotlin.Double>, c: kotlin.String?): kotlin.String {
  return ""
 }

 open fun m2(a: kotlin.String?, b: kotlin.collections.MutableList<kotlin.Double>): kotlin.String? {
  return ""
 }

 open fun m3(a: kotlin.String, vararg args: kotlin.String): kotlin.String? {
  return null
 }

 open fun m4(f: jsnonnull.Main.MyFunction) {}

 fun interface MyFunction {
  fun x(a: kotlin.String): kotlin.String
 }

 open class StringComparator: java.util.Comparator<kotlin.String> {
  open override fun compare(a: kotlin.String, b: kotlin.String): kotlin.Int {
   return 0
  }
 }

 open class NullableStringComparator: java.util.Comparator<kotlin.String?> {
  open override fun compare(a: kotlin.String?, b: kotlin.String?): kotlin.Int {
   return 0
  }
 }

 open class NonNullableStringSubNullableComparator: jsnonnull.Main.NullableStringComparator() {
  open override fun compare(a: kotlin.String, b: kotlin.String): kotlin.Int {
   return 0
  }
 }

 interface NonNullableTemplatedReturn<T> {
  fun get(): T

  fun getArray(): kotlin.Array<T>?
 }

 interface NonNullableTemplate<T: kotlin.Any> {
  fun get(): T

  fun getArray(): kotlin.Array<T>?
 }
}

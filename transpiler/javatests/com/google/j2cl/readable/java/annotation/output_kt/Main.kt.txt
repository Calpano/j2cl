// Generated from "annotation/Main.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package annotation

import javaemul.lang.*
import kotlin.Annotation
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("AnnotationMain", exact = true)
open class Main {
 interface Foo: Annotation {
  @ObjCName("bar")
  fun bar(): Int

  companion object {
   const val CONSTANT: Int = 123
  }
 }

 interface Zoo: Annotation {}

 open inner class Bar {
  @HiddenFromObjC
  open fun baz_pp_annotation(): Int {
   val foo: Main.Foo? = null
   foo!!.bar()
   return Main.Foo.CONSTANT
  }
 }
}

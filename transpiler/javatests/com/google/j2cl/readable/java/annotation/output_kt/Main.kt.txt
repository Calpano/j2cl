package annotation

open class Main {
 constructor(): super()
}

interface `Main$Foo`: java.lang.annotation.Annotation {
 fun bar(): Int

 companion object {
  @kotlin.jvm.JvmField val CONSTANT: Int = 123
 }
}

interface `Main$Zoo`: java.lang.annotation.Annotation {}

open class `Main$Bar` {
 @kotlin.jvm.JvmField val `this`: annotation.Main?

 internal constructor(`$outer_this`: annotation.Main?): super() {
  this.`this` = `$outer_this`
 }

 internal open fun baz(): Int {
  val foo: annotation.`Main$Foo`? = null
  foo!!.bar()
  return annotation.`Main$Foo`.CONSTANT
 }
}

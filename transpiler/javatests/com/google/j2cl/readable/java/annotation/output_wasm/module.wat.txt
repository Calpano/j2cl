;;; Code for annotation.Main [vtable]
(global $annotation.Main.vtable (mut (ref null $annotation.Main.vtable)) (ref.null $annotation.Main.vtable))

;;; Code for annotation.Main.Bar [vtable]
(global $annotation.Main.Bar.vtable (mut (ref null $annotation.Main.Bar.vtable)) (ref.null $annotation.Main.Bar.vtable))

;;; Code for annotation.Main [static fields]
(global $f_$initialized__annotation_Main (mut i32) (i32.const 0))

;;; Code for annotation.Main.Foo [static fields]
(global $f_CONSTANT__annotation_Main_Foo i32 (i32.const 123))
(global $f_$initialized__annotation_Main_Foo (mut i32) (i32.const 0))

;;; Code for annotation.Main.Zoo [static fields]
(global $f_$initialized__annotation_Main_Zoo (mut i32) (i32.const 0))

;;; Code for annotation.Main.Bar [static fields]
(global $f_$initialized__annotation_Main_Bar (mut i32) (i32.const 0))

;;; Code for annotation.Main [CLASS]
(type $annotation.Main (struct
 (field $vtable (ref $annotation.Main.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $annotation.Main.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class))))
 (extends $java.lang.Object.vtable)
)

;;; Main()
(func $m_<init>__@annotation.Main
 (param $this (ref null $annotation.Main))
 (result (ref null $annotation.Main))
 ;;@ annotation/Main.java:18:13
 (block
  ;; annotation.Main.$clinit();
  ;;@ annotation/Main.java:18:13
  (call $$clinit__void@annotation.Main )
  ;; Object.this.Object.<init>();
  ;;@ annotation/Main.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Main.this;
  ;;@ annotation/Main.java:18:13
  (return (local.get $this))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@annotation.Main
 ;;@ annotation/Main.java:18:13
 (block
  ;; if (annotation.Main.$initialized) return;
  ;;@ annotation/Main.java:18:13
  (if (global.get $f_$initialized__annotation_Main)
   (then
    ;; return;
    ;;@ annotation/Main.java:18:13
    (return )
   )
  )
  ;; (annotation.Main.$initialized = true);
  ;;@ annotation/Main.java:18:13
  (global.set $f_$initialized__annotation_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ annotation/Main.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@annotation.Main
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $annotation.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main();
  (return (call $$getAnnotation.Main__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main)

;;; Code for annotation.Main.Foo [INTERFACE]
(type $annotation.Main.Foo.vtable (struct
 (field $m_bar__int (mut (ref $function.__$int)))
))

;;; void Foo.$clinit()
(func $$clinit__void@annotation.Main.Foo
 ;;@ annotation/Main.java:19:13
 (block
  ;; if (annotation.Main.Foo.$initialized) return;
  ;;@ annotation/Main.java:19:13
  (if (global.get $f_$initialized__annotation_Main_Foo)
   (then
    ;; return;
    ;;@ annotation/Main.java:19:13
    (return )
   )
  )
  ;; (annotation.Main.Foo.$initialized = true);
  ;;@ annotation/Main.java:19:13
  (global.set $f_$initialized__annotation_Main_Foo (i32.const 1))
 )
)

;;; Class<?> Foo.getClass()
(func $m_getClass__java_lang_Class@annotation.Main.Foo
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main.Foo();
  (return (call $$getAnnotation.Main.Foo__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main.Foo)

;;; Code for annotation.Main.Zoo [INTERFACE]
(type $annotation.Main.Zoo.vtable (struct
))

;;; void Zoo.$clinit()
(func $$clinit__void@annotation.Main.Zoo
 ;;@ annotation/Main.java:28:13
 (block
  ;; if (annotation.Main.Zoo.$initialized) return;
  ;;@ annotation/Main.java:28:13
  (if (global.get $f_$initialized__annotation_Main_Zoo)
   (then
    ;; return;
    ;;@ annotation/Main.java:28:13
    (return )
   )
  )
  ;; (annotation.Main.Zoo.$initialized = true);
  ;;@ annotation/Main.java:28:13
  (global.set $f_$initialized__annotation_Main_Zoo (i32.const 1))
 )
)

;;; Class<?> Zoo.getClass()
(func $m_getClass__java_lang_Class@annotation.Main.Zoo
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main.Zoo();
  (return (call $$getAnnotation.Main.Zoo__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main.Zoo)

;;; Code for annotation.Main.Bar [CLASS]
(type $annotation.Main.Bar (struct
 (field $vtable (ref $annotation.Main.Bar.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__annotation_Main_Bar (mut (ref null $annotation.Main))))
 (extends $java.lang.Object)
)
(type $annotation.Main.Bar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_baz__int_$pp_annotation (mut (ref $function.__$int))))
 (extends $java.lang.Object.vtable)
)

;;; Bar(Main $outer_this)
(func $m_<init>__annotation_Main@annotation.Main.Bar
 (param $this (ref null $annotation.Main.Bar))
 (param $$outer_this (ref null $annotation.Main))
 (result (ref null $annotation.Main.Bar))
 ;;@ annotation/Main.java:30:8
 (block
  ;; annotation.Main.Bar.$clinit();
  ;;@ annotation/Main.java:30:8
  (call $$clinit__void@annotation.Main.Bar )
  ;; (Bar.this.this = $outer_this);
  ;;@ annotation/Main.java:30:8
  (struct.set $annotation.Main.Bar $$outer_this__annotation_Main_Bar(local.get $this) (local.get $$outer_this))
  ;; Object.this.Object.<init>();
  ;;@ annotation/Main.java:30:8
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return Bar.this;
  ;;@ annotation/Main.java:30:8
  (return (local.get $this))
 )
)

;;; int Bar.baz()
(func $m_baz__int_$pp_annotation@annotation.Main.Bar
 (type $function.__$int)
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 ;;@ annotation/Main.java:32:8
 (local $foo (ref null $java.lang.Object))
 (local $this (ref null $annotation.Main.Bar))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.Bar.rtt)))
 (block
  ;; Foo foo = null;
  ;;@ annotation/Main.java:33:6
  (local.set $foo (ref.null $java.lang.Object))
  ;; foo.bar();
  ;;@ annotation/Main.java:34:6
  (drop (call_ref (local.get $foo)(struct.get $annotation.Main.Foo.vtable $m_bar__int (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $foo)) (i32.const -1)) (rtt.canon $annotation.Main.Foo.vtable)) )))
  ;; return annotation.Main.Foo.CONSTANT;
  ;;@ annotation/Main.java:35:6
  (return (global.get $f_CONSTANT__annotation_Main_Foo))
 )
)
(elem declare func $m_baz__int_$pp_annotation@annotation.Main.Bar)

;;; void Bar.$clinit()
(func $$clinit__void@annotation.Main.Bar
 ;;@ annotation/Main.java:30:8
 (block
  ;; if (annotation.Main.Bar.$initialized) return;
  ;;@ annotation/Main.java:30:8
  (if (global.get $f_$initialized__annotation_Main_Bar)
   (then
    ;; return;
    ;;@ annotation/Main.java:30:8
    (return )
   )
  )
  ;; (annotation.Main.Bar.$initialized = true);
  ;;@ annotation/Main.java:30:8
  (global.set $f_$initialized__annotation_Main_Bar (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ annotation/Main.java:30:8
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Bar.getClass()
(func $m_getClass__java_lang_Class@annotation.Main.Bar
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $annotation.Main.Bar))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.Bar.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main.Bar();
  (return (call $$getAnnotation.Main.Bar__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main.Bar)

 ;;; Code for annotation.Main [vtable.init]
 (global.set $annotation.Main.vtable
  (struct.new_with_rtt $annotation.Main.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@annotation.Main)
   (rtt.canon $annotation.Main.vtable)
  )
 )

 ;;; Code for annotation.Main [itable.init]
 (global.set $annotation.Main.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for annotation.Main.Bar [vtable.init]
 (global.set $annotation.Main.Bar.vtable
  (struct.new_with_rtt $annotation.Main.Bar.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@annotation.Main.Bar)
   (ref.func $m_baz__int_$pp_annotation@annotation.Main.Bar)
   (rtt.canon $annotation.Main.Bar.vtable)
  )
 )

 ;;; Code for annotation.Main.Bar [itable.init]
 (global.set $annotation.Main.Bar.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

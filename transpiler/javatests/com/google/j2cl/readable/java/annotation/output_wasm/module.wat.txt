;;; Code for annotation.Main [vtable]
(global $annotation.Main.vtable (mut (ref null $annotation.Main.vtable)) (ref.null $annotation.Main.vtable))

;;; Code for annotation.Main.Bar [vtable]
(global $annotation.Main.Bar.vtable (mut (ref null $annotation.Main.Bar.vtable)) (ref.null $annotation.Main.Bar.vtable))

;;; Code for annotation.Main [static fields]
(global $f_$initialized__annotation_Main (mut i32) (i32.const 0))

;;; Code for annotation.Main.Foo [static fields]
(global $f_CONSTANT__annotation_Main_Foo i32 (i32.const 123))
(global $f_$initialized__annotation_Main_Foo (mut i32) (i32.const 0))

;;; Code for annotation.Main.Bar [static fields]
(global $f_$initialized__annotation_Main_Bar (mut i32) (i32.const 0))

;;; Code for annotation.Main [CLASS]
(type $annotation.Main (struct
 (field $vtable (ref null $annotation.Main.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $annotation.Main.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; Main()
(func $m_<init>__void@annotation.Main
 (param $this (ref null $annotation.Main))
 (result (ref null $annotation.Main))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Main.$clinit()
(func $$clinit__void@annotation.Main
 (block $return.label
  (block
   ;; if (annotation.Main.$initialized) return;
   (if (global.get $f_$initialized__annotation_Main)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (annotation.Main.$initialized = true);
   (global.set $f_$initialized__annotation_Main (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@annotation.Main
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $annotation.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main();
   (local.set $return.value (call $$getAnnotation.Main__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main)

;;; Code for annotation.Main.Foo [INTERFACE]

;;; void Foo.$clinit()
(func $$clinit__void@annotation.Main.Foo
 (block $return.label
  (block
   ;; if (annotation.Main.Foo.$initialized) return;
   (if (global.get $f_$initialized__annotation_Main_Foo)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (annotation.Main.Foo.$initialized = true);
   (global.set $f_$initialized__annotation_Main_Foo (i32.const 1))
  )
 )
)

;;; Class<?> Foo.getClass()
(func $m_getClass__java_lang_Class@annotation.Main.Foo
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main.Foo();
   (local.set $return.value (call $$getAnnotation.Main.Foo__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main.Foo)

;;; Code for annotation.Main.Bar [CLASS]
(type $annotation.Main.Bar (struct
 (field $vtable (ref null $annotation.Main.Bar.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__annotation_Main_Bar (mut (ref null $annotation.Main)))
))
(type $annotation.Main.Bar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_baz__int_$pp_annotation (mut (ref $function.__$int)))
))

;;; Bar(Main $outer_this)
(func $m_<init>__annotation_Main__void_$pp_annotation@annotation.Main.Bar
 (param $this (ref null $annotation.Main.Bar))
 (param $$outer_this (ref null $annotation.Main))
 (result (ref null $annotation.Main.Bar))
 (block $return.label
  (block
   ;; (Bar.this.this = $outer_this);
   (struct.set $annotation.Main.Bar $$outer_this__annotation_Main_Bar(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int Bar.baz()
(func $m_baz__int_$pp_annotation@annotation.Main.Bar
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $foo (ref null $java.lang.Object))
 (local $this (ref null $annotation.Main.Bar))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.Bar.rtt)))
 (block $return.label
  (block
   ;; Foo foo = null;
   
   (local.set $foo (ref.null $java.lang.Object))
   ;; foo.bar();
   (drop (i32.const 0))
   ;; return annotation.Main.Foo.CONSTANT;
   (local.set $return.value (global.get $f_CONSTANT__annotation_Main_Foo))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_baz__int_$pp_annotation@annotation.Main.Bar)

;;; void Bar.$clinit()
(func $$clinit__void@annotation.Main.Bar
 (block $return.label
  (block
   ;; if (annotation.Main.Bar.$initialized) return;
   (if (global.get $f_$initialized__annotation_Main_Bar)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (annotation.Main.Bar.$initialized = true);
   (global.set $f_$initialized__annotation_Main_Bar (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Bar.getClass()
(func $m_getClass__java_lang_Class@annotation.Main.Bar
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $annotation.Main.Bar))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $annotation.Main.Bar.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getAnnotation.Main.Bar();
   (local.set $return.value (call $$getAnnotation.Main.Bar__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@annotation.Main.Bar)

 ;;; Code for annotation.Main [vtable.init]
 (global.set $annotation.Main.vtable (struct.new_with_rtt $annotation.Main.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@annotation.Main) (rtt.canon $annotation.Main.vtable)))

 ;;; Code for annotation.Main.Bar [vtable.init]
 (global.set $annotation.Main.Bar.vtable (struct.new_with_rtt $annotation.Main.Bar.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@annotation.Main.Bar) (ref.func $m_baz__int_$pp_annotation@annotation.Main.Bar) (rtt.canon $annotation.Main.Bar.vtable)))

package enums

enum class Enum1: kotlin.Enum<enums.Enum1?>() {
 companion object {
  @kotlin.jvm.JvmField val V1: enums.Enum1 = enums.Enum1

  @kotlin.jvm.JvmField val V2: enums.Enum1 = enums.Enum1
 }
}

enum class Enum2: kotlin.Enum<enums.Enum2?> {
 @kotlin.jvm.JvmField internal var foo: Int = (enums.Enum1.V1 as java.lang.Enum<enums.Enum1?>).ordinal()

 internal constructor(foo: Int) {
  this.foo = foo
 }

 internal constructor(foo: kotlin.Enum<*>?): this((foo!! as java.lang.Enum<*>).ordinal())

 internal constructor(vararg somePars: kotlin.Any?): this(somePars!!.size)

 companion object {
  @kotlin.jvm.JvmField val VALUE1: enums.Enum2 = enums.Enum2

  @kotlin.jvm.JvmField val VALUE2: enums.Enum2 = enums.Enum2

  @kotlin.jvm.JvmField val VALUE3: enums.Enum2 = enums.Enum2

  @kotlin.jvm.JvmField val VALUE4: enums.Enum2 = object : enums.Enum2 {}

  @kotlin.jvm.JvmStatic
  internal fun f(o: kotlin.Any?): enums.Enum2? {
   return null
  }

  @kotlin.jvm.JvmField internal var C: enums.Enum2? = enums.Enum2.f((java.lang.Object() as kotlin.Any))
 }
}

enum class Enum3: kotlin.Enum<enums.Enum3?> {
 internal constructor(function: java.util.function.Function<kotlin.Int?, kotlin.Int?>?)

 companion object {
  @kotlin.jvm.JvmField val VALUE1: enums.Enum3 = enums.Enum3
 }
}

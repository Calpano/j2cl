;;; Code for synchronizedstatement.SynchronizedStatement [vtable]
(global $synchronizedstatement.SynchronizedStatement.vtable (mut (ref null $synchronizedstatement.SynchronizedStatement.vtable)) (ref.null $synchronizedstatement.SynchronizedStatement.vtable))

;;; Code for synchronizedstatement.SynchronizedStatement [static fields]
(global $f_$initialized__synchronizedstatement_SynchronizedStatement (mut i32) (i32.const 0))

;;; Code for synchronizedstatement.SynchronizedStatement [CLASS]
(type $synchronizedstatement.SynchronizedStatement (struct
 (field $vtable (ref null $synchronizedstatement.SynchronizedStatement.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_a__synchronizedstatement_SynchronizedStatement_ (mut i32))
 (field $f_b__synchronizedstatement_SynchronizedStatement_ (mut i32))
))
(type $synchronizedstatement.SynchronizedStatement.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void)))
))

;;; SynchronizedStatement()
(func $m_<init>__void@synchronizedstatement.SynchronizedStatement
 (param $this (ref null $synchronizedstatement.SynchronizedStatement))
 (result (ref null $synchronizedstatement.SynchronizedStatement))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void SynchronizedStatement.main()
(func $m_main__void@synchronizedstatement.SynchronizedStatement
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $synchronizedstatement.SynchronizedStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $synchronizedstatement.SynchronizedStatement.rtt)))
 (block $return.label
  (block
   ;; synchronized (SynchronizedStatement.this);{
   ;; unimplemented statement SynchronizedStatement
  )
 )
)
(elem declare func $m_main__void@synchronizedstatement.SynchronizedStatement)

;;; void SynchronizedStatement.$clinit()
(func $$clinit__void@synchronizedstatement.SynchronizedStatement
 (block $return.label
  (block
   ;; if (synchronizedstatement.SynchronizedStatement.$initialized) return;
   (if (global.get $f_$initialized__synchronizedstatement_SynchronizedStatement)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (synchronizedstatement.SynchronizedStatement.$initialized = true);
   (global.set $f_$initialized__synchronizedstatement_SynchronizedStatement (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> SynchronizedStatement.getClass()
(func $m_getClass__java_lang_Class@synchronizedstatement.SynchronizedStatement
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $synchronizedstatement.SynchronizedStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $synchronizedstatement.SynchronizedStatement.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getSynchronizedstatement.SynchronizedStatement();
   (local.set $return.value (call $$getSynchronizedstatement.SynchronizedStatement__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@synchronizedstatement.SynchronizedStatement)

 ;;; Code for synchronizedstatement.SynchronizedStatement [vtable.init]
 (global.set $synchronizedstatement.SynchronizedStatement.vtable
  (struct.new_with_rtt $synchronizedstatement.SynchronizedStatement.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@synchronizedstatement.SynchronizedStatement)
   (ref.func $m_main__void@synchronizedstatement.SynchronizedStatement)
   (rtt.canon $synchronizedstatement.SynchronizedStatement.vtable)
  )
 )

 ;;; Code for synchronizedstatement.SynchronizedStatement [itable.init]
 (global.set $synchronizedstatement.SynchronizedStatement.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

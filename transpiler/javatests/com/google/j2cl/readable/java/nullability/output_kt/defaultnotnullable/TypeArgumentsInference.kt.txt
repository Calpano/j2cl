// Generated from "nullability/defaultnotnullable/TypeArgumentsInference.java"
package nullability.defaultnotnullable

import javaemul.lang.*
import kotlin.jvm.*

open class TypeArgumentsInference {
 companion object {
  @kotlin.jvm.JvmStatic
  fun <K> wildcardPair(): nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, *> {
   return nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, kotlin.Any>()
  }

  @kotlin.jvm.JvmStatic
  fun <K, V> pairIdentity(pair: nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, V>): nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, V> {
   return pair
  }

  @kotlin.jvm.JvmStatic
  fun <K> wildcardPairAndIdentity(): nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, *> {
   return nullability.defaultnotnullable.TypeArgumentsInference.pairIdentity<K, kotlin.Any>(nullability.defaultnotnullable.TypeArgumentsInference.wildcardPair<K>() as nullability.defaultnotnullable.TypeArgumentsInference.Pair<K, kotlin.Any>)
  }
 }

 class Pair<K, V> {}
}

package localclassinstaticcontext

open class LocalClassInStaticContext {
 companion object {
  @JvmField var f: Any? = localclassinstaticcontext.LocalClassInStaticContext.`1`()

  @JvmStatic
  fun test() {
   localclassinstaticcontext.LocalClassInStaticContext.`1A`()
   val a: Any? = localclassinstaticcontext.LocalClassInStaticContext.`3`()
  }

  init {
   localclassinstaticcontext.LocalClassInStaticContext.`1B`()
   val b: Any? = localclassinstaticcontext.LocalClassInStaticContext.`2`()
  }
 }
}

open class `1` {
 internal constructor(): super() {

 }
}

open class `1A` {}

open class `3` {
 internal constructor(): super() {

 }

 internal open fun m() {
  localclassinstaticcontext.LocalClassInStaticContext.`1A`()
 }
}

open class `1B` {}

open class `2` {
 internal constructor(): super() {

 }
}

open class C {
 @JvmField var f: Int = 1

 open fun test() {
  TODO("expression.qualify needs rendering: C.this)").`fun`()
 }
}

open class `1D` {
 @JvmField val `this`: localclassinstaticcontext.LocalClassInStaticContext.C?

 open fun `fun`(): Int {
  return this.`this`.f
 }
}

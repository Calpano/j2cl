package foreachstatement

open class ForEachStatement {
 open fun test(iterable: Iterable<Throwable?>?) {
  FOR_EACH@ for (t in iterable) {
   t.toString()
  }
  FOR_EACH_1@ for (t_1 in arrayOfNulls<Throwable?>(10)) {
   t.toString()
  }
 }

 private fun testMulticatch() {
  try {
   throw Exception()
  } catch (e: foreachstatement.ForEachStatement.Exception1) {
   FOR_EACH@ for (o in e) {}
  } catch (e: foreachstatement.ForEachStatement.Exception2) {
   FOR_EACH@ for (o in e) {}
  }
 }

 private fun <T, U: T> testTypeVariable() where T: Any?, T: Iterable<String?>? {
  val iterable: U = null
  FOR_EACH@ for (s in iterable) {}
  val anotherIterable: foreachstatement.ForEachStatement.IterableReturningTypeVariable<*>? = null
  FOR_EACH_1@ for (s_1 in anotherIterable) {}
 }
}

open class Exception1: Iterable<String?>, Exception() {
 open fun iterator(): java.util.Iterator<String?>? {
  return null
 }
}

open class Exception2: Iterable<Any?>, Exception() {
 open fun iterator(): java.util.Iterator<Any?>? {
  return null
 }
}

open class IterableReturningTypeVariable<T: java.util.Iterator<Int?>?>: Iterable<Int?> {
 open fun iterator(): T {
  return null
 }
}

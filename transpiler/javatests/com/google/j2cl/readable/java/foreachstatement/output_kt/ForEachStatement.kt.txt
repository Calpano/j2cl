package foreachstatement

open class ForEachStatement {
 fun test(iterable: Iterable<Throwable?>?) {
  for (t in iterable) {
   t.toString()
  }
  for (t in arrayOfNulls<Throwable?>(10)) {
   t.toString()
  }
 }

 fun testMulticatch() {
  try {
   throw Exception()
  } catch (e: foreachstatement.ForEachStatement.Exception1) {
   for (o in e) {}
  } catch (e: foreachstatement.ForEachStatement.Exception2) {
   for (o in e) {}
  }
 }

 fun testTypeVariable() {
  val iterable: U = null
  for (s in iterable) {}
  val anotherIterable: foreachstatement.ForEachStatement.IterableReturningTypeVariable<*>? = null
  for (s in anotherIterable) {}
 }
}

open class Exception1: Iterable<String?>, Exception {
 fun iterator(): java.util.Iterator<String?>? {
  return null
 }
}

open class Exception2: Iterable<Any?>, Exception {
 fun iterator(): java.util.Iterator<Any?>? {
  return null
 }
}

open class IterableReturningTypeVariable: Iterable<Int?> {
 fun iterator(): T {
  return null
 }
}

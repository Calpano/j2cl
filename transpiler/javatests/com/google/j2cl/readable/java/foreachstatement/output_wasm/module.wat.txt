;;; Code for foreachstatement.ForEachStatement [vtable]
(global $foreachstatement.ForEachStatement.vtable (mut (ref null $foreachstatement.ForEachStatement.vtable)) (ref.null $foreachstatement.ForEachStatement.vtable))

;;; Code for foreachstatement.ForEachStatement.Exception1 [vtable]
(global $foreachstatement.ForEachStatement.Exception1.vtable (mut (ref null $foreachstatement.ForEachStatement.Exception1.vtable)) (ref.null $foreachstatement.ForEachStatement.Exception1.vtable))

;;; Code for foreachstatement.ForEachStatement.Exception2 [vtable]
(global $foreachstatement.ForEachStatement.Exception2.vtable (mut (ref null $foreachstatement.ForEachStatement.Exception2.vtable)) (ref.null $foreachstatement.ForEachStatement.Exception2.vtable))

;;; Code for foreachstatement.ForEachStatement.IterableReturningTypeVariable [vtable]
(global $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable (mut (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable)) (ref.null $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable))

;;; Code for foreachstatement.ForEachStatement [static fields]
(global $f_$initialized__foreachstatement_ForEachStatement (mut i32) (i32.const 0))

;;; Code for foreachstatement.ForEachStatement.Exception1 [static fields]
(global $f_$initialized__foreachstatement_ForEachStatement_Exception1 (mut i32) (i32.const 0))

;;; Code for foreachstatement.ForEachStatement.Exception2 [static fields]
(global $f_$initialized__foreachstatement_ForEachStatement_Exception2 (mut i32) (i32.const 0))

;;; Code for foreachstatement.ForEachStatement.IterableReturningTypeVariable [static fields]
(global $f_$initialized__foreachstatement_ForEachStatement_IterableReturningTypeVariable (mut i32) (i32.const 0))

;;; Code for foreachstatement.ForEachStatement [CLASS]
(type $foreachstatement.ForEachStatement (struct
 (field $vtable (ref $foreachstatement.ForEachStatement.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $foreachstatement.ForEachStatement.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__java_lang_Iterable__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; ForEachStatement()
(func $m_<init>__@foreachstatement.ForEachStatement
 (param $this (ref null $foreachstatement.ForEachStatement))
 (result (ref null $foreachstatement.ForEachStatement))
 (block
  ;; foreachstatement.ForEachStatement.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (call $$clinit__void@foreachstatement.ForEachStatement )
  ;; Object.this.Object.<init>();
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return ForEachStatement.this;
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (return (local.get $this))
 )
)

;;; void ForEachStatement.test(Iterable<Throwable> iterable)
(func $m_test__java_lang_Iterable__void@foreachstatement.ForEachStatement
 (param $this.untyped (ref null $java.lang.Object))
 (param $iterable (ref null $java.lang.Object))
 (local $$iterator (ref null $java.lang.Object))
 (local $t (ref null $java.lang.Throwable))
 (local $$array (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$index i32)
 (local $t_1 (ref null $java.lang.Throwable))
 (local $this (ref null $foreachstatement.ForEachStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.rtt)))
 (block
  ;; LOOP: for (Iterator<Throwable> $iterator = iterable.iterator();$iterator.hasNext();) {
  ;;@ foreachstatement/ForEachStatement.java:22:4
  (local.set $$iterator (call_ref (local.get $iterable)(struct.get $java.lang.Iterable.vtable $m_iterator__java_util_Iterator (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $iterable)) (i32.const 1)) (rtt.canon $java.lang.Iterable.vtable)) )))
  (block $LOOP.BREAK
   (loop
    (br_if 1 (i32.eqz (call_ref (local.get $$iterator)(struct.get $java.util.Iterator.vtable $m_hasNext__boolean (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) ))))
    (block $LOOP.CONTINUE
     (block
      ;; Throwable t = ((Throwable) $iterator.next());
      ;;@ foreachstatement/ForEachStatement.java:22:4
      (local.set $t (ref.cast (call_ref (local.get $$iterator)(struct.get $java.util.Iterator.vtable $m_next__java_lang_Object (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) )) (global.get $java.lang.Throwable.rtt)))
      (block
       ;; t.toString();
       ;;@ foreachstatement/ForEachStatement.java:23:6
       (drop (call_ref (local.get $t)(struct.get $java.lang.Throwable.vtable $m_toString__java_lang_String (struct.get $java.lang.Throwable $vtable(local.get $t)))))
      )
     )
    )
    (br 0)
    
   )
  )
  ;; LOOP: for (Throwable[] $array = new OfObject.<init>(10),int $index = 0;($index < $array.length);($index = ($index + 1))) {
  ;;@ foreachstatement/ForEachStatement.java:26:4
  (local.set $$array (call $m_<init>__int@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 10)))
  (local.set $$index (i32.const 0))
  (block $LOOP_1.BREAK
   (loop
    (br_if 1 (i32.eqz (i32.lt_s (local.get $$index) (struct.get $javaemul.internal.WasmArray $f_length__javaemul_internal_WasmArray(local.get $$array)))))
    (block $LOOP_1.CONTINUE
     (block
      ;; Throwable t = ((Throwable) $array.elements[$index]);
      ;;@ foreachstatement/ForEachStatement.java:26:4
      (local.set $t_1 (ref.cast (array.get $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array)) (local.get $$index)) (global.get $java.lang.Throwable.rtt)))
      (block
       ;; t.toString();
       ;;@ foreachstatement/ForEachStatement.java:27:6
       (drop (call_ref (local.get $t_1)(struct.get $java.lang.Throwable.vtable $m_toString__java_lang_String (struct.get $java.lang.Throwable $vtable(local.get $t_1)))))
      )
     )
    )
    (local.set $$index (i32.add (local.get $$index) (i32.const 1)))
    (br 0)
    
   )
  )
 )
)
(elem declare func $m_test__java_lang_Iterable__void@foreachstatement.ForEachStatement)

;;; void ForEachStatement.testMulticatch()
(func $m_testMulticatch__void_$p_foreachstatement_ForEachStatement@foreachstatement.ForEachStatement
 (param $this (ref null $foreachstatement.ForEachStatement))
 (local $e (ref null $java.lang.Exception))
 (local $$iterator (ref null $java.lang.Object))
 (local $$qualifier (ref null $java.lang.Object))
 (local $o (ref null $java.lang.Object))
 (block
  ;; try {
  ;;@ foreachstatement/ForEachStatement.java:44:4
  (block
   ;; throw new Exception.<init>();
   ;;@ foreachstatement/ForEachStatement.java:45:6
   (throw $exception.event (call $m_<init>__@java.lang.Exception (struct.new_with_rtt $java.lang.Exception (ref.as_non_null (global.get $java.lang.Exception.vtable)) (ref.as_non_null (global.get $java.lang.Exception.itable)) (i32.const 0) (ref.null $java.lang.String) (ref.null $java.lang.Throwable) (ref.null $javaemul.internal.WasmArray.OfObject) (ref.null $javaemul.internal.WasmArray.OfObject) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object) (global.get $java.lang.Exception.rtt))))
  )
 )
)

;;; void ForEachStatement.testTypeVariable()
(func $m_testTypeVariable__void_$p_foreachstatement_ForEachStatement@foreachstatement.ForEachStatement
 (param $this (ref null $foreachstatement.ForEachStatement))
 (local $iterable (ref null $java.lang.Object))
 (local $$iterator (ref null $java.lang.Object))
 (local $$qualifier (ref null $java.lang.Object))
 (local $s (ref null $java.lang.String))
 (local $anotherIterable (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (local $$iterator_1 (ref null $java.lang.Object))
 (local $s_1 i32)
 (local $$qualifier_1 (ref null $java.lang.Integer))
 (block
  ;; U iterable = null;
  ;;@ foreachstatement/ForEachStatement.java:59:4
  (local.set $iterable (ref.null $java.lang.Object))
  ;; LOOP: for (Iterator<String> $iterator = (Iterable<String> $qualifier = ((Iterable<String>) iterable),$qualifier.iterator());$iterator.hasNext();) {
  ;;@ foreachstatement/ForEachStatement.java:60:4
  (local.set $$iterator (block (result (ref null $java.lang.Object))
   (local.set $$qualifier (local.get $iterable))
   (call_ref (local.get $$qualifier)(struct.get $java.lang.Iterable.vtable $m_iterator__java_util_Iterator (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$qualifier)) (i32.const 1)) (rtt.canon $java.lang.Iterable.vtable)) ))
  ))
  (block $LOOP.BREAK
   (loop
    (br_if 1 (i32.eqz (call_ref (local.get $$iterator)(struct.get $java.util.Iterator.vtable $m_hasNext__boolean (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) ))))
    (block $LOOP.CONTINUE
     (block
      ;; String s = ((String) $iterator.next());
      ;;@ foreachstatement/ForEachStatement.java:60:4
      (local.set $s (ref.cast (call_ref (local.get $$iterator)(struct.get $java.util.Iterator.vtable $m_next__java_lang_Object (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) )) (global.get $java.lang.String.rtt)))
      (block
      )
     )
    )
    (br 0)
    
   )
  )
  ;; IterableReturningTypeVariable<?> anotherIterable = null;
  ;;@ foreachstatement/ForEachStatement.java:62:4
  (local.set $anotherIterable (ref.null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
  ;; LOOP: for (? $iterator = ((Iterator<Integer>) anotherIterable.iterator());$iterator.hasNext();) {
  ;;@ foreachstatement/ForEachStatement.java:63:4
  (local.set $$iterator_1 (call_ref (local.get $anotherIterable)(struct.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable $m_iterator__java_util_Iterator (struct.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable $vtable(local.get $anotherIterable)))))
  (block $LOOP_1.BREAK
   (loop
    (br_if 1 (i32.eqz (call_ref (local.get $$iterator_1)(struct.get $java.util.Iterator.vtable $m_hasNext__boolean (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator_1)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) ))))
    (block $LOOP_1.CONTINUE
     (block
      ;; int s = (Integer $qualifier = ((Integer) $iterator.next()),$qualifier.intValue());
      ;;@ foreachstatement/ForEachStatement.java:63:4
      (local.set $s_1 (block (result i32)
       (local.set $$qualifier_1 (ref.cast (call_ref (local.get $$iterator_1)(struct.get $java.util.Iterator.vtable $m_next__java_lang_Object (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $$iterator_1)) (i32.const 0)) (rtt.canon $java.util.Iterator.vtable)) )) (global.get $java.lang.Integer.rtt)))
       (call_ref (local.get $$qualifier_1)(struct.get $java.lang.Integer.vtable $m_intValue__int (struct.get $java.lang.Integer $vtable(local.get $$qualifier_1))))
      ))
      (block
      )
     )
    )
    (br 0)
    
   )
  )
 )
)

;;; void ForEachStatement.$clinit()
(func $$clinit__void@foreachstatement.ForEachStatement
 (block
  ;; if (foreachstatement.ForEachStatement.$initialized) return;
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (if (global.get $f_$initialized__foreachstatement_ForEachStatement)
   (then
    ;; return;
    ;;@ foreachstatement/ForEachStatement.java:20:13
    (return )
   )
  )
  ;; (foreachstatement.ForEachStatement.$initialized = true);
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (global.set $f_$initialized__foreachstatement_ForEachStatement (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:20:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> ForEachStatement.getClass()
(func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $foreachstatement.ForEachStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForeachstatement.ForEachStatement();
  (return (call $$getForeachstatement.ForEachStatement__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement)

;;; Code for foreachstatement.ForEachStatement.Exception1 [CLASS]
(type $foreachstatement.ForEachStatement.Exception1 (struct
 (field $vtable (ref $foreachstatement.ForEachStatement.Exception1.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $foreachstatement.ForEachStatement.Exception1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_iterator__java_util_Iterator (mut (ref $function.__$java.lang.Object)))
 (field $m_forEach__java_util_function_Consumer__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_spliterator__java_util_Spliterator (mut (ref $function.__$java.lang.Object)))
))

;;; Exception1()
(func $m_<init>__@foreachstatement.ForEachStatement.Exception1
 (param $this (ref null $foreachstatement.ForEachStatement.Exception1))
 (result (ref null $foreachstatement.ForEachStatement.Exception1))
 (block
  ;; foreachstatement.ForEachStatement.Exception1.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (call $$clinit__void@foreachstatement.ForEachStatement.Exception1 )
  ;; Exception.this.Exception.<init>();
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (drop (call $m_<init>__@java.lang.Exception (local.get $this)))
  ;; return Exception1.this;
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (return (local.get $this))
 )
)

;;; Iterator<String> Exception1.iterator()
(func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception1
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception1.rtt)))
 (block
  ;; return null;
  ;;@ foreachstatement/ForEachStatement.java:33:6
  (return (ref.null $java.lang.Object))
 )
)
(elem declare func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception1)

;;; void Exception1.forEach(Consumer<? super String> arg0)
(func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception1
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception1.rtt)))
 (block
  ;; Iterable.this.forEach(arg0);
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (call $m_forEach__java_util_function_Consumer__void@java.lang.Iterable (local.get $this)(local.get $arg0))
 )
)
(elem declare func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception1)

;;; Spliterator<String> Exception1.spliterator()
(func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception1
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception1.rtt)))
 (block
  ;; return Iterable.this.spliterator();
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (return (call $m_spliterator__java_util_Spliterator@java.lang.Iterable (local.get $this)))
 )
)
(elem declare func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception1)

;;; void Exception1.$clinit()
(func $$clinit__void@foreachstatement.ForEachStatement.Exception1
 (block
  ;; if (foreachstatement.ForEachStatement.Exception1.$initialized) return;
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (if (global.get $f_$initialized__foreachstatement_ForEachStatement_Exception1)
   (then
    ;; return;
    ;;@ foreachstatement/ForEachStatement.java:31:15
    (return )
   )
  )
  ;; (foreachstatement.ForEachStatement.Exception1.$initialized = true);
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (global.set $f_$initialized__foreachstatement_ForEachStatement_Exception1 (i32.const 1))
  ;; java.lang.Exception.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (call $$clinit__void@java.lang.Exception )
  ;; java.lang.Iterable.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:31:15
  (call $$clinit__void@java.lang.Iterable )
 )
)

;;; Class<?> Exception1.getClass()
(func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception1
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception1.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForeachstatement.ForEachStatement.Exception1();
  (return (call $$getForeachstatement.ForEachStatement.Exception1__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception1)

;;; Code for foreachstatement.ForEachStatement.Exception2 [CLASS]
(type $foreachstatement.ForEachStatement.Exception2 (struct
 (field $vtable (ref $foreachstatement.ForEachStatement.Exception2.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_detailMessage__java_lang_Throwable_ (mut (ref null $java.lang.String)))
 (field $f_cause__java_lang_Throwable_ (mut (ref null $java.lang.Throwable)))
 (field $f_suppressedExceptions__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_stackTrace__java_lang_Throwable_ (mut (ref null $javaemul.internal.WasmArray.OfObject)))
 (field $f_disableSuppression__java_lang_Throwable_ (mut i32))
 (field $f_disableStackTrace__java_lang_Throwable_ (mut i32))
 (field $f_backingJsObject__java_lang_Throwable_ (mut (ref null $java.lang.Object)))
))
(type $foreachstatement.ForEachStatement.Exception2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_privateInitError__java_lang_Object__void_$pp_java_lang (mut (ref $function.$java.lang.Object__$void)))
 (field $m_getBackingJsObject__java_lang_Object (mut (ref $function.__$java.lang.Object)))
 (field $m_addSuppressed__java_lang_Throwable__void (mut (ref $function.$java.lang.Throwable__$void)))
 (field $m_fillInStackTrace__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getCause__java_lang_Throwable (mut (ref $function.__$java.lang.Throwable)))
 (field $m_getLocalizedMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getMessage__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getStackTrace__arrayOf_java_lang_StackTraceElement (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_getSuppressed__arrayOf_java_lang_Throwable (mut (ref $function.__$javaemul.internal.WasmArray.OfObject)))
 (field $m_initCause__java_lang_Throwable__java_lang_Throwable (mut (ref $function.$java.lang.Throwable__$java.lang.Throwable)))
 (field $m_printStackTrace__void (mut (ref $function.__$void)))
 (field $m_printStackTrace__java_io_PrintStream__void (mut (ref $function.$java.io.PrintStream__$void)))
 (field $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void (mut (ref $function.$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_iterator__java_util_Iterator (mut (ref $function.__$java.lang.Object)))
 (field $m_forEach__java_util_function_Consumer__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_spliterator__java_util_Spliterator (mut (ref $function.__$java.lang.Object)))
))

;;; Exception2()
(func $m_<init>__@foreachstatement.ForEachStatement.Exception2
 (param $this (ref null $foreachstatement.ForEachStatement.Exception2))
 (result (ref null $foreachstatement.ForEachStatement.Exception2))
 (block
  ;; foreachstatement.ForEachStatement.Exception2.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (call $$clinit__void@foreachstatement.ForEachStatement.Exception2 )
  ;; Exception.this.Exception.<init>();
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (drop (call $m_<init>__@java.lang.Exception (local.get $this)))
  ;; return Exception2.this;
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (return (local.get $this))
 )
)

;;; Iterator<Object> Exception2.iterator()
(func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception2
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception2.rtt)))
 (block
  ;; return null;
  ;;@ foreachstatement/ForEachStatement.java:39:6
  (return (ref.null $java.lang.Object))
 )
)
(elem declare func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception2)

;;; void Exception2.forEach(Consumer<? super Object> arg0)
(func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception2
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception2.rtt)))
 (block
  ;; Iterable.this.forEach(arg0);
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (call $m_forEach__java_util_function_Consumer__void@java.lang.Iterable (local.get $this)(local.get $arg0))
 )
)
(elem declare func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception2)

;;; Spliterator<Object> Exception2.spliterator()
(func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception2
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception2.rtt)))
 (block
  ;; return Iterable.this.spliterator();
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (return (call $m_spliterator__java_util_Spliterator@java.lang.Iterable (local.get $this)))
 )
)
(elem declare func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception2)

;;; void Exception2.$clinit()
(func $$clinit__void@foreachstatement.ForEachStatement.Exception2
 (block
  ;; if (foreachstatement.ForEachStatement.Exception2.$initialized) return;
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (if (global.get $f_$initialized__foreachstatement_ForEachStatement_Exception2)
   (then
    ;; return;
    ;;@ foreachstatement/ForEachStatement.java:37:15
    (return )
   )
  )
  ;; (foreachstatement.ForEachStatement.Exception2.$initialized = true);
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (global.set $f_$initialized__foreachstatement_ForEachStatement_Exception2 (i32.const 1))
  ;; java.lang.Exception.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (call $$clinit__void@java.lang.Exception )
  ;; java.lang.Iterable.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:37:15
  (call $$clinit__void@java.lang.Iterable )
 )
)

;;; Class<?> Exception2.getClass()
(func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception2
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $foreachstatement.ForEachStatement.Exception2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.Exception2.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForeachstatement.ForEachStatement.Exception2();
  (return (call $$getForeachstatement.ForEachStatement.Exception2__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception2)

;;; Code for foreachstatement.ForEachStatement.IterableReturningTypeVariable [CLASS]
(type $foreachstatement.ForEachStatement.IterableReturningTypeVariable (struct
 (field $vtable (ref $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_iterator__java_util_Iterator (mut (ref $function.__$java.lang.Object)))
 (field $m_forEach__java_util_function_Consumer__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_spliterator__java_util_Spliterator (mut (ref $function.__$java.lang.Object)))
))

;;; IterableReturningTypeVariable()
(func $m_<init>__@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (param $this (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (result (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (block
  ;; foreachstatement.ForEachStatement.IterableReturningTypeVariable.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (call $$clinit__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable )
  ;; Object.this.Object.<init>();
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return IterableReturningTypeVariable.this;
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (return (local.get $this))
 )
)

;;; T IterableReturningTypeVariable.iterator()
(func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.rtt)))
 (block
  ;; return null;
  ;;@ foreachstatement/ForEachStatement.java:54:6
  (return (ref.null $java.lang.Object))
 )
)
(elem declare func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)

;;; void IterableReturningTypeVariable.forEach(Consumer<? super Integer> arg0)
(func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.rtt)))
 (block
  ;; Iterable.this.forEach(arg0);
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (call $m_forEach__java_util_function_Consumer__void@java.lang.Iterable (local.get $this)(local.get $arg0))
 )
)
(elem declare func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable)

;;; Spliterator<Integer> IterableReturningTypeVariable.spliterator()
(func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $this (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.rtt)))
 (block
  ;; return Iterable.this.spliterator();
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (return (call $m_spliterator__java_util_Spliterator@java.lang.Iterable (local.get $this)))
 )
)
(elem declare func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)

;;; void IterableReturningTypeVariable.$clinit()
(func $$clinit__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (block
  ;; if (foreachstatement.ForEachStatement.IterableReturningTypeVariable.$initialized) return;
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (if (global.get $f_$initialized__foreachstatement_ForEachStatement_IterableReturningTypeVariable)
   (then
    ;; return;
    ;;@ foreachstatement/ForEachStatement.java:51:15
    (return )
   )
  )
  ;; (foreachstatement.ForEachStatement.IterableReturningTypeVariable.$initialized = true);
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (global.set $f_$initialized__foreachstatement_ForEachStatement_IterableReturningTypeVariable (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (call $$clinit__void@java.lang.Object )
  ;; java.lang.Iterable.$clinit();
  ;;@ foreachstatement/ForEachStatement.java:51:15
  (call $$clinit__void@java.lang.Iterable )
 )
)

;;; Class<?> IterableReturningTypeVariable.getClass()
(func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.IterableReturningTypeVariable
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $foreachstatement.ForEachStatement.IterableReturningTypeVariable))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForeachstatement.ForEachStatement.IterableReturningTypeVariable();
  (return (call $$getForeachstatement.ForEachStatement.IterableReturningTypeVariable__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.IterableReturningTypeVariable)

 ;;; Code for foreachstatement.ForEachStatement [vtable.init]
 (global.set $foreachstatement.ForEachStatement.vtable
  (struct.new_with_rtt $foreachstatement.ForEachStatement.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement)
   (ref.func $m_test__java_lang_Iterable__void@foreachstatement.ForEachStatement)
   (rtt.canon $foreachstatement.ForEachStatement.vtable)
  )
 )

 ;;; Code for foreachstatement.ForEachStatement [itable.init]
 (global.set $foreachstatement.ForEachStatement.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for foreachstatement.ForEachStatement.Exception1 [vtable.init]
 (global.set $foreachstatement.ForEachStatement.Exception1.vtable
  (struct.new_with_rtt $foreachstatement.ForEachStatement.Exception1.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Throwable)
   (ref.func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception1)
   (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable)
   (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable)
   (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable)
   (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable)
   (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_printStackTrace__void@java.lang.Throwable)
   (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable)
   (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable)
   (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception1)
   (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception1)
   (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception1)
   (rtt.canon $foreachstatement.ForEachStatement.Exception1.vtable)
  )
 )

 ;;; Code for foreachstatement.ForEachStatement.Exception1 [itable.init]
 (global.set $foreachstatement.ForEachStatement.Exception1.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $foreachstatement.ForEachStatement.Exception1.itable) (i32.const 1)
 (struct.new_with_rtt $java.lang.Iterable.vtable
  (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception1)
  (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception1)
  (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception1)
  (rtt.canon $java.lang.Iterable.vtable)
 ))
 (array.set $itable (global.get $foreachstatement.ForEachStatement.Exception1.itable) (i32.const 0)
 (struct.new_with_rtt $java.io.Serializable.vtable
  (rtt.canon $java.io.Serializable.vtable)
 ))

 ;;; Code for foreachstatement.ForEachStatement.Exception2 [vtable.init]
 (global.set $foreachstatement.ForEachStatement.Exception2.vtable
  (struct.new_with_rtt $foreachstatement.ForEachStatement.Exception2.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Throwable)
   (ref.func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.Exception2)
   (ref.func $m_privateInitError__java_lang_Object__void_$pp_java_lang@java.lang.Throwable)
   (ref.func $m_getBackingJsObject__java_lang_Object@java.lang.Throwable)
   (ref.func $m_addSuppressed__java_lang_Throwable__void@java.lang.Throwable)
   (ref.func $m_fillInStackTrace__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getCause__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_getLocalizedMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getMessage__java_lang_String@java.lang.Throwable)
   (ref.func $m_getStackTrace__arrayOf_java_lang_StackTraceElement@java.lang.Throwable)
   (ref.func $m_getSuppressed__arrayOf_java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_initCause__java_lang_Throwable__java_lang_Throwable@java.lang.Throwable)
   (ref.func $m_printStackTrace__void@java.lang.Throwable)
   (ref.func $m_printStackTrace__java_io_PrintStream__void@java.lang.Throwable)
   (ref.func $m_setStackTrace__arrayOf_java_lang_StackTraceElement__void@java.lang.Throwable)
   (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception2)
   (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception2)
   (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception2)
   (rtt.canon $foreachstatement.ForEachStatement.Exception2.vtable)
  )
 )

 ;;; Code for foreachstatement.ForEachStatement.Exception2 [itable.init]
 (global.set $foreachstatement.ForEachStatement.Exception2.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $foreachstatement.ForEachStatement.Exception2.itable) (i32.const 1)
 (struct.new_with_rtt $java.lang.Iterable.vtable
  (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.Exception2)
  (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.Exception2)
  (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.Exception2)
  (rtt.canon $java.lang.Iterable.vtable)
 ))
 (array.set $itable (global.get $foreachstatement.ForEachStatement.Exception2.itable) (i32.const 0)
 (struct.new_with_rtt $java.io.Serializable.vtable
  (rtt.canon $java.io.Serializable.vtable)
 ))

 ;;; Code for foreachstatement.ForEachStatement.IterableReturningTypeVariable [vtable.init]
 (global.set $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable
  (struct.new_with_rtt $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
   (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
   (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
   (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
   (rtt.canon $foreachstatement.ForEachStatement.IterableReturningTypeVariable.vtable)
  )
 )

 ;;; Code for foreachstatement.ForEachStatement.IterableReturningTypeVariable [itable.init]
 (global.set $foreachstatement.ForEachStatement.IterableReturningTypeVariable.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $foreachstatement.ForEachStatement.IterableReturningTypeVariable.itable) (i32.const 1)
 (struct.new_with_rtt $java.lang.Iterable.vtable
  (ref.func $m_forEach__java_util_function_Consumer__void@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
  (ref.func $m_iterator__java_util_Iterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
  (ref.func $m_spliterator__java_util_Spliterator@foreachstatement.ForEachStatement.IterableReturningTypeVariable)
  (rtt.canon $java.lang.Iterable.vtable)
 ))

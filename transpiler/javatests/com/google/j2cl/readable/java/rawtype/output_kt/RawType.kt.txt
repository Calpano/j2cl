// Generated from "rawtype/RawType.java"
@file:OptIn(ExperimentalObjCName::class)

package rawtype

import javaemul.lang.*
import kotlin.Any
import kotlin.OptIn
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.native.ObjCName
import rawtype.RawType

@ObjCName("RawtypeRawType", exact = true)
open class RawType {
 @JvmField var rawUnbound: RawType.Unbound<Any?>? = RawType.Unbound<Any?>()

 @JvmField var rawBound: RawType.Bound<RawType?>? = RawType.Bound<RawType?>()

 @JvmField var rawBoundRecursively: RawType.BoundRecursively<*>? = RawType.BoundRecursively()

 open class Unbound<T> {}

 open class Bound<T: RawType?> {}

 open class BoundRecursively<T: RawType.BoundRecursively<T>?> {}

 interface GenericSuperclass<T: RawType?> {
  fun f(@ObjCName("withId", exact = false) t: T) {}
 }

 open class RawSubclass: RawType.GenericSuperclass<RawType?> {
  open override fun f(t: RawType?) {}
 }
}

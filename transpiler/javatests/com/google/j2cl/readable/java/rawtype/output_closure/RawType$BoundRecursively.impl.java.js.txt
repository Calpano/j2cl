goog.module('rawtype.RawType.BoundRecursively$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let RawType = goog.forwardDeclare('rawtype.RawType$impl');

/**
 * @template T
 */
class BoundRecursively extends j_l_Object {
 /** @protected */
 constructor() {
  super();
  /**@type {RawType}*/
  this.$outer_this__rawtype_RawType_BoundRecursively;
 }
 /** @template T @return {!BoundRecursively<T>} */
 static $create__rawtype_RawType(/** RawType */ $outer_this) {
  BoundRecursively.$clinit();
  let $instance = new BoundRecursively();
  $instance.$ctor__rawtype_RawType_BoundRecursively__rawtype_RawType($outer_this);
  return $instance;
 }
 
 $ctor__rawtype_RawType_BoundRecursively__rawtype_RawType(/** RawType */ $outer_this) {
  this.$outer_this__rawtype_RawType_BoundRecursively = $outer_this;
  this.$ctor__java_lang_Object__();
 }
 
 static $clinit() {
  BoundRecursively.$clinit = () =>{};
  BoundRecursively.$loadModules();
  j_l_Object.$clinit();
 }
 /** @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof BoundRecursively;
 }
 
 static $loadModules() {}
}
$Util.$setClassMetadata(BoundRecursively, 'rawtype.RawType$BoundRecursively');

exports = BoundRecursively;

//# sourceMappingURL=RawType$BoundRecursively.js.map

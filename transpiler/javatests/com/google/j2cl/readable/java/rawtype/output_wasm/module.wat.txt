;;; Code for rawtype.RawType [vtable]
(global $rawtype.RawType.vtable (mut (ref null $rawtype.RawType.vtable)) (ref.null $rawtype.RawType.vtable))

;;; Code for rawtype.RawType.RawSubclass [vtable]
(global $rawtype.RawType.RawSubclass.vtable (mut (ref null $rawtype.RawType.RawSubclass.vtable)) (ref.null $rawtype.RawType.RawSubclass.vtable))

;;; Code for rawtype.RawType [static fields]
(global $f_$initialized__rawtype_RawType (mut i32) (i32.const 0))

;;; Code for rawtype.RawType.I [static fields]
(global $f_$initialized__rawtype_RawType_I (mut i32) (i32.const 0))

;;; Code for rawtype.RawType.RawSubclass [static fields]
(global $f_$initialized__rawtype_RawType_RawSubclass (mut i32) (i32.const 0))

;;; Code for rawtype.RawType [CLASS]
(type $rawtype.RawType (struct
 (field $vtable (ref $rawtype.RawType.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_c__rawtype_RawType (mut (ref null $java.lang.Object)))
))
(type $rawtype.RawType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; RawType()
(func $m_<init>___$pp_rawtype@rawtype.RawType
 (param $this (ref null $rawtype.RawType))
 (result (ref null $rawtype.RawType))
 (block $return.label
  ;;@ rawtype/RawType.java:19:6
  (block
   ;; rawtype.RawType.$clinit();
   ;;@ rawtype/RawType.java:19:6
   (call $$clinit__void@rawtype.RawType )
   ;; Object.this.Object.<init>();
   ;;@ rawtype/RawType.java:19:6
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void RawType.$clinit()
(func $$clinit__void@rawtype.RawType
 (block $return.label
  ;;@ rawtype/RawType.java:19:6
  (block
   ;; if (rawtype.RawType.$initialized) return;
   ;;@ rawtype/RawType.java:19:6
   (if (global.get $f_$initialized__rawtype_RawType)
    (then
     ;; return;
     ;;@ rawtype/RawType.java:19:6
     (br $return.label)
    )
   )
   ;; (rawtype.RawType.$initialized = true);
   ;;@ rawtype/RawType.java:19:6
   (global.set $f_$initialized__rawtype_RawType (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ rawtype/RawType.java:19:6
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> RawType.getClass()
(func $m_getClass__java_lang_Class@rawtype.RawType
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $rawtype.RawType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $rawtype.RawType.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getRawtype.RawType();
   (local.set $return.value (call $$getRawtype.RawType__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@rawtype.RawType)

;;; Code for rawtype.RawType.I [INTERFACE]
(type $rawtype.RawType.I.vtable (struct
 (field $m_f__rawtype_RawType__void (mut (ref $function.$rawtype.RawType__$void)))
))

;;; void I.f(T t)
(func $m_f__rawtype_RawType__void@rawtype.RawType.I
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $rawtype.RawType))
 (block $return.label
  ;;@ rawtype/RawType.java:23:17
  (block
  )
 )
)
(elem declare func $m_f__rawtype_RawType__void@rawtype.RawType.I)

;;; void I.$clinit()
(func $$clinit__void@rawtype.RawType.I
 (block $return.label
  ;;@ rawtype/RawType.java:22:12
  (block
   ;; if (rawtype.RawType.I.$initialized) return;
   ;;@ rawtype/RawType.java:22:12
   (if (global.get $f_$initialized__rawtype_RawType_I)
    (then
     ;; return;
     ;;@ rawtype/RawType.java:22:12
     (br $return.label)
    )
   )
   ;; (rawtype.RawType.I.$initialized = true);
   ;;@ rawtype/RawType.java:22:12
   (global.set $f_$initialized__rawtype_RawType_I (i32.const 1))
  )
 )
)

;;; Class<?> I.getClass()
(func $m_getClass__java_lang_Class@rawtype.RawType.I
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getRawtype.RawType.I();
   (local.set $return.value (call $$getRawtype.RawType.I__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@rawtype.RawType.I)

;;; Code for rawtype.RawType.RawSubclass [CLASS]
(type $rawtype.RawType.RawSubclass (struct
 (field $vtable (ref $rawtype.RawType.RawSubclass.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $rawtype.RawType.RawSubclass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_f__rawtype_RawType__void (mut (ref $function.$rawtype.RawType__$void)))
))

;;; RawSubclass()
(func $m_<init>___$pp_rawtype@rawtype.RawType.RawSubclass
 (param $this (ref null $rawtype.RawType.RawSubclass))
 (result (ref null $rawtype.RawType.RawSubclass))
 (block $return.label
  ;;@ rawtype/RawType.java:26:15
  (block
   ;; rawtype.RawType.RawSubclass.$clinit();
   ;;@ rawtype/RawType.java:26:15
   (call $$clinit__void@rawtype.RawType.RawSubclass )
   ;; Object.this.Object.<init>();
   ;;@ rawtype/RawType.java:26:15
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void RawSubclass.f(RawType t)
(func $m_f__rawtype_RawType__void@rawtype.RawType.RawSubclass
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $rawtype.RawType))
 (local $this (ref null $rawtype.RawType.RawSubclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $rawtype.RawType.RawSubclass.rtt)))
 (block $return.label
  ;;@ rawtype/RawType.java:28:16
  (block
  )
 )
)
(elem declare func $m_f__rawtype_RawType__void@rawtype.RawType.RawSubclass)

;;; void RawSubclass.$clinit()
(func $$clinit__void@rawtype.RawType.RawSubclass
 (block $return.label
  ;;@ rawtype/RawType.java:26:15
  (block
   ;; if (rawtype.RawType.RawSubclass.$initialized) return;
   ;;@ rawtype/RawType.java:26:15
   (if (global.get $f_$initialized__rawtype_RawType_RawSubclass)
    (then
     ;; return;
     ;;@ rawtype/RawType.java:26:15
     (br $return.label)
    )
   )
   ;; (rawtype.RawType.RawSubclass.$initialized = true);
   ;;@ rawtype/RawType.java:26:15
   (global.set $f_$initialized__rawtype_RawType_RawSubclass (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ rawtype/RawType.java:26:15
   (call $$clinit__void@java.lang.Object )
   ;; rawtype.RawType.I.$clinit();
   ;;@ rawtype/RawType.java:26:15
   (call $$clinit__void@rawtype.RawType.I )
  )
 )
)

;;; Class<?> RawSubclass.getClass()
(func $m_getClass__java_lang_Class@rawtype.RawType.RawSubclass
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $rawtype.RawType.RawSubclass))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $rawtype.RawType.RawSubclass.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getRawtype.RawType.RawSubclass();
   (local.set $return.value (call $$getRawtype.RawType.RawSubclass__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@rawtype.RawType.RawSubclass)

 ;;; Code for rawtype.RawType [vtable.init]
 (global.set $rawtype.RawType.vtable
  (struct.new_with_rtt $rawtype.RawType.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@rawtype.RawType)
   (rtt.canon $rawtype.RawType.vtable)
  )
 )

 ;;; Code for rawtype.RawType [itable.init]
 (global.set $rawtype.RawType.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for rawtype.RawType.RawSubclass [vtable.init]
 (global.set $rawtype.RawType.RawSubclass.vtable
  (struct.new_with_rtt $rawtype.RawType.RawSubclass.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@rawtype.RawType.RawSubclass)
   (ref.func $m_f__rawtype_RawType__void@rawtype.RawType.RawSubclass)
   (rtt.canon $rawtype.RawType.RawSubclass.vtable)
  )
 )

 ;;; Code for rawtype.RawType.RawSubclass [itable.init]
 (global.set $rawtype.RawType.RawSubclass.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $rawtype.RawType.RawSubclass.itable) (i32.const 0)
 (struct.new_with_rtt $rawtype.RawType.I.vtable
  (ref.func $m_f__rawtype_RawType__void@rawtype.RawType.RawSubclass)
  (rtt.canon $rawtype.RawType.I.vtable)
 ))

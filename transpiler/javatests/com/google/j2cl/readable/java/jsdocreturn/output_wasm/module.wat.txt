;;; Code for jsdocreturn.JsDocReturn [vtable]
(global $jsdocreturn.JsDocReturn.vtable (mut (ref null $jsdocreturn.JsDocReturn.vtable)) (ref.null $jsdocreturn.JsDocReturn.vtable))

;;; Code for jsdocreturn.JsDocReturn [static fields]
(global $f_$initialized__jsdocreturn_JsDocReturn (mut i32) (i32.const 0))

;;; Code for jsdocreturn.JsDocReturn [CLASS]
(type $jsdocreturn.JsDocReturn (struct
 (field $vtable (ref null $jsdocreturn.JsDocReturn.vtable)) (field $itable (ref null $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsdocreturn.JsDocReturn.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test1__void (mut (ref $function.__$void)))
 (field $m_test2__int (mut (ref $function.__$int)))
))

;;; JsDocReturn()
(func $m_<init>__void@jsdocreturn.JsDocReturn
 (param $this (ref null $jsdocreturn.JsDocReturn))
 (result (ref null $jsdocreturn.JsDocReturn))
 (block $return.label
  (block
   ;; jsdocreturn.JsDocReturn.$clinit();
   (call $$clinit__void@jsdocreturn.JsDocReturn )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void JsDocReturn.test1()
(func $m_test1__void@jsdocreturn.JsDocReturn
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $jsdocreturn.JsDocReturn))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsdocreturn.JsDocReturn.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_test1__void@jsdocreturn.JsDocReturn)

;;; int JsDocReturn.test2()
(func $m_test2__int@jsdocreturn.JsDocReturn
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsdocreturn.JsDocReturn))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsdocreturn.JsDocReturn.rtt)))
 (block $return.label
  (block
   ;; return 1;
   (local.set $return.value (i32.const 1))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_test2__int@jsdocreturn.JsDocReturn)

;;; void JsDocReturn.$clinit()
(func $$clinit__void@jsdocreturn.JsDocReturn
 (block $return.label
  (block
   ;; if (jsdocreturn.JsDocReturn.$initialized) return;
   (if (global.get $f_$initialized__jsdocreturn_JsDocReturn)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsdocreturn.JsDocReturn.$initialized = true);
   (global.set $f_$initialized__jsdocreturn_JsDocReturn (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> JsDocReturn.getClass()
(func $m_getClass__java_lang_Class@jsdocreturn.JsDocReturn
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsdocreturn.JsDocReturn))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsdocreturn.JsDocReturn.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsdocreturn.JsDocReturn();
   (local.set $return.value (call $$getJsdocreturn.JsDocReturn__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsdocreturn.JsDocReturn)

 ;;; Code for jsdocreturn.JsDocReturn [vtable.init]
 (global.set $jsdocreturn.JsDocReturn.vtable
  (struct.new_with_rtt $jsdocreturn.JsDocReturn.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsdocreturn.JsDocReturn)
   (ref.func $m_test1__void@jsdocreturn.JsDocReturn)
   (ref.func $m_test2__int@jsdocreturn.JsDocReturn)
   (rtt.canon $jsdocreturn.JsDocReturn.vtable)
  )
 )

 ;;; Code for jsdocreturn.JsDocReturn [itable.init]
 (global.set $jsdocreturn.JsDocReturn.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

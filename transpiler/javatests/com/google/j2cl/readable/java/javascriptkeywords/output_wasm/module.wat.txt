;;; Code for javascriptkeywords.JSKeyWords [vtable]
(global $javascriptkeywords.JSKeyWords.vtable (mut (ref null $javascriptkeywords.JSKeyWords.vtable)) (ref.null $javascriptkeywords.JSKeyWords.vtable))

;;; Code for javascriptkeywords.JSKeyWords [static fields]
(global $f_$initialized__javascriptkeywords_JSKeyWords (mut i32) (i32.const 0))

;;; Code for javascriptkeywords.JSKeyWords [CLASS]
(type $javascriptkeywords.JSKeyWords (struct
 (field $vtable (ref $javascriptkeywords.JSKeyWords.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $javascriptkeywords.JSKeyWords.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__int__int (mut (ref $function.$int__$int))))
 (extends $java.lang.Object.vtable)
)

;;; JSKeyWords()
(func $m_<init>__@javascriptkeywords.JSKeyWords
 (param $this (ref null $javascriptkeywords.JSKeyWords))
 (result (ref null $javascriptkeywords.JSKeyWords))
 (block
  ;; javascriptkeywords.JSKeyWords.$clinit();
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (call $$clinit__void@javascriptkeywords.JSKeyWords )
  ;; Object.this.Object.<init>();
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return JSKeyWords.this;
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (return (local.get $this))
 )
)

;;; int JSKeyWords.test(int in)
(func $m_test__int__int@javascriptkeywords.JSKeyWords
 (type $function.$int__$int)
 (param $this.untyped (ref null $java.lang.Object))
 (param $in i32)
 (result i32)
 (local $let i32)
 (local $this (ref null $javascriptkeywords.JSKeyWords))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $javascriptkeywords.JSKeyWords.rtt)))
 (block
  ;; int let = 0;
  ;;@ javascriptkeywords/JSKeyWords.java:20:4
  (local.set $let (i32.const 0))
  ;; return (let + in);
  ;;@ javascriptkeywords/JSKeyWords.java:21:4
  (return (i32.add (local.get $let) (local.get $in)))
 )
)
(elem declare func $m_test__int__int@javascriptkeywords.JSKeyWords)

;;; void JSKeyWords.$clinit()
(func $$clinit__void@javascriptkeywords.JSKeyWords
 (block
  ;; if (javascriptkeywords.JSKeyWords.$initialized) return;
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (if (global.get $f_$initialized__javascriptkeywords_JSKeyWords)
   (then
    ;; return;
    ;;@ javascriptkeywords/JSKeyWords.java:18:13
    (return )
   )
  )
  ;; (javascriptkeywords.JSKeyWords.$initialized = true);
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (global.set $f_$initialized__javascriptkeywords_JSKeyWords (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ javascriptkeywords/JSKeyWords.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> JSKeyWords.getClass()
(func $m_getClass__java_lang_Class@javascriptkeywords.JSKeyWords
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $javascriptkeywords.JSKeyWords))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $javascriptkeywords.JSKeyWords.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJavascriptkeywords.JSKeyWords();
  (return (call $$getJavascriptkeywords.JSKeyWords__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@javascriptkeywords.JSKeyWords)

 ;;; Code for javascriptkeywords.JSKeyWords [vtable.init]
 (global.set $javascriptkeywords.JSKeyWords.vtable
  (struct.new_with_rtt $javascriptkeywords.JSKeyWords.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@javascriptkeywords.JSKeyWords)
   (ref.func $m_test__int__int@javascriptkeywords.JSKeyWords)
   (rtt.canon $javascriptkeywords.JSKeyWords.vtable)
  )
 )

 ;;; Code for javascriptkeywords.JSKeyWords [itable.init]
 (global.set $javascriptkeywords.JSKeyWords.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

goog.module('switchstatement.SwitchStatement$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');
let Numbers = goog.forwardDeclare('switchstatement.Numbers$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');

class SwitchStatement extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!SwitchStatement} */
 static $create__() {
  SwitchStatement.$clinit();
  let $instance = new SwitchStatement();
  $instance.$ctor__switchstatement_SwitchStatement__void();
  return $instance;
 }
 /** @nodts */
 $ctor__switchstatement_SwitchStatement__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_main__void() {
  switch (InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object('one')) {
   case 'one': 
   case 'two': 
    break;
   default: 
    return;
  }
  switch (49 /* '1' */) {
   case 49 /* '1' */: 
   case 50 /* '2' */: 
    break;
   default: 
    return;
  }
  switch (1) {
   case -2: 
   case 1: 
   case 2: 
    break;
   default: 
    return;
  }
  switch (Numbers.f_ONE__switchstatement_Numbers.ordinal()) {
   case Numbers.$ordinal_ONE__switchstatement_Numbers: 
   case Numbers.$ordinal_TWO__switchstatement_Numbers: 
    break;
   default: 
    return;
  }
 }
 /** @nodts */
 static m_testSwitchVariableDeclarations__void() {
  let /** number */ unassigned, /** number */ unassigned2, /** number */ i, /** number */ j, /** number */ b, /** number */ i_1;
  switch (3) {
   case 1: 
    i = 0;
    (j = 2, b = j + 1 | 0);
    break;
   case 3: 
    i = 3;
    $Asserts.$assert(i == 3);
    return;
  }
  switch (5) {
   case 5: 
    i_1 = 1;
    break;
  }
  $Asserts.$assert(false);
 }
 /** @nodts */
 static $clinit() {
  SwitchStatement.$clinit = () =>{};
  SwitchStatement.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SwitchStatement;
 }
 
 /** @nodts */
 static $loadModules() {
  InternalPreconditions = goog.module.get('javaemul.internal.InternalPreconditions$impl');
  Numbers = goog.module.get('switchstatement.Numbers$impl');
  $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
 }
}
$Util.$setClassMetadata(SwitchStatement, 'switchstatement.SwitchStatement');

exports = SwitchStatement;

//# sourceMappingURL=SwitchStatement.js.map

package switchstatement

enum class Numbers: Enum<switchstatement.Numbers?>() {
 companion object {
  @JvmStatic val ONE: switchstatement.Numbers = switchstatement.Numbers()

  @JvmStatic val TWO: switchstatement.Numbers = switchstatement.Numbers()
 }
}

open class SwitchStatement {
 open fun main() {
  SWITCH@ do when ("one") {
   "one" ->
   "two" ->
    break@SWITCH
   else ->
    return Unit
  } while (false)
  SWITCH_1@ do when ('1') {
   '1' ->
   '2' ->
    break@SWITCH_1
   else ->
    return Unit
  } while (false)
  SWITCH_2@ do when (1) {
   -2 ->
   1 ->
   2 ->
    break@SWITCH_2
   else ->
    return Unit
  } while (false)
  SWITCH_3@ do when (switchstatement.Numbers.ONE) {
   switchstatement.Numbers.ONE ->
   switchstatement.Numbers.TWO ->
    break@SWITCH_3
   else ->
    return Unit
  } while (false)
 }

 companion object {
  @JvmStatic
  private fun testSwitchVariableDeclarations() {
   SWITCH@ do when (3) {
    1 ->
     val unassigned: Int; val unassigned2: Int
     val i: Int = 0
     val j: Int = 2; val b: Int = j + 1
     break@SWITCH
    3 ->
     i = 3
     assert(i == 3)
     return Unit
   } while (false)
   SWITCH_1@ do when (5) {
    5 ->
     val i: Int = 1
     break@SWITCH_1
   } while (false)
   assert(false)
  }
 }
}

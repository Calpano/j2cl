;;; Code for switchstatement.SwitchStatement

;;; ENUM  Numbers
(type $switchstatement.Numbers (struct
 (field $name@java.lang.Enum (mut (ref null $java.lang.String)))
 (field $ordinal@java.lang.Enum (mut i32))
))
(global $ONE@switchstatement.Numbers (mut (ref null $switchstatement.Numbers)) (ref.null $switchstatement.Numbers))
(global $TWO@switchstatement.Numbers (mut (ref null $switchstatement.Numbers)) (ref.null $switchstatement.Numbers))

;;; Numbers()
(func $m_<init>__void_$p_switchstatement_Numbers@switchstatement.Numbers
 (param $this (ref null $switchstatement.Numbers))
 (result (ref null $switchstatement.Numbers))
 (block $return.label
  (block
   ;; Enum.this.Enum.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  SwitchStatement
(type $switchstatement.SwitchStatement (struct
))

;;; SwitchStatement()
(func $m_<init>__void@switchstatement.SwitchStatement
 (param $this (ref null $switchstatement.SwitchStatement))
 (result (ref null $switchstatement.SwitchStatement))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void SwitchStatement.main()
(func $m_main__void@switchstatement.SwitchStatement
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; switch ("one") {
   ;; unimplemented statement SwitchStatement
   ;; switch (49) {
   ;; unimplemented statement SwitchStatement
   ;; switch (1) {
   ;; unimplemented statement SwitchStatement
   ;; switch (switchstatement.Numbers.ONE) {
   ;; unimplemented statement SwitchStatement
  )
 )
)

;;; void SwitchStatement.testSwitchVariableDeclarations()
(func $m_testSwitchVariableDeclarations__void@switchstatement.SwitchStatement
 (local $unassigned i32)
 (local $unassigned2 i32)
 (local $i i32)
 (local $j i32)
 (local $b i32)
 (local $i_1 i32)
 (block $return.label
  (block
   ;; switch (3) {
   ;; unimplemented statement SwitchStatement
   ;; switch (5) {
   ;; unimplemented statement SwitchStatement
   ;; assert false;
   ;; unimplemented statement AssertStatement
  )
 )
)


;;; Code for jsbridgeaccidentaloverride.Main [vtable]
(global $jsbridgeaccidentaloverride.Main.vtable (mut (ref null $jsbridgeaccidentaloverride.Main.vtable)) (ref.null $jsbridgeaccidentaloverride.Main.vtable))

;;; Code for jsbridgeaccidentaloverride.MyJsType [vtable]
(global $jsbridgeaccidentaloverride.MyJsType.vtable (mut (ref null $jsbridgeaccidentaloverride.MyJsType.vtable)) (ref.null $jsbridgeaccidentaloverride.MyJsType.vtable))

;;; Code for jsbridgeaccidentaloverride.SubJsType [vtable]
(global $jsbridgeaccidentaloverride.SubJsType.vtable (mut (ref null $jsbridgeaccidentaloverride.SubJsType.vtable)) (ref.null $jsbridgeaccidentaloverride.SubJsType.vtable))

;;; Code for jsbridgeaccidentaloverride.Main [static fields]
(global $f_$initialized__jsbridgeaccidentaloverride_Main (mut i32) (i32.const 0))

;;; Code for jsbridgeaccidentaloverride.OtherInterface [static fields]
(global $f_$initialized__jsbridgeaccidentaloverride_OtherInterface (mut i32) (i32.const 0))

;;; Code for jsbridgeaccidentaloverride.MyJsType [static fields]
(global $f_$initialized__jsbridgeaccidentaloverride_MyJsType (mut i32) (i32.const 0))

;;; Code for jsbridgeaccidentaloverride.MyInterface [static fields]
(global $f_$initialized__jsbridgeaccidentaloverride_MyInterface (mut i32) (i32.const 0))

;;; Code for jsbridgeaccidentaloverride.SubJsType [static fields]
(global $f_$initialized__jsbridgeaccidentaloverride_SubJsType (mut i32) (i32.const 0))

;;; Code for jsbridgeaccidentaloverride.Main [CLASS]
(type $jsbridgeaccidentaloverride.Main (struct
 (field $vtable (ref null $jsbridgeaccidentaloverride.Main.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsbridgeaccidentaloverride.Main.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; Main()
(func $m_<init>__void@jsbridgeaccidentaloverride.Main
 (param $this (ref null $jsbridgeaccidentaloverride.Main))
 (result (ref null $jsbridgeaccidentaloverride.Main))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Main.test()
(func $m_test__void@jsbridgeaccidentaloverride.Main
 (param $this.untyped (ref null $java.lang.Object))
 (local $a (ref null $jsbridgeaccidentaloverride.MyJsType))
 (local $b (ref null $jsbridgeaccidentaloverride.SubJsType))
 (local $c (ref null $java.lang.Object))
 (local $d (ref null $java.lang.Object))
 (local $this (ref null $jsbridgeaccidentaloverride.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.Main.rtt)))
 (block $return.label
  (block
   ;; MyJsType a = new MyJsType.<init>();
   
   (local.set $a (call $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.MyJsType (struct.new_with_rtt $jsbridgeaccidentaloverride.MyJsType (global.get $jsbridgeaccidentaloverride.MyJsType.vtable) (i32.const 0) (global.get $jsbridgeaccidentaloverride.MyJsType.rtt))))
   ;; SubJsType b = new SubJsType.<init>();
   
   (local.set $b (call $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.SubJsType (struct.new_with_rtt $jsbridgeaccidentaloverride.SubJsType (global.get $jsbridgeaccidentaloverride.SubJsType.vtable) (i32.const 0) (global.get $jsbridgeaccidentaloverride.SubJsType.rtt))))
   ;; MyInterface c = new SubJsType.<init>();
   
   (local.set $c (call $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.SubJsType (struct.new_with_rtt $jsbridgeaccidentaloverride.SubJsType (global.get $jsbridgeaccidentaloverride.SubJsType.vtable) (i32.const 0) (global.get $jsbridgeaccidentaloverride.SubJsType.rtt))))
   ;; OtherInterface d = new SubJsType.<init>();
   
   (local.set $d (call $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.SubJsType (struct.new_with_rtt $jsbridgeaccidentaloverride.SubJsType (global.get $jsbridgeaccidentaloverride.SubJsType.vtable) (i32.const 0) (global.get $jsbridgeaccidentaloverride.SubJsType.rtt))))
   ;; a.foo(1);
   (drop (call_ref (local.get $a)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.MyJsType.vtable $m_foo__int__int (struct.get $jsbridgeaccidentaloverride.MyJsType $vtable(local.get $a)))))
   ;; b.foo(1);
   (drop (call_ref (local.get $b)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.MyJsType.vtable $m_foo__int__int (struct.get $jsbridgeaccidentaloverride.MyJsType $vtable(local.get $b)))))
   ;; c.foo(1);
   (drop (i32.const 0))
   ;; a.bar(1);
   (drop (call_ref (local.get $a)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.MyJsType.vtable $m_bar__int__int (struct.get $jsbridgeaccidentaloverride.MyJsType $vtable(local.get $a)))))
   ;; b.bar(1);
   (drop (call_ref (local.get $b)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.SubJsType.vtable $m_bar__int__int (struct.get $jsbridgeaccidentaloverride.SubJsType $vtable(local.get $b)))))
   ;; c.bar(1);
   (drop (i32.const 0))
   ;; a.fun(1);
   (drop (call_ref (local.get $a)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.MyJsType.vtable $m_fun__int__int (struct.get $jsbridgeaccidentaloverride.MyJsType $vtable(local.get $a)))))
   ;; b.fun(1);
   (drop (call_ref (local.get $b)(i32.const 1)(struct.get $jsbridgeaccidentaloverride.MyJsType.vtable $m_fun__int__int (struct.get $jsbridgeaccidentaloverride.MyJsType $vtable(local.get $b)))))
   ;; d.fun(1);
   (drop (i32.const 0))
  )
 )
)
(elem declare func $m_test__void@jsbridgeaccidentaloverride.Main)

;;; void Main.$clinit()
(func $$clinit__void@jsbridgeaccidentaloverride.Main
 (block $return.label
  (block
   ;; if (jsbridgeaccidentaloverride.Main.$initialized) return;
   (if (global.get $f_$initialized__jsbridgeaccidentaloverride_Main)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsbridgeaccidentaloverride.Main.$initialized = true);
   (global.set $f_$initialized__jsbridgeaccidentaloverride_Main (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.Main
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsbridgeaccidentaloverride.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.Main.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgeaccidentaloverride.Main();
   (local.set $return.value (call $$getJsbridgeaccidentaloverride.Main__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.Main)

;;; Code for jsbridgeaccidentaloverride.OtherInterface [INTERFACE]

;;; void OtherInterface.$clinit()
(func $$clinit__void@jsbridgeaccidentaloverride.OtherInterface
 (block $return.label
  (block
   ;; if (jsbridgeaccidentaloverride.OtherInterface.$initialized) return;
   (if (global.get $f_$initialized__jsbridgeaccidentaloverride_OtherInterface)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsbridgeaccidentaloverride.OtherInterface.$initialized = true);
   (global.set $f_$initialized__jsbridgeaccidentaloverride_OtherInterface (i32.const 1))
  )
 )
)

;;; Class<?> OtherInterface.getClass()
(func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.OtherInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgeaccidentaloverride.OtherInterface();
   (local.set $return.value (call $$getJsbridgeaccidentaloverride.OtherInterface__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.OtherInterface)

;;; Code for jsbridgeaccidentaloverride.MyJsType [CLASS]
(type $jsbridgeaccidentaloverride.MyJsType (struct
 (field $vtable (ref null $jsbridgeaccidentaloverride.MyJsType.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsbridgeaccidentaloverride.MyJsType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__int__int (mut (ref $function.$int__$int)))
 (field $m_bar__int__int (mut (ref $function.$int__$int)))
 (field $m_fun__int__int (mut (ref $function.$int__$int)))
))

;;; MyJsType()
(func $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.MyJsType
 (param $this (ref null $jsbridgeaccidentaloverride.MyJsType))
 (result (ref null $jsbridgeaccidentaloverride.MyJsType))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int MyJsType.foo(int a)
(func $m_foo__int__int@jsbridgeaccidentaloverride.MyJsType
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsbridgeaccidentaloverride.MyJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.MyJsType.rtt)))
 (block $return.label
  (block
   ;; return a;
   (local.set $return.value (local.get $a))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_foo__int__int@jsbridgeaccidentaloverride.MyJsType)

;;; int MyJsType.bar(int a)
(func $m_bar__int__int@jsbridgeaccidentaloverride.MyJsType
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsbridgeaccidentaloverride.MyJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.MyJsType.rtt)))
 (block $return.label
  (block
   ;; return (a + 1);
   (local.set $return.value (i32.add (local.get $a) (i32.const 1)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_bar__int__int@jsbridgeaccidentaloverride.MyJsType)

;;; int MyJsType.fun(int a)
(func $m_fun__int__int@jsbridgeaccidentaloverride.MyJsType
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsbridgeaccidentaloverride.MyJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.MyJsType.rtt)))
 (block $return.label
  (block
   ;; return (a - 1);
   (local.set $return.value (i32.sub (local.get $a) (i32.const 1)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_fun__int__int@jsbridgeaccidentaloverride.MyJsType)

;;; void MyJsType.$clinit()
(func $$clinit__void@jsbridgeaccidentaloverride.MyJsType
 (block $return.label
  (block
   ;; if (jsbridgeaccidentaloverride.MyJsType.$initialized) return;
   (if (global.get $f_$initialized__jsbridgeaccidentaloverride_MyJsType)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsbridgeaccidentaloverride.MyJsType.$initialized = true);
   (global.set $f_$initialized__jsbridgeaccidentaloverride_MyJsType (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> MyJsType.getClass()
(func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.MyJsType
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsbridgeaccidentaloverride.MyJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.MyJsType.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgeaccidentaloverride.MyJsType();
   (local.set $return.value (call $$getJsbridgeaccidentaloverride.MyJsType__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.MyJsType)

;;; Code for jsbridgeaccidentaloverride.MyInterface [INTERFACE]

;;; void MyInterface.$clinit()
(func $$clinit__void@jsbridgeaccidentaloverride.MyInterface
 (block $return.label
  (block
   ;; if (jsbridgeaccidentaloverride.MyInterface.$initialized) return;
   (if (global.get $f_$initialized__jsbridgeaccidentaloverride_MyInterface)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsbridgeaccidentaloverride.MyInterface.$initialized = true);
   (global.set $f_$initialized__jsbridgeaccidentaloverride_MyInterface (i32.const 1))
  )
 )
)

;;; Class<?> MyInterface.getClass()
(func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.MyInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgeaccidentaloverride.MyInterface();
   (local.set $return.value (call $$getJsbridgeaccidentaloverride.MyInterface__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.MyInterface)

;;; Code for jsbridgeaccidentaloverride.SubJsType [CLASS]
(type $jsbridgeaccidentaloverride.SubJsType (struct
 (field $vtable (ref null $jsbridgeaccidentaloverride.SubJsType.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsbridgeaccidentaloverride.SubJsType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_foo__int__int (mut (ref $function.$int__$int)))
 (field $m_bar__int__int (mut (ref $function.$int__$int)))
 (field $m_fun__int__int (mut (ref $function.$int__$int)))
))

;;; SubJsType()
(func $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.SubJsType
 (param $this (ref null $jsbridgeaccidentaloverride.SubJsType))
 (result (ref null $jsbridgeaccidentaloverride.SubJsType))
 (block $return.label
  (block
   ;; MyJsType.this.MyJsType.<init>();
   (drop (call $m_<init>__void_$pp_jsbridgeaccidentaloverride@jsbridgeaccidentaloverride.MyJsType (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int SubJsType.bar(int a)
(func $m_bar__int__int@jsbridgeaccidentaloverride.SubJsType
 (param $this.untyped (ref null $java.lang.Object))
 (param $a i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $jsbridgeaccidentaloverride.SubJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.SubJsType.rtt)))
 (block $return.label
  (block
   ;; return (a + 2);
   (local.set $return.value (i32.add (local.get $a) (i32.const 2)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_bar__int__int@jsbridgeaccidentaloverride.SubJsType)

;;; void SubJsType.$clinit()
(func $$clinit__void@jsbridgeaccidentaloverride.SubJsType
 (block $return.label
  (block
   ;; if (jsbridgeaccidentaloverride.SubJsType.$initialized) return;
   (if (global.get $f_$initialized__jsbridgeaccidentaloverride_SubJsType)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsbridgeaccidentaloverride.SubJsType.$initialized = true);
   (global.set $f_$initialized__jsbridgeaccidentaloverride_SubJsType (i32.const 1))
   ;; jsbridgeaccidentaloverride.MyJsType.$clinit();
   (call $$clinit__void@jsbridgeaccidentaloverride.MyJsType )
  )
 )
)

;;; Class<?> SubJsType.getClass()
(func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.SubJsType
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $jsbridgeaccidentaloverride.SubJsType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsbridgeaccidentaloverride.SubJsType.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getJsbridgeaccidentaloverride.SubJsType();
   (local.set $return.value (call $$getJsbridgeaccidentaloverride.SubJsType__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.SubJsType)

 ;;; Code for jsbridgeaccidentaloverride.Main [vtable.init]
 (global.set $jsbridgeaccidentaloverride.Main.vtable (struct.new_with_rtt $jsbridgeaccidentaloverride.Main.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.Main) (ref.func $m_test__void@jsbridgeaccidentaloverride.Main) (rtt.canon $jsbridgeaccidentaloverride.Main.vtable)))

 ;;; Code for jsbridgeaccidentaloverride.MyJsType [vtable.init]
 (global.set $jsbridgeaccidentaloverride.MyJsType.vtable (struct.new_with_rtt $jsbridgeaccidentaloverride.MyJsType.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.MyJsType) (ref.func $m_foo__int__int@jsbridgeaccidentaloverride.MyJsType) (ref.func $m_bar__int__int@jsbridgeaccidentaloverride.MyJsType) (ref.func $m_fun__int__int@jsbridgeaccidentaloverride.MyJsType) (rtt.canon $jsbridgeaccidentaloverride.MyJsType.vtable)))

 ;;; Code for jsbridgeaccidentaloverride.SubJsType [vtable.init]
 (global.set $jsbridgeaccidentaloverride.SubJsType.vtable (struct.new_with_rtt $jsbridgeaccidentaloverride.SubJsType.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@jsbridgeaccidentaloverride.SubJsType) (ref.func $m_foo__int__int@jsbridgeaccidentaloverride.MyJsType) (ref.func $m_bar__int__int@jsbridgeaccidentaloverride.SubJsType) (ref.func $m_fun__int__int@jsbridgeaccidentaloverride.MyJsType) (rtt.canon $jsbridgeaccidentaloverride.SubJsType.vtable)))

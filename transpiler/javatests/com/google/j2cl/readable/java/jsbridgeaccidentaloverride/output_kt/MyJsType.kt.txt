// Generated from "jsbridgeaccidentaloverride/MyJsType.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package jsbridgeaccidentaloverride

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

fun interface OtherInterface {
 @ObjCName("fun")
 fun `fun`(
  @ObjCName("withInt") a: Int
 ): Int
}

@ObjCName("JsbridgeaccidentaloverrideMyJsType", exact = true)
open class MyJsType: OtherInterface {
 constructor()

 @ObjCName("foo")
 open fun foo(
  @ObjCName("withInt") a: Int
 ): Int {
  return a
 }

 @ObjCName("bar")
 open fun bar(
  @ObjCName("withInt") a: Int
 ): Int {
  return a + 1
 }

 open override fun `fun`(a: Int): Int {
  return a - 1
 }
}

interface MyInterface {
 @ObjCName("foo")
 fun foo(
  @ObjCName("withInt") a: Int
 ): Int

 @ObjCName("bar")
 fun bar(
  @ObjCName("withInt") a: Int
 ): Int
}

open class SubJsType: MyJsType(), MyInterface {
 open override fun bar(a: Int): Int {
  return a + 2
 }
}

package localclasswithoutergenerics

open class LocalClassWithOuterGenerics<A> {
 constructor(): super()

 companion object {
  @JvmStatic
  fun <T> foo() {
   val bar: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Bar`<T>? = localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Bar`<T>()
   val baz: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Baz`<kotlin.Any?, T>? = localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Baz`<kotlin.Any?, T>()
  }
 }
}

open class `LocalClassWithOuterGenerics$1Bar`<T> {
 internal constructor(): super()

 internal open fun baz(other: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Bar`<T>?) {}
}

open class `LocalClassWithOuterGenerics$1Baz`<S, T> {
 internal constructor(): super()

 internal open fun qux(foo: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Baz`<S, T>?, bar: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Baz`<T, T>?, baz: localclasswithoutergenerics.`LocalClassWithOuterGenerics$1Baz`<kotlin.String?, T>?) {}
}

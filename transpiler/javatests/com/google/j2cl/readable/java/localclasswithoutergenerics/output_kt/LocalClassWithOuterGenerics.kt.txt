package localclasswithoutergenerics

open class LocalClassWithOuterGenerics {
 companion object {
  @JvmStatic
  fun foo() {
   val bar: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Bar`<T>? = localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Bar`<T>()
   val baz: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Baz`<Any?, T>? = localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Baz`<Any?, T>()
  }
 }
}

open class `1Bar` {
 internal open fun baz(other: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Bar`<T>?) {}
}

open class `1Baz` {
 internal open fun qux(foo: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Baz`<S, T>?, bar: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Baz`<T, T>?, baz: localclasswithoutergenerics.LocalClassWithOuterGenerics.`1Baz`<String?, T>?) {}
}

// Generated from "nativekttypes/NullabilityPropagation.java"
@file:OptIn(ExperimentalObjCName::class)

package nativekttypes

import javaemul.lang.*
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("NativekttypesNullabilityPropagation", exact = true)
class NullabilityPropagation {
 interface NullabilityToPropagate {
  @ObjCName("nullableReturnType1")
  fun nullableReturnType1(): String?

  @ObjCName("nullableReturnType2")
  fun nullableReturnType2(): String?

  @ObjCName("nonNullReturnType1")
  fun nonNullReturnType1(): String

  @ObjCName("nonNullReturnType2")
  fun nonNullReturnType2(): String

  @ObjCName("nullableParameter1")
  fun nullableParameter1(
   @ObjCName("withNSString") s: String?
  )

  @ObjCName("nullableParameter2")
  fun nullableParameter2(
   @ObjCName("withNSString") s: String?
  )

  @ObjCName("nonNullParameter1")
  fun nonNullParameter1(
   @ObjCName("withNSString") s: String
  )

  @ObjCName("nonNullParameter2")
  fun nonNullParameter2(
   @ObjCName("withNSString") s: String
  )
 }

 open inner class Subtype: NullabilityPropagation.NullabilityToPropagate {
  open override fun nullableReturnType1(): String? {
   return ""
  }

  open override fun nullableReturnType2(): String {
   return ""
  }

  open override fun nonNullReturnType1(): String {
   return ""
  }

  open override fun nonNullReturnType2(): String {
   return ""
  }

  open override fun nullableParameter1(s: String?) {}

  open override fun nullableParameter2(s: String?) {}

  open override fun nonNullParameter1(s: String) {}

  open override fun nonNullParameter2(s: String) {}
 }
}

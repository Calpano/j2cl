goog.module('nativekttypes.Subsubclass$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const Subclass = goog.require('nativekttypes.Subclass$impl');

/**
 * @template V
 * @extends {Subclass<V>}
 */
class Subsubclass extends Subclass {
 
 constructor(/** V */ v) {
  Subsubclass.$clinit();
  super(v);
  this.$ctor__nativekttypes_Subsubclass__java_lang_Object(v);
 }
 /** @nodts */
 $ctor__nativekttypes_Subsubclass__java_lang_Object(/** V */ v) {}
 /** @override @return {number} */
 methodToRename() {
  return super.methodToRename();
 }
 /** @override @return {number} */
 getMethodAsProperty() {
  return super.getMethodAsProperty();
 }
 /** @override @return {number} */
 nonGetMethodAsProperty() {
  return super.nonGetMethodAsProperty();
 }
 /** @override @return {number} */
 methodToRenameAsProperty() {
  return super.methodToRenameAsProperty();
 }
 /** @override @return {number} */
 getMethodToRenameAsProperty() {
  return super.getMethodToRenameAsProperty();
 }
 /** @override @return {boolean} */
 isMethodAsProperty() {
  return super.isMethodAsProperty();
 }
 /** @override @return {number} */
 getstartingmethodAsProperty() {
  return super.getstartingmethodAsProperty();
 }
 /** @override @nodts @return {number} */
 m_interfaceMethod__java_lang_Object(/** V */ v) {
  return 0;
 }
 /** @override @nodts @return {number} */
 m_interfaceMethodToRename__java_lang_Object(/** V */ v) {
  return 0;
 }
 /** @override @nodts @return {number} */
 m_getInterfaceMethodAsProperty__() {
  return 0;
 }
 /** @override @nodts @return {number} */
 m_interfaceMethodToRenameAsProperty__() {
  return 0;
 }
 /** @nodts */
 static $clinit() {
  Subsubclass.$clinit = () =>{};
  Subsubclass.$loadModules();
  Subclass.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Subsubclass;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(Subsubclass, 'nativekttypes.Subsubclass');

exports = Subsubclass;

//# sourceMappingURL=Subsubclass.js.map

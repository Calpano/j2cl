goog.module('nativekttypes.KtPropertyNameConflict.Subclass$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const KtPropertyNameConflict = goog.require('nativekttypes.KtPropertyNameConflict$impl');
const Interface = goog.require('nativekttypes.KtPropertyNameConflict.Interface$impl');

/**
 * @abstract
 * @implements {Interface}
 */
class Subclass extends KtPropertyNameConflict {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {KtPropertyNameConflict} @nodts*/
  this.$outer_this__nativekttypes_KtPropertyNameConflict_Subclass;
  /**@type {number} @nodts*/
  this.f_fieldWithConflictingSuperMethod__nativekttypes_KtPropertyNameConflict_Subclass = 0;
  /**@type {number} @nodts*/
  this.f_fieldWithConflictingInterfaceMethod__nativekttypes_KtPropertyNameConflict_Subclass = 0;
 }
 /** @nodts */
 $ctor__nativekttypes_KtPropertyNameConflict_Subclass__nativekttypes_KtPropertyNameConflict__void(/** KtPropertyNameConflict */ $outer_this) {
  this.$outer_this__nativekttypes_KtPropertyNameConflict_Subclass = $outer_this;
  this.$ctor__nativekttypes_KtPropertyNameConflict__void();
 }
 /** @override @nodts @return {number} */
 m_fieldWithConflictingInterfaceMethod__int() {
  return this.f_fieldWithConflictingInterfaceMethod__nativekttypes_KtPropertyNameConflict_Subclass;
 }
 /** @nodts */
 static $clinit() {
  Subclass.$clinit = () =>{};
  Subclass.$loadModules();
  KtPropertyNameConflict.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Subclass;
 }
 
 /** @nodts */
 static $loadModules() {}
}
Interface.$markImplementor(Subclass);
$Util.$setClassMetadata(Subclass, 'nativekttypes.KtPropertyNameConflict$Subclass');

exports = Subclass;

//# sourceMappingURL=KtPropertyNameConflict$Subclass.js.map

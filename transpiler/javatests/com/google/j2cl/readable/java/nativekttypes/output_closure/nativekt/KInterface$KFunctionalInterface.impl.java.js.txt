goog.module('nativekttypes.nativekt.KInterface.KFunctionalInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('nativekttypes.nativekt.KInterface.KFunctionalInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class KFunctionalInterface {
 /** @abstract @nodts */
 m_run__void() {}
 /** @nodts @return {KFunctionalInterface} */
 static $adapt(/** ?function():void */ fn) {
  KFunctionalInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  KFunctionalInterface.$clinit = () =>{};
  KFunctionalInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__nativekttypes_nativekt_KInterface_KFunctionalInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__nativekttypes_nativekt_KInterface_KFunctionalInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('nativekttypes.nativekt.KInterface.KFunctionalInterface.$LambdaAdaptor$impl');
 }
}
KFunctionalInterface.$markImplementor(/**@type {Function}*/ (KFunctionalInterface));
$Util.$setClassMetadataForInterface(KFunctionalInterface, 'nativekttypes.nativekt.KInterface$KFunctionalInterface');

exports = KFunctionalInterface;

//# sourceMappingURL=KInterface$KFunctionalInterface.js.map

goog.module('nativekttypes.Main.$2$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const NativeFunctionalInterface = goog.require('nativekttypes.NativeInterface.NativeFunctionalInterface$impl');

let Main = goog.forwardDeclare('nativekttypes.Main$impl');

/**
 * @implements {NativeFunctionalInterface}
 */
class $2 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {Main} @nodts*/
  this.$outer_this__nativekttypes_Main_2;
 }
 /** @nodts @return {!$2} */
 static $create__nativekttypes_Main(/** Main */ $outer_this) {
  $2.$clinit();
  let $instance = new $2();
  $instance.$ctor__nativekttypes_Main_2__nativekttypes_Main__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__nativekttypes_Main_2__nativekttypes_Main__void(/** Main */ $outer_this) {
  this.$outer_this__nativekttypes_Main_2 = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @override @nodts */
 m_run__void() {}
 /** @nodts */
 static $clinit() {
  $2.$clinit = () =>{};
  $2.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $2;
 }
 
 /** @nodts */
 static $loadModules() {}
}
NativeFunctionalInterface.$markImplementor($2);
$Util.$setClassMetadata($2, 'nativekttypes.Main$2');

exports = $2;

//# sourceMappingURL=Main$2.js.map

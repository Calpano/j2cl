// Generated from "j2kt/ObjCName.java"
@file:OptIn(ExperimentalObjCName::class)

package j2kt

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("NewObjCName", exact = true)
open class ObjCName {
 constructor()

 constructor(
  @ObjCName("Integer", exact = false) i: Int
 )

 constructor(
  @ObjCName("Int", exact = false) i: Int,
  @ObjCName("withNSString", exact = false) s: String?
 )

 @ObjCName("newFoo", exact = false)
 open fun foo() {}

 @ObjCName("newProtectedFoo", exact = false)
 open fun protectedFoo() {}

 @ObjCName("newFoo", exact = false)
 open fun newFoo(
  @ObjCName("FromInt", exact = false) i: Int
 ) {}

 @ObjCName("newFoo", exact = false)
 open fun foo(
  @ObjCName("FromInt", exact = false) s: String?,
  @ObjCName("withInteger", exact = false) i: Int
 ) {}

 open fun foo(
  @ObjCName("withNSString", exact = false) s: String?,
  @ObjCName("withNSString", exact = false) i: String?
 ) {}

 @ObjCName("InnerClassNewName", exact = true)
 open inner class InnerClassOldName {}
}

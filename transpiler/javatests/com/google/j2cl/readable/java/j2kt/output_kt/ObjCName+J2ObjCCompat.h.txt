// Generated by J2KT from "j2kt/ObjCName.java"

#import <Foundation/Foundation.h>

#import "third_party/java_src/j2objc/jre_emul/Classes/J2ObjC_types.h"

@class NewObjCName;
@class NewObjCName_Foo;
@class NewObjCName_NonCollection;

NS_INLINE void NewObjCName_NonCollection_staticMethod(void) {
 [NewObjCName_NonCollectionCompanion.shared staticMethod];
}

typedef NS_ENUM(NSUInteger, NewObjCName_Foo_Enum) {
 NewObjCName_Foo_Enum_val = 0,
 NewObjCName_Foo_Enum_var = 1,
 NewObjCName_Foo_Enum_fun = 2,
 NewObjCName_Foo_Enum_alloc = 3,
 NewObjCName_Foo_Enum_init = 4,
 NewObjCName_Foo_Enum_initialize = 5,
 NewObjCName_Foo_Enum_allocFoo = 6,
 NewObjCName_Foo_Enum_initFoo = 7,
 NewObjCName_Foo_Enum_newFoo = 8,
 NewObjCName_Foo_Enum_copyFoo = 9,
 NewObjCName_Foo_Enum_mutableCopyFoo = 10,
 NewObjCName_Foo_Enum_register = 11,
 NewObjCName_Foo_Enum_struct = 12,
 NewObjCName_Foo_Enum_NULL = 13,
 NewObjCName_Foo_Enum_YES = 14,
 NewObjCName_Foo_Enum_NO = 15,
};

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_val(void) {
 return NewObjCName_Foo.val;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_var(void) {
 return NewObjCName_Foo.var;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_fun(void) {
 return NewObjCName_Foo.fun;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_alloc(void) {
 return NewObjCName_Foo.theAlloc__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_init(void) {
 return NewObjCName_Foo.theInit__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_initialize(void) {
 return NewObjCName_Foo.initialize__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_allocFoo(void) {
 return NewObjCName_Foo.theAllocFoo;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_initFoo(void) {
 return NewObjCName_Foo.theInitFoo;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_newFoo(void) {
 return NewObjCName_Foo.theNewFoo;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_copyFoo(void) {
 return NewObjCName_Foo.theCopyFoo;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_mutableCopyFoo(void) {
 return NewObjCName_Foo.theMutableCopyFoo;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_register(void) {
 return NewObjCName_Foo.register__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_struct(void) {
 return NewObjCName_Foo.struct__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_NULL(void) {
 return NewObjCName_Foo.NULL__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_YES(void) {
 return NewObjCName_Foo.YES__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_get_NO(void) {
 return NewObjCName_Foo.NO__;
}

NS_INLINE NewObjCName_Foo* NewObjCName_Foo_withOrdinalWithInt_(jint ordinal) {
 return [NewObjCName_FooCompanion.shared withOrdinalWithInt:ordinal];
}

#define NewObjCName_BOOLEAN_FALSE false

#define NewObjCName_BOOLEAN_TRUE true

#define NewObjCName_CHAR 'a'

#define NewObjCName_CHAR_APOSTROPHE '\''

#define NewObjCName_CHAR_BACKSLASH '\\'

#define NewObjCName_CHAR_UNICODE 0x1231

#define NewObjCName_BYTE 123

#define NewObjCName_SHORT 123

#define NewObjCName_INT 123

#define NewObjCName_INT_MIN_VALUE ((jint) 0x80000000)

#define NewObjCName_INT_MAX_VALUE 2147483647

#define NewObjCName_LONG 123LL

#define NewObjCName_LONG_MIN_VALUE ((jlong) 0x8000000000000000LL)

#define NewObjCName_LONG_MAX_VALUE 9223372036854775807LL

#define NewObjCName_FLOAT 123.0f

#define NewObjCName_FLOAT_ZER0 0.0f

#define NewObjCName_FLOAT_NEGATIVE_ZERO -0.0f

#define NewObjCName_FLOAT_NAN NAN

#define NewObjCName_FLOAT_NEGATIVE_INFINITY -INFINITY

#define NewObjCName_FLOAT_POSITIVE_INFINITY INFINITY

#define NewObjCName_FLOAT_MIN_VALUE 1.4E-45f

#define NewObjCName_FLOAT_MIN_NORMAL 1.1754944E-38f

#define NewObjCName_FLOAT_MIN_EXPONENT -126.0f

#define NewObjCName_FLOAT_MAX_VALUE __FLT_MAX__

#define NewObjCName_FLOAT_MAX_EXPONENT 127.0f

#define NewObjCName_DOUBLE 123.0

#define NewObjCName_DOUBLE_ZER0 0.0

#define NewObjCName_DOUBLE_NEGATIVE_ZERO -0.0

#define NewObjCName_DOUBLE_NAN NAN

#define NewObjCName_DOUBLE_NEGATIVE_INFINITY -INFINITY

#define NewObjCName_DOUBLE_POSITIVE_INFINITY INFINITY

#define NewObjCName_DOUBLE_MIN_VALUE 4.9E-324

#define NewObjCName_DOUBLE_MIN_NORMAL 2.2250738585072014E-308

#define NewObjCName_DOUBLE_MIN_EXPONENT -1022.0

#define NewObjCName_DOUBLE_MAX_VALUE __DLB_MAX__

#define NewObjCName_DOUBLE_MAX_EXPONENT 1023.0

NS_INLINE jint NewObjCName_get_publicStaticField(void) {
 return NewObjCNameCompanion.shared.publicStaticField_;
}

NS_INLINE id NewObjCName_get_objectField(void) {
 return NewObjCNameCompanion.shared.objectField_;
}

NS_INLINE NSString* NewObjCName_get_stringField(void) {
 return NewObjCNameCompanion.shared.stringField_;
}

NS_INLINE NewObjCName* NewObjCName_get_selfField(void) {
 return NewObjCNameCompanion.shared.selfField_;
}

NS_INLINE jint NewObjCName_get_val(void) {
 return NewObjCNameCompanion.shared.val_;
}

NS_INLINE jint NewObjCName_get_var(void) {
 return NewObjCNameCompanion.shared.var_;
}

NS_INLINE jint NewObjCName_get_fun(void) {
 return NewObjCNameCompanion.shared.fun_;
}

NS_INLINE jint NewObjCName_get_alloc(void) {
 return NewObjCNameCompanion.shared.doAlloc___;
}

NS_INLINE jint NewObjCName_get_init(void) {
 return NewObjCNameCompanion.shared.doInit___;
}

NS_INLINE jint NewObjCName_get_extern(void) {
 return NewObjCNameCompanion.shared.extern___;
}

NS_INLINE jint NewObjCName_get_inline(void) {
 return NewObjCNameCompanion.shared.inline___;
}

NS_INLINE jint NewObjCName_get_NULL(void) {
 return NewObjCNameCompanion.shared.NULL___;
}

NS_INLINE jint NewObjCName_get_allocFoo(void) {
 return NewObjCNameCompanion.shared.doAllocFoo_;
}

NS_INLINE jint NewObjCName_get_initFoo(void) {
 return NewObjCNameCompanion.shared.doInitFoo_;
}

NS_INLINE jint NewObjCName_get_newFoo(void) {
 return NewObjCNameCompanion.shared.doNewFoo_;
}

NS_INLINE jboolean NewObjCName_get_BOOLEAN_FALSE(void) {
 return NewObjCNameCompanion.shared.BOOLEAN_FALSE_;
}

NS_INLINE jboolean NewObjCName_get_BOOLEAN_TRUE(void) {
 return NewObjCNameCompanion.shared.BOOLEAN_TRUE_;
}

NS_INLINE jchar NewObjCName_get_CHAR(void) {
 return NewObjCNameCompanion.shared.CHAR_;
}

NS_INLINE jchar NewObjCName_get_CHAR_APOSTROPHE(void) {
 return NewObjCNameCompanion.shared.CHAR_APOSTROPHE_;
}

NS_INLINE jchar NewObjCName_get_CHAR_BACKSLASH(void) {
 return NewObjCNameCompanion.shared.CHAR_BACKSLASH_;
}

NS_INLINE jchar NewObjCName_get_CHAR_UNICODE(void) {
 return NewObjCNameCompanion.shared.CHAR_UNICODE_;
}

NS_INLINE jbyte NewObjCName_get_BYTE(void) {
 return NewObjCNameCompanion.shared.BYTE_;
}

NS_INLINE jshort NewObjCName_get_SHORT(void) {
 return NewObjCNameCompanion.shared.SHORT_;
}

NS_INLINE jint NewObjCName_get_INT(void) {
 return NewObjCNameCompanion.shared.INT_;
}

NS_INLINE jint NewObjCName_get_INT_MIN_VALUE(void) {
 return NewObjCNameCompanion.shared.INT_MIN_VALUE_;
}

NS_INLINE jint NewObjCName_get_INT_MAX_VALUE(void) {
 return NewObjCNameCompanion.shared.INT_MAX_VALUE_;
}

NS_INLINE jlong NewObjCName_get_LONG(void) {
 return NewObjCNameCompanion.shared.LONG_;
}

NS_INLINE jlong NewObjCName_get_LONG_MIN_VALUE(void) {
 return NewObjCNameCompanion.shared.LONG_MIN_VALUE_;
}

NS_INLINE jlong NewObjCName_get_LONG_MAX_VALUE(void) {
 return NewObjCNameCompanion.shared.LONG_MAX_VALUE_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT(void) {
 return NewObjCNameCompanion.shared.FLOAT_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_ZER0(void) {
 return NewObjCNameCompanion.shared.FLOAT_ZER0_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_NEGATIVE_ZERO(void) {
 return NewObjCNameCompanion.shared.FLOAT_NEGATIVE_ZERO_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_NAN(void) {
 return NewObjCNameCompanion.shared.FLOAT_NAN_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_NEGATIVE_INFINITY(void) {
 return NewObjCNameCompanion.shared.FLOAT_NEGATIVE_INFINITY_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_POSITIVE_INFINITY(void) {
 return NewObjCNameCompanion.shared.FLOAT_POSITIVE_INFINITY_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_MIN_VALUE(void) {
 return NewObjCNameCompanion.shared.FLOAT_MIN_VALUE_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_MIN_NORMAL(void) {
 return NewObjCNameCompanion.shared.FLOAT_MIN_NORMAL_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_MIN_EXPONENT(void) {
 return NewObjCNameCompanion.shared.FLOAT_MIN_EXPONENT_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_MAX_VALUE(void) {
 return NewObjCNameCompanion.shared.FLOAT_MAX_VALUE_;
}

NS_INLINE jfloat NewObjCName_get_FLOAT_MAX_EXPONENT(void) {
 return NewObjCNameCompanion.shared.FLOAT_MAX_EXPONENT_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE(void) {
 return NewObjCNameCompanion.shared.DOUBLE_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_ZER0(void) {
 return NewObjCNameCompanion.shared.DOUBLE_ZER0_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_NEGATIVE_ZERO(void) {
 return NewObjCNameCompanion.shared.DOUBLE_NEGATIVE_ZERO_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_NAN(void) {
 return NewObjCNameCompanion.shared.DOUBLE_NAN_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_NEGATIVE_INFINITY(void) {
 return NewObjCNameCompanion.shared.DOUBLE_NEGATIVE_INFINITY_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_POSITIVE_INFINITY(void) {
 return NewObjCNameCompanion.shared.DOUBLE_POSITIVE_INFINITY_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_MIN_VALUE(void) {
 return NewObjCNameCompanion.shared.DOUBLE_MIN_VALUE_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_MIN_NORMAL(void) {
 return NewObjCNameCompanion.shared.DOUBLE_MIN_NORMAL_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_MIN_EXPONENT(void) {
 return NewObjCNameCompanion.shared.DOUBLE_MIN_EXPONENT_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_MAX_VALUE(void) {
 return NewObjCNameCompanion.shared.DOUBLE_MAX_VALUE_;
}

NS_INLINE jdouble NewObjCName_get_DOUBLE_MAX_EXPONENT(void) {
 return NewObjCNameCompanion.shared.DOUBLE_MAX_EXPONENT_;
}

NS_INLINE NSString* NewObjCName_get_STRING(void) {
 return NewObjCNameCompanion.shared.STRING_;
}

NS_INLINE void NewObjCName_newFoo(void) {
 [NewObjCNameCompanion.shared doNewFoo];
}

NS_INLINE void NewObjCName_newFooFromInt_(jint i) {
 [NewObjCNameCompanion.shared doNewFooFromInt:i];
}

NS_INLINE void NewObjCName_newFooFromInt_withInteger_(NSString* s, jint i) {
 [NewObjCNameCompanion.shared doNewFooFromInt:s withInteger:i];
}

NS_INLINE void NewObjCName_fooWithNSString_withNSString_(NSString* s, NSString* i) {
 [NewObjCNameCompanion.shared fooWithNSString:s withNSString:i];
}

NS_INLINE void NewObjCName_val(void) {
 [NewObjCNameCompanion.shared val];
}

NS_INLINE void NewObjCName_var(void) {
 [NewObjCNameCompanion.shared var];
}

NS_INLINE void NewObjCName_fun(void) {
 [NewObjCNameCompanion.shared fun];
}

NS_INLINE void NewObjCName_alloc__(void) {
 [NewObjCNameCompanion.shared doAlloc__];
}

NS_INLINE void NewObjCName_allocBar(void) {
 [NewObjCNameCompanion.shared doAllocBar];
}

NS_INLINE void NewObjCName_allocatedBar(void) {
 [NewObjCNameCompanion.shared allocatedBar];
}

NS_INLINE void NewObjCName_init__(void) {
 [NewObjCNameCompanion.shared doInit__];
}

NS_INLINE void NewObjCName_initialize__(void) {
 [NewObjCNameCompanion.shared initialize__];
}

NS_INLINE void NewObjCName_initBar(void) {
 [NewObjCNameCompanion.shared doInitBar];
}

NS_INLINE void NewObjCName_newBar(void) {
 [NewObjCNameCompanion.shared doNewBar];
}

NS_INLINE void NewObjCName_copyBar(void) {
 [NewObjCNameCompanion.shared doCopyBar];
}

NS_INLINE void NewObjCName_mutableCopyBar(void) {
 [NewObjCNameCompanion.shared doMutableCopyBar];
}

NS_INLINE void NewObjCName_reservedParamNamesWithInt_withInt_withInt_withInt_(jint extern_, jint struct_, jint register_, jint inline_) {
 [NewObjCNameCompanion.shared reservedParamNamesWithInt:extern_ withInt:struct_ withInt:register_ withInt:inline_];
}

NS_INLINE NSString* NewObjCName_nativeTypesWithNSString_withId_withNSNumber_(NSString* s, id o, NSNumber* n) {
 return [NewObjCNameCompanion.shared nativeTypesWithNSString:s withId:o withNSNumber:n];
}

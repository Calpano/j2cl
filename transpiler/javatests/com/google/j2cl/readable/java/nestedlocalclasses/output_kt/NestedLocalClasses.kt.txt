package nestedlocalclasses

open class NestedLocalClasses {
 fun test(p: Int) {
  var localVar: Int = 1
 }
}

open class `1InnerClass` {
 fun fun() {
  var localVarInInnerClass: Int = 1
  TODO("expression.qualify needs rendering: \$1InnerClass.this)")
 }
}

open class `1InnerInnerClass` {}

open class `1ClassIndirectlyCapturingLocal` {}

interface InterfaceWithThisReference {
 fun foo() {
  TODO("expression.qualify needs rendering: InterfaceWithThisReference.this)")
 }
}

open class `1Super`: nestedlocalclasses.NestedLocalClasses.InterfaceWithThisReference {}

open class `1`: nestedlocalclasses.NestedLocalClasses.InterfaceWithThisReference.`1Super` {
 fun <init>(): nestedlocalclasses.NestedLocalClasses.InterfaceWithThisReference.`1` {
  super()
 }
}

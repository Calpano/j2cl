// Generated from "nestedlocalclasses/NestedLocalClasses.java"
package nestedlocalclasses

import javaemul.lang.*
import kotlin.jvm.*

open class NestedLocalClasses {
 open fun test(p: kotlin.Int) {
  val localVar: kotlin.Int = 1
  open class ___1InnerClass {
   open fun `fun`() {
    val localVarInInnerClass: kotlin.Int = 1
    open class ___1InnerInnerClass {
     @kotlin.jvm.JvmField var fieldInInnerInnerClass: kotlin.Int = localVar + localVarInInnerClass
    }
    ___1InnerInnerClass()
    open class ___1ClassIndirectlyCapturingLocal {
     init {
      ___1InnerInnerClass()
     }
    }
   }
  }
 }

 interface InterfaceWithThisReference {
  fun foo() {
   open class ___1Super: nestedlocalclasses.NestedLocalClasses.InterfaceWithThisReference {}
   object : ___1Super() {}
  }
 }
}

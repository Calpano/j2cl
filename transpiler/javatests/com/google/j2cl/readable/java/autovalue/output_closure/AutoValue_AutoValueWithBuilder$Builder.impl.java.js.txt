goog.module('autovalue.AutoValue_AutoValueWithBuilder.Builder$impl');

const AutoValueWithBuilder_Builder = goog.require('autovalue.AutoValueWithBuilder.Builder$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let AutoValueWithBuilder = goog.forwardDeclare('autovalue.AutoValueWithBuilder$impl');
let AutoValue__AutoValueWithBuilder = goog.forwardDeclare('autovalue.AutoValue_AutoValueWithBuilder$impl');
let Boolean = goog.forwardDeclare('java.lang.Boolean$impl');
let IllegalStateException = goog.forwardDeclare('java.lang.IllegalStateException$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Exceptions = goog.forwardDeclare('vmbootstrap.Exceptions$impl');

class Builder extends AutoValueWithBuilder_Builder {
 /** @protected */
 constructor() {
  super();
  /**@type {?boolean}*/
  this.f_booleanField__autovalue_AutoValue_AutoValueWithBuilder_Builder_;
  /**@type {?number}*/
  this.f_nullableField__autovalue_AutoValue_AutoValueWithBuilder_Builder_;
 }
 //Factory method corresponding to constructor 'Builder()'.
 /** @return {!Builder} */
 static $create__() {
  Builder.$clinit();
  let $instance = new Builder();
  $instance.$ctor__autovalue_AutoValue_AutoValueWithBuilder_Builder__();
  return $instance;
 }
 //Initialization from constructor 'Builder()'.
 
 $ctor__autovalue_AutoValue_AutoValueWithBuilder_Builder__() {
  this.$ctor__autovalue_AutoValueWithBuilder_Builder__();
 }
 //Factory method corresponding to constructor 'Builder(AutoValueWithBuilder)'.
 /** @return {!Builder} */
 static $create__autovalue_AutoValueWithBuilder(/** AutoValueWithBuilder */ source) {
  Builder.$clinit();
  let $instance = new Builder();
  $instance.$ctor__autovalue_AutoValue_AutoValueWithBuilder_Builder__autovalue_AutoValueWithBuilder(source);
  return $instance;
 }
 //Initialization from constructor 'Builder(AutoValueWithBuilder)'.
 
 $ctor__autovalue_AutoValue_AutoValueWithBuilder_Builder__autovalue_AutoValueWithBuilder(/** AutoValueWithBuilder */ source) {
  this.$ctor__autovalue_AutoValueWithBuilder_Builder__();
  this.f_booleanField__autovalue_AutoValue_AutoValueWithBuilder_Builder_ = source.m_getBooleanField__();
  this.f_nullableField__autovalue_AutoValue_AutoValueWithBuilder_Builder_ = source.m_getNullableField__();
 }
 /** @override @return {AutoValueWithBuilder_Builder} */
 m_setBooleanField__boolean(/** boolean */ booleanField) {
  this.f_booleanField__autovalue_AutoValue_AutoValueWithBuilder_Builder_ = booleanField;
  return this;
 }
 /** @override @return {AutoValueWithBuilder_Builder} */
 m_setNullableField__java_lang_Double(/** ?number */ nullableField) {
  this.f_nullableField__autovalue_AutoValue_AutoValueWithBuilder_Builder_ = nullableField;
  return this;
 }
 /** @override @return {AutoValueWithBuilder} */
 m_build__() {
  if ($Equality.$same(this.f_booleanField__autovalue_AutoValue_AutoValueWithBuilder_Builder_, null)) {
   let missing = " booleanField";
   throw $Exceptions.toJs(IllegalStateException.$create__java_lang_String("Missing required properties:" + j_l_String.m_valueOf__java_lang_Object(missing)));
  }
  return AutoValue__AutoValueWithBuilder.$create__boolean__java_lang_Double(Boolean.m_booleanValue__java_lang_Boolean(this.f_booleanField__autovalue_AutoValue_AutoValueWithBuilder_Builder_), this.f_nullableField__autovalue_AutoValue_AutoValueWithBuilder_Builder_);
 }
 
 static $clinit() {
  Builder.$clinit = () =>{};
  Builder.$loadModules();
  AutoValueWithBuilder_Builder.$clinit();
 }
 /** @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Builder;
 }
 
 static $loadModules() {
  AutoValue__AutoValueWithBuilder = goog.module.get('autovalue.AutoValue_AutoValueWithBuilder$impl');
  Boolean = goog.module.get('java.lang.Boolean$impl');
  IllegalStateException = goog.module.get('java.lang.IllegalStateException$impl');
  j_l_String = goog.module.get('java.lang.String$impl');
  $Equality = goog.module.get('nativebootstrap.Equality$impl');
  $Exceptions = goog.module.get('vmbootstrap.Exceptions$impl');
 }
}
$Util.$setClassMetadata(Builder, "autovalue.AutoValue_AutoValueWithBuilder$Builder");

exports = Builder;

//# sourceMappingURL=AutoValue_AutoValueWithBuilder$Builder.js.map

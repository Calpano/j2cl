goog.module('autovalue.SimpleAutoValue$impl');

const ValueType = goog.require('javaemul.internal.ValueType$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let AutoValue__SimpleAutoValue = goog.forwardDeclare('autovalue.AutoValue_SimpleAutoValue$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

/**
 * @abstract
 */
class SimpleAutoValue extends ValueType {
 /** @protected */
 constructor() {
  super();
 }
 
 $ctor__autovalue_SimpleAutoValue__() {
  this.$ctor__java_lang_Object__();
 }
 /** @abstract @return {number} */
 m_getIntField__() {}
 /** @abstract @return {boolean} */
 m_getBooleanField__() {}
 /** @abstract @return {?string} */
 m_getStringField__() {}
 /** @abstract @return {?number} */
 m_getDoubleField__() {}
 /** @abstract @return {?number} */
 m_getNullableField__() {}
 /** @abstract @return {Array<number>} */
 m_getArrayField__() {}
 /** @return {SimpleAutoValue} */
 static m_create__() {
  SimpleAutoValue.$clinit();
  return AutoValue__SimpleAutoValue.$create__int__boolean__java_lang_String__java_lang_Double__java_lang_Double__arrayOf_int(42, true, "text", 43, 44, /**@type {!Array<number>}*/ ($Arrays.$init([45], $$int)));
 }
 
 static $clinit() {
  SimpleAutoValue.$clinit = () =>{};
  SimpleAutoValue.$loadModules();
  ValueType.$clinit();
 }
 /** @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SimpleAutoValue;
 }
 
 static $loadModules() {
  AutoValue__SimpleAutoValue = goog.module.get('autovalue.AutoValue_SimpleAutoValue$impl');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
$Util.$setClassMetadata(SimpleAutoValue, "autovalue.SimpleAutoValue");

exports = SimpleAutoValue;

//# sourceMappingURL=SimpleAutoValue.js.map

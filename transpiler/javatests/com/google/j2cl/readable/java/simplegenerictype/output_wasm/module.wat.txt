;;; Code for simplegenerictype.SimpleGenericType [vtable]
(global $simplegenerictype.SimpleGenericType.vtable (mut (ref null $simplegenerictype.SimpleGenericType.vtable)) (ref.null $simplegenerictype.SimpleGenericType.vtable))

;;; Code for simplegenerictype.SimpleGenericType [static fields]
(global $f_$initialized__simplegenerictype_SimpleGenericType (mut i32) (i32.const 0))

;;; Code for simplegenerictype.SimpleGenericType [CLASS]
(type $simplegenerictype.SimpleGenericType (struct
 (field $vtable (ref $simplegenerictype.SimpleGenericType.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_first__simplegenerictype_SimpleGenericType (mut (ref null $java.lang.Object)))
 (field $f_second__simplegenerictype_SimpleGenericType (mut (ref null $java.lang.Object)))
))
(type $simplegenerictype.SimpleGenericType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; SimpleGenericType(T t, S s)
(func $m_<init>__java_lang_Object__java_lang_Object@simplegenerictype.SimpleGenericType
 (param $this (ref null $simplegenerictype.SimpleGenericType))
 (param $t (ref null $java.lang.Object))
 (param $s (ref null $java.lang.Object))
 (result (ref null $simplegenerictype.SimpleGenericType))
 (block
  ;; simplegenerictype.SimpleGenericType.$clinit();
  ;;@ simplegenerictype/SimpleGenericType.java:22:9
  (call $$clinit__void@simplegenerictype.SimpleGenericType )
  ;; Object.this.Object.<init>();
  ;;@ simplegenerictype/SimpleGenericType.java:22:9
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; (SimpleGenericType.this.first = t);
  ;;@ simplegenerictype/SimpleGenericType.java:23:4
  (struct.set $simplegenerictype.SimpleGenericType $f_first__simplegenerictype_SimpleGenericType(local.get $this) (local.get $t))
  ;; (SimpleGenericType.this.second = s);
  ;;@ simplegenerictype/SimpleGenericType.java:24:4
  (struct.set $simplegenerictype.SimpleGenericType $f_second__simplegenerictype_SimpleGenericType(local.get $this) (local.get $s))
  ;; return SimpleGenericType.this;
  ;;@ simplegenerictype/SimpleGenericType.java:22:9
  (return (local.get $this))
 )
)

;;; void SimpleGenericType.test()
(func $m_test__void@simplegenerictype.SimpleGenericType
 (param $this.untyped (ref null $java.lang.Object))
 (local $g (ref null $simplegenerictype.SimpleGenericType))
 (local $this (ref null $simplegenerictype.SimpleGenericType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplegenerictype.SimpleGenericType.rtt)))
 (block
  ;; SimpleGenericType<Object, Error> g = new SimpleGenericType.<init>(new Object.<init>(),new Error.<init>());
  ;;@ simplegenerictype/SimpleGenericType.java:28:4
  (local.set $g (call $m_<init>__java_lang_Object__java_lang_Object@simplegenerictype.SimpleGenericType (struct.new_with_rtt $simplegenerictype.SimpleGenericType (ref.as_non_null (global.get $simplegenerictype.SimpleGenericType.vtable)) (ref.as_non_null (global.get $simplegenerictype.SimpleGenericType.itable)) (i32.const 0) (ref.null $java.lang.Object) (ref.null $java.lang.Object) (global.get $simplegenerictype.SimpleGenericType.rtt))(call $m_<init>__@java.lang.Object (struct.new_with_rtt $java.lang.Object (ref.as_non_null (global.get $java.lang.Object.vtable)) (ref.as_non_null (global.get $java.lang.Object.itable)) (i32.const 0) (global.get $java.lang.Object.rtt)))(call $m_<init>__@java.lang.Error (struct.new_with_rtt $java.lang.Error (ref.as_non_null (global.get $java.lang.Error.vtable)) (ref.as_non_null (global.get $java.lang.Error.itable)) (i32.const 0) (ref.null $java.lang.String) (ref.null $java.lang.Throwable) (ref.null $javaemul.internal.WasmArray.OfObject) (ref.null $javaemul.internal.WasmArray.OfObject) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object) (global.get $java.lang.Error.rtt)))))
 )
)
(elem declare func $m_test__void@simplegenerictype.SimpleGenericType)

;;; void SimpleGenericType.$clinit()
(func $$clinit__void@simplegenerictype.SimpleGenericType
 (block
  ;; if (simplegenerictype.SimpleGenericType.$initialized) return;
  ;;@ simplegenerictype/SimpleGenericType.java:18:13
  (if (global.get $f_$initialized__simplegenerictype_SimpleGenericType)
   (then
    ;; return;
    ;;@ simplegenerictype/SimpleGenericType.java:18:13
    (return )
   )
  )
  ;; (simplegenerictype.SimpleGenericType.$initialized = true);
  ;;@ simplegenerictype/SimpleGenericType.java:18:13
  (global.set $f_$initialized__simplegenerictype_SimpleGenericType (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ simplegenerictype/SimpleGenericType.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> SimpleGenericType.getClass()
(func $m_getClass__java_lang_Class@simplegenerictype.SimpleGenericType
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $simplegenerictype.SimpleGenericType))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $simplegenerictype.SimpleGenericType.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getSimplegenerictype.SimpleGenericType();
  (return (call $$getSimplegenerictype.SimpleGenericType__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@simplegenerictype.SimpleGenericType)

 ;;; Code for simplegenerictype.SimpleGenericType [vtable.init]
 (global.set $simplegenerictype.SimpleGenericType.vtable
  (struct.new_with_rtt $simplegenerictype.SimpleGenericType.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@simplegenerictype.SimpleGenericType)
   (ref.func $m_test__void@simplegenerictype.SimpleGenericType)
   (rtt.canon $simplegenerictype.SimpleGenericType.vtable)
  )
 )

 ;;; Code for simplegenerictype.SimpleGenericType [itable.init]
 (global.set $simplegenerictype.SimpleGenericType.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

goog.module('localnamecollision.Asserts$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');

class Asserts extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Asserts} */
 static $create__() {
  Asserts.$clinit();
  let $instance = new Asserts();
  $instance.$ctor__localnamecollision_Asserts__();
  return $instance;
 }
 /** @nodts */
 $ctor__localnamecollision_Asserts__() {
  this.$ctor__java_lang_Object__();
 }
 /** @nodts @return {number} */
 m_n___$pp_localnamecollision() {
  $Asserts.$assert(5 != 4);
  return 5;
 }
 /** @nodts */
 static $clinit() {
  Asserts.$clinit = () =>{};
  Asserts.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Asserts;
 }
 
 /** @nodts */
 static $loadModules() {
  $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
 }
}
$Util.$setClassMetadata(Asserts, 'localnamecollision.Asserts');

exports = Asserts;

//# sourceMappingURL=Asserts.js.map

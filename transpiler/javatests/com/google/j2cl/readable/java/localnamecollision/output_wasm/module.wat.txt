;;; Code for localnamecollision.Asserts

;;; CLASS  Asserts
(type $localnamecollision.Asserts (struct
 (field $vtable (ref null $localnamecollision.Asserts.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $localnamecollision.Asserts.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_n__int_$pp_localnamecollision (mut (ref $function.__$int)))
))
(global $localnamecollision.Asserts.vtable (mut (ref null $localnamecollision.Asserts.vtable)) (ref.null $localnamecollision.Asserts.vtable))

;;; Asserts()
(func $m_<init>__void@localnamecollision.Asserts
 (param $this (ref null $localnamecollision.Asserts))
 (result (ref null $localnamecollision.Asserts))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int Asserts.n()
(func $m_n__int_$pp_localnamecollision@localnamecollision.Asserts
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $this (ref null $localnamecollision.Asserts))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.Asserts (local.get $this.untyped) (global.get $localnamecollision.Asserts.rtt)))
 (block $return.label
  (block
   ;; assert (5 != 4);
   ;; unimplemented statement AssertStatement
   ;; return 5;
   (local.set $return.value (i32.const 5))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_n__int_$pp_localnamecollision@localnamecollision.Asserts)
;;; Code for localnamecollision.Class

;;; CLASS  Class
(type $localnamecollision.Class (struct
 (field $vtable (ref null $localnamecollision.Class.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $localnamecollision.Class.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_main__void (mut (ref $function.__$void)))
))
(global $localnamecollision.Class.vtable (mut (ref null $localnamecollision.Class.vtable)) (ref.null $localnamecollision.Class.vtable))

;;; Class()
(func $m_<init>__void@localnamecollision.Class
 (param $this (ref null $localnamecollision.Class))
 (result (ref null $localnamecollision.Class))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Class.main()
(func $m_main__void@localnamecollision.Class
 (param $this.untyped (ref null $java.lang.Object))
 (local $$qualifier (ref null $localnamecollision.Class))
 (local $this (ref null $localnamecollision.Class))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.Class (local.get $this.untyped) (global.get $localnamecollision.Class.rtt)))
 (block $return.label
  (block
   (block
    ;; Class $qualifier = new Class.<init>();
    
    (local.set $$qualifier (call $m_<init>__void@localnamecollision.Class (struct.new_with_rtt $localnamecollision.Class (global.get $localnamecollision.Class.vtable) (i32.const 0) (global.get $localnamecollision.Class.rtt))))
    ;; $qualifier.getClass();
    (drop (call_ref (local.get $$qualifier)(struct.get $java.lang.Object.vtable $m_getClass__java_lang_Class (struct.get $java.lang.Object $vtable(local.get $$qualifier)))))
   )
  )
 )
)
(elem declare func $m_main__void@localnamecollision.Class)
;;; Code for localnamecollision.LocalNameCollision

;;; CLASS  LocalNameCollision
(type $localnamecollision.LocalNameCollision (struct
 (field $vtable (ref null $localnamecollision.LocalNameCollision.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $localnamecollision.LocalNameCollision.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_testClassLocalVarCollision__void (mut (ref $function.__$void)))
 (field $m_testClassParameterCollision__boolean__java_lang_Object__java_lang_Object__int__int__boolean (mut (ref $function.$boolean__$java.lang.Object__$java.lang.Object__$int__$int__$boolean)))
))
(global $localnamecollision.LocalNameCollision.vtable (mut (ref null $localnamecollision.LocalNameCollision.vtable)) (ref.null $localnamecollision.LocalNameCollision.vtable))

;;; void LocalNameCollision.testClassLocalVarCollision()
(func $m_testClassLocalVarCollision__void@localnamecollision.LocalNameCollision
 (param $this.untyped (ref null $java.lang.Object))
 (local $LocalNameCollision i32)
 (local $RuntimeException (ref null $java.lang.Object))
 (local $Asserts i32)
 (local $$Asserts i32)
 (local $l_Asserts i32)
 (local $com_google_j2cl_readable_localnamecollision_Class i32)
 (local $com_google_j2cl_readable_localnamecollision_package1_A i32)
 (local $com_google_j2cl_readable_localnamecollision_package2_A i32)
 (local $A i32)
 (local $$qualifier (ref null $localnamecollision.Asserts))
 (local $this (ref null $localnamecollision.LocalNameCollision))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.LocalNameCollision (local.get $this.untyped) (global.get $localnamecollision.LocalNameCollision.rtt)))
 (block $return.label
  (block
   ;; boolean LocalNameCollision = false;
   
   (local.set $LocalNameCollision (i32.const 0))
   ;; Object RuntimeException = null;
   
   (local.set $RuntimeException (ref.null $java.lang.Object))
   ;; int Asserts = 1;
   
   (local.set $Asserts (i32.const 1))
   ;; int $Asserts = 1;
   
   (local.set $$Asserts (i32.const 1))
   ;; int l_Asserts = 1;
   
   (local.set $l_Asserts (i32.const 1))
   ;; int com_google_j2cl_readable_localnamecollision_Class = 1;
   
   (local.set $com_google_j2cl_readable_localnamecollision_Class (i32.const 1))
   ;; int com_google_j2cl_readable_localnamecollision_package1_A = 1;
   
   (local.set $com_google_j2cl_readable_localnamecollision_package1_A (i32.const 1))
   ;; int com_google_j2cl_readable_localnamecollision_package2_A = 1;
   
   (local.set $com_google_j2cl_readable_localnamecollision_package2_A (i32.const 1))
   ;; int A = 1;
   
   (local.set $A (i32.const 1))
   ;; (LocalNameCollision = ((((RuntimeException instanceof LocalNameCollision) ? (true) : (RuntimeException instanceof RuntimeException)) ? (true) : (RuntimeException instanceof A)) ? (true) : (RuntimeException instanceof A)) ? (true) : (RuntimeException instanceof Class));
   (local.set $LocalNameCollision (if (result i32) (if (result i32) (if (result i32) (if (result i32) (ref.test $java.lang.Object $localnamecollision.LocalNameCollision (local.get $RuntimeException) (global.get $localnamecollision.LocalNameCollision.rtt)) (then (i32.const 1)) (else (ref.test $java.lang.Object $java.lang.RuntimeException (local.get $RuntimeException) (global.get $java.lang.RuntimeException.rtt)))) (then (i32.const 1)) (else (ref.test $java.lang.Object $localnamecollision.package1.A (local.get $RuntimeException) (global.get $localnamecollision.package1.A.rtt)))) (then (i32.const 1)) (else (ref.test $java.lang.Object $localnamecollision.package2.A (local.get $RuntimeException) (global.get $localnamecollision.package2.A.rtt)))) (then (i32.const 1)) (else (ref.test $java.lang.Object $localnamecollision.Class (local.get $RuntimeException) (global.get $localnamecollision.Class.rtt)))))
   ;; assert ((Asserts $qualifier = new Asserts.<init>(),$qualifier.n()) == 5);
   ;; unimplemented statement AssertStatement
  )
 )
)
(elem declare func $m_testClassLocalVarCollision__void@localnamecollision.LocalNameCollision)

;;; boolean LocalNameCollision.testClassParameterCollision(boolean LocalNameCollision, Object Asserts, Object $Asserts, int l_Asserts, int A)
(func $m_testClassParameterCollision__boolean__java_lang_Object__java_lang_Object__int__int__boolean@localnamecollision.LocalNameCollision
 (param $this.untyped (ref null $java.lang.Object))
 (param $LocalNameCollision i32)
 (param $Asserts (ref null $java.lang.Object))
 (param $$Asserts (ref null $java.lang.Object))
 (param $l_Asserts i32)
 (param $A i32)
 (result i32)
 (local $return.value i32)
 (local $this (ref null $localnamecollision.LocalNameCollision))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.LocalNameCollision (local.get $this.untyped) (global.get $localnamecollision.LocalNameCollision.rtt)))
 (block $return.label
  (block
   ;; return (((LocalNameCollision) ? (Asserts instanceof LocalNameCollision) : (false)) ? ($Asserts instanceof Asserts) : (false)) ? ((l_Asserts == A)) : (false);
   (local.set $return.value (if (result i32) (if (result i32) (if (result i32) (local.get $LocalNameCollision) (then (ref.test $java.lang.Object $localnamecollision.LocalNameCollision (local.get $Asserts) (global.get $localnamecollision.LocalNameCollision.rtt))) (else (i32.const 0))) (then (ref.test $java.lang.Object $localnamecollision.Asserts (local.get $$Asserts) (global.get $localnamecollision.Asserts.rtt))) (else (i32.const 0))) (then (i32.eq (local.get $l_Asserts) (local.get $A))) (else (i32.const 0))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_testClassParameterCollision__boolean__java_lang_Object__java_lang_Object__int__int__boolean@localnamecollision.LocalNameCollision)

;;; LocalNameCollision(boolean LocalNameCollision, Object Asserts, Object $Asserts, int l_Asserts, int A)
(func $m_<init>__boolean__java_lang_Object__java_lang_Object__int__int__void@localnamecollision.LocalNameCollision
 (param $this (ref null $localnamecollision.LocalNameCollision))
 (param $LocalNameCollision i32)
 (param $Asserts (ref null $java.lang.Object))
 (param $$Asserts (ref null $java.lang.Object))
 (param $l_Asserts i32)
 (param $A i32)
 (result (ref null $localnamecollision.LocalNameCollision))
 (local $result i32)
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; boolean result = (((LocalNameCollision) ? (Asserts instanceof LocalNameCollision) : (false)) ? ($Asserts instanceof Asserts) : (false)) ? ((l_Asserts == A)) : (false);
   
   (local.set $result (if (result i32) (if (result i32) (if (result i32) (local.get $LocalNameCollision) (then (ref.test $java.lang.Object $localnamecollision.LocalNameCollision (local.get $Asserts) (global.get $localnamecollision.LocalNameCollision.rtt))) (else (i32.const 0))) (then (ref.test $java.lang.Object $localnamecollision.Asserts (local.get $$Asserts) (global.get $localnamecollision.Asserts.rtt))) (else (i32.const 0))) (then (i32.eq (local.get $l_Asserts) (local.get $A))) (else (i32.const 0))))
  )
 )
 (local.get $this)
)
;;; Code for localnamecollision.package1.A

;;; CLASS  A
(type $localnamecollision.package1.A (struct
 (field $vtable (ref null $localnamecollision.package1.A.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $localnamecollision.package1.A.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m__int (mut (ref $function.__$int)))
))
(global $localnamecollision.package1.A.vtable (mut (ref null $localnamecollision.package1.A.vtable)) (ref.null $localnamecollision.package1.A.vtable))

;;; A()
(func $m_<init>__void@localnamecollision.package1.A
 (param $this (ref null $localnamecollision.package1.A))
 (result (ref null $localnamecollision.package1.A))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int A.m()
(func $m_m__int@localnamecollision.package1.A
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $this (ref null $localnamecollision.package1.A))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.package1.A (local.get $this.untyped) (global.get $localnamecollision.package1.A.rtt)))
 (block $return.label
  (block
   ;; return 1;
   (local.set $return.value (i32.const 1))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_m__int@localnamecollision.package1.A)
;;; Code for localnamecollision.package2.A

;;; CLASS  A
(type $localnamecollision.package2.A (struct
 (field $vtable (ref null $localnamecollision.package2.A.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $localnamecollision.package2.A.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m__int (mut (ref $function.__$int)))
))
(global $localnamecollision.package2.A.vtable (mut (ref null $localnamecollision.package2.A.vtable)) (ref.null $localnamecollision.package2.A.vtable))

;;; A()
(func $m_<init>__void@localnamecollision.package2.A
 (param $this (ref null $localnamecollision.package2.A))
 (result (ref null $localnamecollision.package2.A))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; int A.m()
(func $m_m__int@localnamecollision.package2.A
 (param $this.untyped (ref null $java.lang.Object))
 (result i32)
 (local $return.value i32)
 (local $this (ref null $localnamecollision.package2.A))
 (local.set $this (ref.cast $java.lang.Object $localnamecollision.package2.A (local.get $this.untyped) (global.get $localnamecollision.package2.A.rtt)))
 (block $return.label
  (block
   ;; return 2;
   (local.set $return.value (i32.const 2))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_m__int@localnamecollision.package2.A)

;;; Code for localnamecollision.Asserts [vtable]
 (global.set $localnamecollision.Asserts.vtable (struct.new_with_rtt $localnamecollision.Asserts.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_n__int_$pp_localnamecollision@localnamecollision.Asserts) (rtt.canon $localnamecollision.Asserts.vtable)))
;;; Code for localnamecollision.Class [vtable]
 (global.set $localnamecollision.Class.vtable (struct.new_with_rtt $localnamecollision.Class.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_main__void@localnamecollision.Class) (rtt.canon $localnamecollision.Class.vtable)))
;;; Code for localnamecollision.LocalNameCollision [vtable]
 (global.set $localnamecollision.LocalNameCollision.vtable (struct.new_with_rtt $localnamecollision.LocalNameCollision.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_testClassLocalVarCollision__void@localnamecollision.LocalNameCollision) (ref.func $m_testClassParameterCollision__boolean__java_lang_Object__java_lang_Object__int__int__boolean@localnamecollision.LocalNameCollision) (rtt.canon $localnamecollision.LocalNameCollision.vtable)))
;;; Code for localnamecollision.package1.A [vtable]
 (global.set $localnamecollision.package1.A.vtable (struct.new_with_rtt $localnamecollision.package1.A.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_m__int@localnamecollision.package1.A) (rtt.canon $localnamecollision.package1.A.vtable)))
;;; Code for localnamecollision.package2.A [vtable]
 (global.set $localnamecollision.package2.A.vtable (struct.new_with_rtt $localnamecollision.package2.A.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_m__int@localnamecollision.package2.A) (rtt.canon $localnamecollision.package2.A.vtable)))
))
(start $.runtime.init)


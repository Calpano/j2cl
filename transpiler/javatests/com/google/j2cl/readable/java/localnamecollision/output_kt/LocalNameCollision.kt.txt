package localnamecollision

open class LocalNameCollision {
 fun testClassLocalVarCollision() {
  var LocalNameCollision: Boolean = false
  var RuntimeException: Any? = null
  var Asserts: Int = 1
  var $Asserts: Int = 1
  var l_Asserts: Int = 1
  var com_google_j2cl_readable_localnamecollision_Class: Int = 1
  var com_google_j2cl_readable_localnamecollision_package1_A: Int = 1
  var com_google_j2cl_readable_localnamecollision_package2_A: Int = 1
  var A: Int = 1
  LocalNameCollision = TODO("InstanceOfExpression") || TODO("InstanceOfExpression") || TODO("InstanceOfExpression") || TODO("InstanceOfExpression") || TODO("InstanceOfExpression")
  TODO("AssertStatement")
 }

 fun testClassParameterCollision(LocalNameCollision: Boolean, Asserts: Any?, $Asserts: Any?, l_Asserts: Int, A: Int): Boolean {
  return LocalNameCollision && TODO("InstanceOfExpression") && TODO("InstanceOfExpression") && l_Asserts == A
 }

 fun <init>(LocalNameCollision: Boolean, Asserts: Any?, $Asserts: Any?, l_Asserts: Int, A: Int): localnamecollision.LocalNameCollision {
  var result: Boolean = LocalNameCollision && TODO("InstanceOfExpression") && TODO("InstanceOfExpression") && l_Asserts == A
 }
}

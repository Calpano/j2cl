;;; Code for inferreturn.InferReturn

;;; CLASS  InferReturn
(type $inferreturn.InferReturn (struct
 (field $vtable (ref null $inferreturn.InferReturn.vtable))
))
(type $inferreturn.InferReturn.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $inferreturn.InferReturn.vtable (mut (ref null $inferreturn.InferReturn.vtable)) (ref.null $inferreturn.InferReturn.vtable))

;;; InferReturn()
(func $m_<init>__void@inferreturn.InferReturn
 (param $this (ref null $inferreturn.InferReturn))
 (result (ref null $inferreturn.InferReturn))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; InferReturn<T> InferReturn.inferGeneric(T foo)
(func $m_inferGeneric__java_lang_Object__inferreturn_InferReturn@inferreturn.InferReturn
 (param $foo (ref null $java.lang.Object))
 (result (ref null $inferreturn.InferReturn))
 (local $return.value (ref null $inferreturn.InferReturn))
 (block $return.label
  (block
   ;; return new InferReturn.<init>();
   (local.set $return.value (call $m_<init>__void@inferreturn.InferReturn (struct.new_with_rtt $inferreturn.InferReturn (global.get $inferreturn.InferReturn.vtable) (global.get $inferreturn.InferReturn.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; InferReturn<InferReturn<String>> InferReturn.tightenType(InferReturn<String> foo)
(func $m_tightenType__inferreturn_InferReturn__inferreturn_InferReturn@inferreturn.InferReturn
 (param $foo (ref null $inferreturn.InferReturn))
 (result (ref null $inferreturn.InferReturn))
 (local $return.value (ref null $inferreturn.InferReturn))
 (block $return.label
  (block
   ;; if (!(foo == null)) {
   (if (i32.eqz (ref.eq (local.get $foo) (ref.null $java.lang.Object)))
    (then
     (block
      ;; return inferreturn.InferReturn.inferGeneric(foo);
      (local.set $return.value (call $m_inferGeneric__java_lang_Object__inferreturn_InferReturn@inferreturn.InferReturn (local.get $foo)))
      (br $return.label)
     )
    )
   )
   ;; return null;
   (local.set $return.value (ref.null $inferreturn.InferReturn))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void InferReturn.main()
(func $m_main__void@inferreturn.InferReturn
 (local $list (ref null $java.util.ArrayList))
 (local $array (ref null $Object.array))
 (block $return.label
  (block
   ;; ArrayList<Object> list = inferreturn.InferReturn.newArrayList("foo");
   
   (local.set $list (call $m_newArrayList__java_lang_Object__java_util_ArrayList@inferreturn.InferReturn (ref.null $java.lang.String)))
   ;; inferreturn.InferReturn.acceptsArrayListOfObject(list);
   (call $m_acceptsArrayListOfObject__java_util_ArrayList__void@inferreturn.InferReturn (local.get $list))
   ;; Object[] array = inferreturn.InferReturn.newArray("foo");
   
   (local.set $array (call $m_newArray__java_lang_Object__arrayOf_java_lang_Object@inferreturn.InferReturn (ref.null $java.lang.String)))
   ;; inferreturn.InferReturn.acceptsArrayOfObject(array);
   (call $m_acceptsArrayOfObject__arrayOf_java_lang_Object__void@inferreturn.InferReturn (local.get $array))
  )
 )
)

;;; ArrayList<V> InferReturn.newArrayList(V foo)
(func $m_newArrayList__java_lang_Object__java_util_ArrayList@inferreturn.InferReturn
 (param $foo (ref null $java.lang.Object))
 (result (ref null $java.util.ArrayList))
 (local $return.value (ref null $java.util.ArrayList))
 (block $return.label
  (block
   ;; return new ArrayList.<init>();
   (local.set $return.value (call $m_<init>__void@java.util.ArrayList (struct.new_with_rtt $java.util.ArrayList (global.get $java.util.ArrayList.vtable) (i32.const 0) (ref.null $Object.array) (ref.null $java.lang.Object) (global.get $java.util.ArrayList.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; V[] InferReturn.newArray(V foo)
(func $m_newArray__java_lang_Object__arrayOf_java_lang_Object@inferreturn.InferReturn
 (param $foo (ref null $java.lang.Object))
 (result (ref null $Object.array))
 (local $return.value (ref null $Object.array))
 (block $return.label
  (block
   ;; return ((V[]) new Object[0]);
   (local.set $return.value (ref.null $Object.array))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void InferReturn.acceptsArrayListOfObject(ArrayList<Object> foo)
(func $m_acceptsArrayListOfObject__java_util_ArrayList__void@inferreturn.InferReturn
 (param $foo (ref null $java.util.ArrayList))
 (block $return.label
  (block
  )
 )
)

;;; void InferReturn.acceptsArrayOfObject(Object[] foo)
(func $m_acceptsArrayOfObject__arrayOf_java_lang_Object__void@inferreturn.InferReturn
 (param $foo (ref null $Object.array))
 (block $return.label
  (block
  )
 )
)

;;; Code for inferreturn.InferReturn [vtable]
 (global.set $inferreturn.InferReturn.vtable (struct.new_with_rtt $inferreturn.InferReturn.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $inferreturn.InferReturn.vtable)))
))
(start $.runtime.init)


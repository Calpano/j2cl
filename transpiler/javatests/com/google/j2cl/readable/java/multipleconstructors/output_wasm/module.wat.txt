;;; Code for multipleconstructors.MultipleConstructors

;;; CLASS  MultipleConstructors
(type $multipleconstructors.MultipleConstructors (struct
 (field $vtable (ref null $multipleconstructors.MultipleConstructors.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_id__multipleconstructors_MultipleConstructors_ (mut i32))
 (field $f_flag__multipleconstructors_MultipleConstructors_ (mut i32))
))
(type $multipleconstructors.MultipleConstructors.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $multipleconstructors.MultipleConstructors.vtable (mut (ref null $multipleconstructors.MultipleConstructors.vtable)) (ref.null $multipleconstructors.MultipleConstructors.vtable))
(global $f_$initialized__multipleconstructors_MultipleConstructors (mut i32) (i32.const 0))

;;; MultipleConstructors(int id)
(func $m_<init>__int__void@multipleconstructors.MultipleConstructors
 (param $this (ref null $multipleconstructors.MultipleConstructors))
 (param $id i32)
 (result (ref null $multipleconstructors.MultipleConstructors))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; (MultipleConstructors.this.id = id);
   (struct.set $multipleconstructors.MultipleConstructors $f_id__multipleconstructors_MultipleConstructors_(local.get $this) (local.get $id))
   ;; (MultipleConstructors.this.flag = (id == 0));
   (struct.set $multipleconstructors.MultipleConstructors $f_flag__multipleconstructors_MultipleConstructors_(local.get $this) (i32.eq (local.get $id) (i32.const 0)))
  )
 )
 (local.get $this)
)

;;; MultipleConstructors(boolean flag)
(func $m_<init>__boolean__void@multipleconstructors.MultipleConstructors
 (param $this (ref null $multipleconstructors.MultipleConstructors))
 (param $flag i32)
 (result (ref null $multipleconstructors.MultipleConstructors))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; (MultipleConstructors.this.id = (0 - 1));
   (struct.set $multipleconstructors.MultipleConstructors $f_id__multipleconstructors_MultipleConstructors_(local.get $this) (i32.sub (i32.const 0) (i32.const 1)))
   ;; (MultipleConstructors.this.flag = flag);
   (struct.set $multipleconstructors.MultipleConstructors $f_flag__multipleconstructors_MultipleConstructors_(local.get $this) (local.get $flag))
  )
 )
 (local.get $this)
)

;;; MultipleConstructors(int id, boolean flag)
(func $m_<init>__int__boolean__void@multipleconstructors.MultipleConstructors
 (param $this (ref null $multipleconstructors.MultipleConstructors))
 (param $id i32)
 (param $flag i32)
 (result (ref null $multipleconstructors.MultipleConstructors))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; (MultipleConstructors.this.id = id);
   (struct.set $multipleconstructors.MultipleConstructors $f_id__multipleconstructors_MultipleConstructors_(local.get $this) (local.get $id))
   ;; (MultipleConstructors.this.flag = flag);
   (struct.set $multipleconstructors.MultipleConstructors $f_flag__multipleconstructors_MultipleConstructors_(local.get $this) (local.get $flag))
  )
 )
 (local.get $this)
)

;;; void MultipleConstructors.$clinit()
(func $$clinit__void@multipleconstructors.MultipleConstructors
 (block $return.label
  (block
   ;; if (multipleconstructors.MultipleConstructors.$initialized) return;
   (if (global.get $f_$initialized__multipleconstructors_MultipleConstructors)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (multipleconstructors.MultipleConstructors.$initialized = true);
   (global.set $f_$initialized__multipleconstructors_MultipleConstructors (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for multipleconstructors.MultipleConstructors [vtable]
 (global.set $multipleconstructors.MultipleConstructors.vtable (struct.new_with_rtt $multipleconstructors.MultipleConstructors.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $multipleconstructors.MultipleConstructors.vtable)))
))
(start $.runtime.init)


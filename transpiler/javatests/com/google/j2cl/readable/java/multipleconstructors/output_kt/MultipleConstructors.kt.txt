// Generated from "multipleconstructors/MultipleConstructors.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package multipleconstructors

import javaemul.lang.*
import kotlin.Boolean
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.jvm.JvmField
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("MultipleconstructorsMultipleConstructors", exact = true)
open class MultipleConstructors {
 @JvmField
 @HiddenFromObjC
 var id_private_2: Int = 0

 @JvmField
 @HiddenFromObjC
 var flag_private_2: Boolean = false

 constructor(
  @ObjCName("Int") id: Int
 ) {
  this.id_private_2 = id
  this.flag_private_2 = id == 0
 }

 constructor(
  @ObjCName("Boolean") flag: Boolean
 ) {
  this.id_private_2 = - 1
  this.flag_private_2 = flag
 }

 constructor(
  @ObjCName("Int") id: Int,
  @ObjCName("withBoolean") flag: Boolean
 ) {
  this.id_private_2 = id
  this.flag_private_2 = flag
 }
}

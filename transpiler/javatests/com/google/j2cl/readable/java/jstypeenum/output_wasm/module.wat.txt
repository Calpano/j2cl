;;; Code for jstypeenum.Color

;;; ENUM  Color
(type $jstypeenum.Color (struct
 (field $vtable (ref null $jstypeenum.Color.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_name__java_lang_Enum_ (mut (ref null $java.lang.String)))
 (field $f_ordinal__java_lang_Enum_ (mut i32))
))
(type $jstypeenum.Color.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getDeclaringClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_name__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_ordinal__int (mut (ref $function.__$int)))
 (field $m_compareTo__java_lang_Enum__int (mut (ref $function.$java.lang.Enum__$int)))
 (field $m_compareTo__java_lang_Object__int (mut (ref $function.$java.lang.Object__$int)))
))
(global $jstypeenum.Color.vtable (mut (ref null $jstypeenum.Color.vtable)) (ref.null $jstypeenum.Color.vtable))
(global $f_RED__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_GREEN__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_BLUE__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_namesToValuesMap__jstypeenum_Color_ (mut (ref null $java.lang.Object)) (ref.null $java.lang.Object))
(global $f_$initialized__jstypeenum_Color (mut i32) (i32.const 0))

;;; Color()
(func $m_<init>__void_$p_jstypeenum_Color@jstypeenum.Color
 (param $this (ref null $jstypeenum.Color))
 (result (ref null $jstypeenum.Color))
 (block $return.label
  (block
   ;; Enum.this.Enum.<init>();
   (drop (ref.null $java.lang.Enum))
  )
 )
 (local.get $this)
)

;;; Color Color.valueOf(String name)
(func $m_valueOf__java_lang_String__jstypeenum_Color@jstypeenum.Color
 (param $name (ref null $java.lang.String))
 (result (ref null $jstypeenum.Color))
 (local $return.value (ref null $jstypeenum.Color))
 (block $return.label
  (block
   ;; jstypeenum.Color.$clinit();
   (call $$clinit__void@jstypeenum.Color )
   ;; if ((jstypeenum.Color.namesToValuesMap == null)) {
   (if (ref.eq (global.get $f_namesToValuesMap__jstypeenum_Color_) (ref.null $java.lang.Object))
    (then
     (block
      ;; (jstypeenum.Color.namesToValuesMap = javaemul.internal.Enums.createMapFromValues(jstypeenum.Color.values()));
      (global.set $f_namesToValuesMap__jstypeenum_Color_ (ref.null $java.lang.Object))
     )
    )
   )
   ;; return ((Color) javaemul.internal.Enums.getValueFromNameAndMap(name,jstypeenum.Color.namesToValuesMap));
   (local.set $return.value (ref.cast $java.lang.Object $jstypeenum.Color (call $m_getValueFromNameAndMap__java_lang_String__java_util_Map__java_lang_Object@javaemul.internal.Enums (local.get $name)(ref.null $java.lang.Object)) (global.get $jstypeenum.Color.rtt)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; Color[] Color.values()
(func $m_values__arrayOf_jstypeenum_Color@jstypeenum.Color
 (result (ref null $Object.array))
 (local $return.value (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (block $return.label
  (block
   ;; jstypeenum.Color.$clinit();
   (call $$clinit__void@jstypeenum.Color )
   ;; return (Color[] $array_literal = new Color[3],($array_literal[0] = (jstypeenum.Color.$clinit(),jstypeenum.Color.RED)),($array_literal[1] = (jstypeenum.Color.$clinit(),jstypeenum.Color.GREEN)),($array_literal[2] = (jstypeenum.Color.$clinit(),jstypeenum.Color.BLUE)),$array_literal);
   (local.set $return.value (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 3) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (block (result (ref null $jstypeenum.Color))
     (call $$clinit__void@jstypeenum.Color )
     (global.get $f_RED__jstypeenum_Color)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (block (result (ref null $jstypeenum.Color))
     (call $$clinit__void@jstypeenum.Color )
     (global.get $f_GREEN__jstypeenum_Color)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 2) (block (result (ref null $jstypeenum.Color))
     (call $$clinit__void@jstypeenum.Color )
     (global.get $f_BLUE__jstypeenum_Color)
    ))
    (local.get $$array_literal)
   ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void Color.$clinit()
(func $$clinit__void@jstypeenum.Color
 (block $return.label
  (block
   ;; if (jstypeenum.Color.$initialized) return;
   (if (global.get $f_$initialized__jstypeenum_Color)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jstypeenum.Color.$initialized = true);
   (global.set $f_$initialized__jstypeenum_Color (i32.const 1))
   ;; java.lang.Enum.$clinit();
   (call $$clinit__void@java.lang.Enum )
   (block
    ;; jstypeenum.Color.$clinit();
    (call $$clinit__void@jstypeenum.Color )
    ;; (jstypeenum.Color.RED = new Color.<init>());
    (global.set $f_RED__jstypeenum_Color (call $m_<init>__void_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (global.get $jstypeenum.Color.vtable) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))))
   )
   (block
    ;; jstypeenum.Color.$clinit();
    (call $$clinit__void@jstypeenum.Color )
    ;; (jstypeenum.Color.GREEN = new Color.<init>());
    (global.set $f_GREEN__jstypeenum_Color (call $m_<init>__void_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (global.get $jstypeenum.Color.vtable) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))))
   )
   (block
    ;; jstypeenum.Color.$clinit();
    (call $$clinit__void@jstypeenum.Color )
    ;; (jstypeenum.Color.BLUE = new Color.<init>());
    (global.set $f_BLUE__jstypeenum_Color (call $m_<init>__void_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (global.get $jstypeenum.Color.vtable) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))))
   )
   ;; (jstypeenum.Color.namesToValuesMap = null);
   (global.set $f_namesToValuesMap__jstypeenum_Color_ (ref.null $java.lang.Object))
  )
 )
)

;;; Code for jstypeenum.Color [vtable]
 (global.set $jstypeenum.Color.vtable (struct.new_with_rtt $jstypeenum.Color.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Enum) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_getDeclaringClass__java_lang_Class@java.lang.Enum) (ref.func $m_name__java_lang_String@java.lang.Enum) (ref.func $m_ordinal__int@java.lang.Enum) (ref.func $m_compareTo__java_lang_Enum__int@java.lang.Enum) (ref.func $m_compareTo__java_lang_Object__int@java.lang.Enum) (rtt.canon $jstypeenum.Color.vtable)))
))
(start $.runtime.init)


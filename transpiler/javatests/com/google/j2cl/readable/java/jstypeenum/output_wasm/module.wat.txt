;;; Code for jstypeenum.Color [vtable]
(global $jstypeenum.Color.vtable (mut (ref null $jstypeenum.Color.vtable)) (ref.null $jstypeenum.Color.vtable))

;;; Code for jstypeenum.Color [static fields]
(global $f_RED__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_GREEN__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_BLUE__jstypeenum_Color (mut (ref null $jstypeenum.Color)) (ref.null $jstypeenum.Color))
(global $f_namesToValuesMap__jstypeenum_Color_ (mut (ref null $java.lang.Object)) (ref.null $java.lang.Object))
(global $$ordinal_RED__jstypeenum_Color i32 (i32.const 0))
(global $$ordinal_GREEN__jstypeenum_Color i32 (i32.const 1))
(global $$ordinal_BLUE__jstypeenum_Color i32 (i32.const 2))
(global $f_$initialized__jstypeenum_Color (mut i32) (i32.const 0))

;;; Code for jstypeenum.Color [ENUM]
(type $jstypeenum.Color (struct
 (field $vtable (ref $jstypeenum.Color.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_name__java_lang_Enum_ (mut (ref null $java.lang.String)))
 (field $f_ordinal__java_lang_Enum_ (mut i32))
))
(type $jstypeenum.Color.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getDeclaringClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_name__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_ordinal__int (mut (ref $function.__$int)))
 (field $m_compareTo__java_lang_Enum__int (mut (ref $function.$java.lang.Enum__$int)))
 (field $m_compareTo__java_lang_Object__int (mut (ref $function.$java.lang.Object__$int)))
))

;;; Color(String $name, int $ordinal)
(func $m_<init>__java_lang_String__int_$p_jstypeenum_Color@jstypeenum.Color
 (param $this (ref null $jstypeenum.Color))
 (param $$name (ref null $java.lang.String))
 (param $$ordinal i32)
 (result (ref null $jstypeenum.Color))
 ;;@ jstypeenum/Color.java:21:12
 (block
  ;; (Enum.this.name = $name);
  ;;@ jstypeenum/Color.java:21:12
  (struct.set $java.lang.Enum $f_name__java_lang_Enum_(local.get $this) (local.get $$name))
  ;; (Enum.this.ordinal = $ordinal);
  ;;@ jstypeenum/Color.java:21:12
  (struct.set $java.lang.Enum $f_ordinal__java_lang_Enum_(local.get $this) (local.get $$ordinal))
  ;; Enum.this.Enum.<init>($name,$ordinal);
  ;;@ jstypeenum/Color.java:21:12
  (drop (call $m_<init>__java_lang_String__int@java.lang.Enum (local.get $this)(local.get $$name)(local.get $$ordinal)))
  ;; return Color.this;
  ;;@ jstypeenum/Color.java:21:12
  (return (local.get $this))
 )
)

;;; Color Color.valueOf(String name)
(func $m_valueOf__java_lang_String__jstypeenum_Color@jstypeenum.Color
 (param $name (ref null $java.lang.String))
 (result (ref null $jstypeenum.Color))
 ;;@ jstypeenum/Color.java:21:12
 (block
  ;; jstypeenum.Color.$clinit();
  ;;@ jstypeenum/Color.java:21:12
  (call $$clinit__void@jstypeenum.Color )
  ;; if (javaemul.internal.Platform.isNull(jstypeenum.Color.namesToValuesMap)) {
  ;;@ jstypeenum/Color.java:21:12
  (if (ref.is_null (global.get $f_namesToValuesMap__jstypeenum_Color_))
   (then
    ;;@ jstypeenum/Color.java:21:12
    (block
     ;; (jstypeenum.Color.namesToValuesMap = javaemul.internal.Enums.createMapFromValues(jstypeenum.Color.values()));
     ;;@ jstypeenum/Color.java:21:12
     (global.set $f_namesToValuesMap__jstypeenum_Color_ (call $m_createMapFromValues__arrayOf_java_lang_Enum__java_util_Map@javaemul.internal.Enums (call $m_values__arrayOf_jstypeenum_Color@jstypeenum.Color )))
    )
   )
  )
  ;; return ((Color) javaemul.internal.Enums.getValueFromNameAndMap(name,jstypeenum.Color.namesToValuesMap));
  ;;@ jstypeenum/Color.java:21:12
  (return (ref.cast (call $m_getValueFromNameAndMap__java_lang_String__java_util_Map__java_lang_Object@javaemul.internal.Enums (local.get $name)(global.get $f_namesToValuesMap__jstypeenum_Color_)) (global.get $jstypeenum.Color.rtt)))
 )
)

;;; Color[] Color.values()
(func $m_values__arrayOf_jstypeenum_Color@jstypeenum.Color
 (result (ref null $javaemul.internal.WasmArray.OfObject))
 (local $$array_literal (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ jstypeenum/Color.java:21:12
 (block
  ;; jstypeenum.Color.$clinit();
  ;;@ jstypeenum/Color.java:21:12
  (call $$clinit__void@jstypeenum.Color )
  ;; return (Color[] $array_literal = new OfObject.<init>(3),($array_literal.elements[0] = (jstypeenum.Color.$clinit(),jstypeenum.Color.RED)),($array_literal.elements[1] = (jstypeenum.Color.$clinit(),jstypeenum.Color.GREEN)),($array_literal.elements[2] = (jstypeenum.Color.$clinit(),jstypeenum.Color.BLUE)),$array_literal);
  ;;@ jstypeenum/Color.java:21:12
  (return (block (result (ref null $javaemul.internal.WasmArray.OfObject))
   (local.set $$array_literal (call $m_<init>__int_$pp_javaemul_internal@javaemul.internal.WasmArray.OfObject (struct.new_with_rtt $javaemul.internal.WasmArray.OfObject (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.vtable)) (ref.as_non_null (global.get $javaemul.internal.WasmArray.OfObject.itable)) (i32.const 0) (i32.const 0) (ref.null $java.lang.Object.array) (global.get $javaemul.internal.WasmArray.OfObject.rtt))(i32.const 3)))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal)) (i32.const 0) (block (result (ref null $jstypeenum.Color))
    (call $$clinit__void@jstypeenum.Color )
    (global.get $f_RED__jstypeenum_Color)
   ))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal)) (i32.const 1) (block (result (ref null $jstypeenum.Color))
    (call $$clinit__void@jstypeenum.Color )
    (global.get $f_GREEN__jstypeenum_Color)
   ))
   (array.set $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $$array_literal)) (i32.const 2) (block (result (ref null $jstypeenum.Color))
    (call $$clinit__void@jstypeenum.Color )
    (global.get $f_BLUE__jstypeenum_Color)
   ))
   (local.get $$array_literal)
  ))
 )
)

;;; void Color.$clinit()
(func $$clinit__void@jstypeenum.Color
 ;;@ jstypeenum/Color.java:21:12
 (block
  ;; if (jstypeenum.Color.$initialized) return;
  ;;@ jstypeenum/Color.java:21:12
  (if (global.get $f_$initialized__jstypeenum_Color)
   (then
    ;; return;
    ;;@ jstypeenum/Color.java:21:12
    (return )
   )
  )
  ;; (jstypeenum.Color.$initialized = true);
  ;;@ jstypeenum/Color.java:21:12
  (global.set $f_$initialized__jstypeenum_Color (i32.const 1))
  ;; java.lang.Enum.$clinit();
  ;;@ jstypeenum/Color.java:21:12
  (call $$clinit__void@java.lang.Enum )
  ;;@ jstypeenum/Color.java:22:2
  (block
   ;; jstypeenum.Color.$clinit();
   ;;@ jstypeenum/Color.java:22:2
   (call $$clinit__void@jstypeenum.Color )
   ;; (jstypeenum.Color.RED = new Color.<init>(javaemul.internal.StringPool.$getString_|RED|(),jstypeenum.Color.RED));
   ;;@ jstypeenum/Color.java:22:2
   (global.set $f_RED__jstypeenum_Color (call $m_<init>__java_lang_String__int_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (ref.as_non_null (global.get $jstypeenum.Color.vtable)) (ref.as_non_null (global.get $jstypeenum.Color.itable)) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))(call $$getString_|RED|__java_lang_String@javaemul.internal.StringPool )(global.get $$ordinal_RED__jstypeenum_Color)))
  )
  ;;@ jstypeenum/Color.java:23:2
  (block
   ;; jstypeenum.Color.$clinit();
   ;;@ jstypeenum/Color.java:23:2
   (call $$clinit__void@jstypeenum.Color )
   ;; (jstypeenum.Color.GREEN = new Color.<init>(javaemul.internal.StringPool.$getString_|GREEN|(),jstypeenum.Color.GREEN));
   ;;@ jstypeenum/Color.java:23:2
   (global.set $f_GREEN__jstypeenum_Color (call $m_<init>__java_lang_String__int_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (ref.as_non_null (global.get $jstypeenum.Color.vtable)) (ref.as_non_null (global.get $jstypeenum.Color.itable)) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))(call $$getString_|GREEN|__java_lang_String@javaemul.internal.StringPool )(global.get $$ordinal_GREEN__jstypeenum_Color)))
  )
  ;;@ jstypeenum/Color.java:24:2
  (block
   ;; jstypeenum.Color.$clinit();
   ;;@ jstypeenum/Color.java:24:2
   (call $$clinit__void@jstypeenum.Color )
   ;; (jstypeenum.Color.BLUE = new Color.<init>(javaemul.internal.StringPool.$getString_|BLUE|(),jstypeenum.Color.BLUE));
   ;;@ jstypeenum/Color.java:24:2
   (global.set $f_BLUE__jstypeenum_Color (call $m_<init>__java_lang_String__int_$p_jstypeenum_Color@jstypeenum.Color (struct.new_with_rtt $jstypeenum.Color (ref.as_non_null (global.get $jstypeenum.Color.vtable)) (ref.as_non_null (global.get $jstypeenum.Color.itable)) (i32.const 0) (ref.null $java.lang.String) (i32.const 0) (global.get $jstypeenum.Color.rtt))(call $$getString_|BLUE|__java_lang_String@javaemul.internal.StringPool )(global.get $$ordinal_BLUE__jstypeenum_Color)))
  )
  ;; (jstypeenum.Color.namesToValuesMap = null);
  ;;@ jstypeenum/Color.java:21:12
  (global.set $f_namesToValuesMap__jstypeenum_Color_ (ref.null $java.lang.Object))
 )
)

;;; Class<?> Color.getClass()
(func $m_getClass__java_lang_Class@jstypeenum.Color
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jstypeenum.Color))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jstypeenum.Color.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJstypeenum.Color();
  (return (call $$getJstypeenum.Color__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jstypeenum.Color)

 ;;; Code for jstypeenum.Color [vtable.init]
 (global.set $jstypeenum.Color.vtable
  (struct.new_with_rtt $jstypeenum.Color.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Enum)
   (ref.func $m_getClass__java_lang_Class@jstypeenum.Color)
   (ref.func $m_getDeclaringClass__java_lang_Class@java.lang.Enum)
   (ref.func $m_name__java_lang_String@java.lang.Enum)
   (ref.func $m_ordinal__int@java.lang.Enum)
   (ref.func $m_compareTo__java_lang_Enum__int@java.lang.Enum)
   (ref.func $m_compareTo__java_lang_Object__int@java.lang.Enum)
   (rtt.canon $jstypeenum.Color.vtable)
  )
 )

 ;;; Code for jstypeenum.Color [itable.init]
 (global.set $jstypeenum.Color.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $jstypeenum.Color.itable) (i32.const 1)
 (struct.new_with_rtt $java.lang.Comparable.vtable
  (ref.func $m_compareTo__java_lang_Object__int@java.lang.Enum)
  (rtt.canon $java.lang.Comparable.vtable)
 ))
 (array.set $itable (global.get $jstypeenum.Color.itable) (i32.const 0)
 (struct.new_with_rtt $java.io.Serializable.vtable
  (rtt.canon $java.io.Serializable.vtable)
 ))

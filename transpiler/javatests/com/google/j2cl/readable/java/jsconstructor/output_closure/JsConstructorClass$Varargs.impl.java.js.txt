goog.module('jsconstructor.JsConstructorClass.Varargs$impl');

const A = goog.require('jsconstructor.JsConstructorClass.A$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

class Varargs extends A {
 
 constructor(.../** ...number */ args) {
  Varargs.$clinit();
  $Arrays.$stampType(args, $$int, 1);
  super();
  this.$ctor__jsconstructor_JsConstructorClass_Varargs__arrayOf_int(args);
 }
 /** @nodts */
 $ctor__jsconstructor_JsConstructorClass_Varargs__arrayOf_int(/** Array<number> */ args) {
  this.$ctor__jsconstructor_JsConstructorClass_A__int(args[1]);
 }
 /** @nodts */
 static $clinit() {
  Varargs.$clinit = () =>{};
  Varargs.$loadModules();
  A.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Varargs;
 }
 
 /** @nodts */
 static $loadModules() {
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
$Util.$setClassMetadata(Varargs, 'jsconstructor.JsConstructorClass$Varargs');

exports = Varargs;

//# sourceMappingURL=JsConstructorClass$Varargs.js.map

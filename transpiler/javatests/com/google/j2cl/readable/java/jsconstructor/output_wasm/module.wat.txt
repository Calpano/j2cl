;;; Code for jsconstructor.JsConstructorClass [vtable]
(global $jsconstructor.JsConstructorClass.vtable (mut (ref null $jsconstructor.JsConstructorClass.vtable)) (ref.null $jsconstructor.JsConstructorClass.vtable))

;;; Code for jsconstructor.JsConstructorClass.A [vtable]
(global $jsconstructor.JsConstructorClass.A.vtable (mut (ref null $jsconstructor.JsConstructorClass.A.vtable)) (ref.null $jsconstructor.JsConstructorClass.A.vtable))

;;; Code for jsconstructor.JsConstructorClass.B [vtable]
(global $jsconstructor.JsConstructorClass.B.vtable (mut (ref null $jsconstructor.JsConstructorClass.B.vtable)) (ref.null $jsconstructor.JsConstructorClass.B.vtable))

;;; Code for jsconstructor.JsConstructorClass.C [vtable]
(global $jsconstructor.JsConstructorClass.C.vtable (mut (ref null $jsconstructor.JsConstructorClass.C.vtable)) (ref.null $jsconstructor.JsConstructorClass.C.vtable))

;;; Code for jsconstructor.JsConstructorClass.D [vtable]
(global $jsconstructor.JsConstructorClass.D.vtable (mut (ref null $jsconstructor.JsConstructorClass.D.vtable)) (ref.null $jsconstructor.JsConstructorClass.D.vtable))

;;; Code for jsconstructor.JsConstructorClass.E [vtable]
(global $jsconstructor.JsConstructorClass.E.vtable (mut (ref null $jsconstructor.JsConstructorClass.E.vtable)) (ref.null $jsconstructor.JsConstructorClass.E.vtable))

;;; Code for jsconstructor.JsConstructorClass.F [vtable]
(global $jsconstructor.JsConstructorClass.F.vtable (mut (ref null $jsconstructor.JsConstructorClass.F.vtable)) (ref.null $jsconstructor.JsConstructorClass.F.vtable))

;;; Code for jsconstructor.JsConstructorClass.G [vtable]
(global $jsconstructor.JsConstructorClass.G.vtable (mut (ref null $jsconstructor.JsConstructorClass.G.vtable)) (ref.null $jsconstructor.JsConstructorClass.G.vtable))

;;; Code for jsconstructor.JsConstructorClass.H [vtable]
(global $jsconstructor.JsConstructorClass.H.vtable (mut (ref null $jsconstructor.JsConstructorClass.H.vtable)) (ref.null $jsconstructor.JsConstructorClass.H.vtable))

;;; Code for jsconstructor.JsConstructorClass.Varargs [vtable]
(global $jsconstructor.JsConstructorClass.Varargs.vtable (mut (ref null $jsconstructor.JsConstructorClass.Varargs.vtable)) (ref.null $jsconstructor.JsConstructorClass.Varargs.vtable))

;;; Code for jsconstructor.JsConstructorClass.SubVarargs [vtable]
(global $jsconstructor.JsConstructorClass.SubVarargs.vtable (mut (ref null $jsconstructor.JsConstructorClass.SubVarargs.vtable)) (ref.null $jsconstructor.JsConstructorClass.SubVarargs.vtable))

;;; Code for jsconstructor.JsConstructorClass.InstanceVarargs [vtable]
(global $jsconstructor.JsConstructorClass.InstanceVarargs.vtable (mut (ref null $jsconstructor.JsConstructorClass.InstanceVarargs.vtable)) (ref.null $jsconstructor.JsConstructorClass.InstanceVarargs.vtable))

;;; Code for jsconstructor.JsConstructorClass.RegularType [vtable]
(global $jsconstructor.JsConstructorClass.RegularType.vtable (mut (ref null $jsconstructor.JsConstructorClass.RegularType.vtable)) (ref.null $jsconstructor.JsConstructorClass.RegularType.vtable))

;;; Code for jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType [vtable]
(global $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable (mut (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable)) (ref.null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable))

;;; Code for jsconstructor.JsConstructorClass [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.A [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_A (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.B [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_B (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.C [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_C (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.D [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_D (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.E [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_E (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.F [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_F (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.G [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_G (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.H [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_H (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.Varargs [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_Varargs (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.SubVarargs [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_SubVarargs (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.InstanceVarargs [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_InstanceVarargs (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.RegularType [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_RegularType (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType [static fields]
(global $f_$initialized__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType (mut i32) (i32.const 0))

;;; Code for jsconstructor.JsConstructorClass [CLASS]
(type $jsconstructor.JsConstructorClass (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsconstructor.JsConstructorClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; JsConstructorClass()
(func $m_<init>__void@jsconstructor.JsConstructorClass
 (param $this (ref null $jsconstructor.JsConstructorClass))
 (result (ref null $jsconstructor.JsConstructorClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void JsConstructorClass.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.A [CLASS]
(type $jsconstructor.JsConstructorClass.A (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.A.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
))
(type $jsconstructor.JsConstructorClass.A.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; A(int x)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.A
 (param $this (ref null $jsconstructor.JsConstructorClass.A))
 (param $x i32)
 (result (ref null $jsconstructor.JsConstructorClass.A))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; A.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_A@jsconstructor.JsConstructorClass.A (local.get $this))
   ;; (A.this.fA = x);
   (struct.set $jsconstructor.JsConstructorClass.A $f_fA__jsconstructor_JsConstructorClass_A(local.get $this) (local.get $x))
  )
 )
 (local.get $this)
)

;;; A()
(func $m_<init>__void@jsconstructor.JsConstructorClass.A
 (param $this (ref null $jsconstructor.JsConstructorClass.A))
 (result (ref null $jsconstructor.JsConstructorClass.A))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; A.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_A@jsconstructor.JsConstructorClass.A (local.get $this))
  )
 )
 (local.get $this)
)

;;; void A.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_A@jsconstructor.JsConstructorClass.A
 (param $this (ref null $jsconstructor.JsConstructorClass.A))
 (block $return.label
  (block
   ;; (A.this.fA = 1);
   (struct.set $jsconstructor.JsConstructorClass.A $f_fA__jsconstructor_JsConstructorClass_A(local.get $this) (i32.const 1))
  )
 )
)

;;; void A.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.A
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.A.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_A)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.A.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_A (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.B [CLASS]
(type $jsconstructor.JsConstructorClass.B (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.B.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $f_fB__jsconstructor_JsConstructorClass_B (mut i32))
))
(type $jsconstructor.JsConstructorClass.B.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; B(int x)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.B
 (param $this (ref null $jsconstructor.JsConstructorClass.B))
 (param $x i32)
 (result (ref null $jsconstructor.JsConstructorClass.B))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.B.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.B )
   ;; A.this.A.<init>((x + 1));
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.A (local.get $this)(i32.add (local.get $x) (i32.const 1))))
   ;; B.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_B@jsconstructor.JsConstructorClass.B (local.get $this))
   ;; (B.this.fB = 3);
   (struct.set $jsconstructor.JsConstructorClass.B $f_fB__jsconstructor_JsConstructorClass_B(local.get $this) (i32.const 3))
  )
 )
 (local.get $this)
)

;;; B()
(func $m_<init>__void@jsconstructor.JsConstructorClass.B
 (param $this (ref null $jsconstructor.JsConstructorClass.B))
 (result (ref null $jsconstructor.JsConstructorClass.B))
 (block $return.label
  (block
   ;; B.this.B.<init>(10);
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.B (local.get $this)(i32.const 10)))
   ;; (B.this.fB = 4);
   (struct.set $jsconstructor.JsConstructorClass.B $f_fB__jsconstructor_JsConstructorClass_B(local.get $this) (i32.const 4))
  )
 )
 (local.get $this)
)

;;; B(int x, int y)
(func $m_<init>__int__int__void@jsconstructor.JsConstructorClass.B
 (param $this (ref null $jsconstructor.JsConstructorClass.B))
 (param $x i32)
 (param $y i32)
 (result (ref null $jsconstructor.JsConstructorClass.B))
 (block $return.label
  (block
   ;; B.this.B.<init>((x + y));
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.B (local.get $this)(i32.add (local.get $x) (local.get $y))))
   ;; (B.this.fB = (x * y));
   (struct.set $jsconstructor.JsConstructorClass.B $f_fB__jsconstructor_JsConstructorClass_B(local.get $this) (i32.mul (local.get $x) (local.get $y)))
  )
 )
 (local.get $this)
)

;;; void B.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_B@jsconstructor.JsConstructorClass.B
 (param $this (ref null $jsconstructor.JsConstructorClass.B))
 (block $return.label
  (block
   ;; (B.this.fB = 2);
   (struct.set $jsconstructor.JsConstructorClass.B $f_fB__jsconstructor_JsConstructorClass_B(local.get $this) (i32.const 2))
  )
 )
)

;;; void B.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.B
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.B.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_B)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.B.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_B (i32.const 1))
   ;; jsconstructor.JsConstructorClass.A.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.A )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.C [CLASS]
(type $jsconstructor.JsConstructorClass.C (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.C.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $f_fB__jsconstructor_JsConstructorClass_B (mut i32))
 (field $f_fC__jsconstructor_JsConstructorClass_C (mut i32))
))
(type $jsconstructor.JsConstructorClass.C.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; C(int x)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.C
 (param $this (ref null $jsconstructor.JsConstructorClass.C))
 (param $x i32)
 (result (ref null $jsconstructor.JsConstructorClass.C))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.C.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.C )
   ;; B.this.B.<init>((x * 2));
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.B (local.get $this)(i32.mul (local.get $x) (i32.const 2))))
   ;; C.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_C@jsconstructor.JsConstructorClass.C (local.get $this))
   ;; (C.this.fC = 6);
   (struct.set $jsconstructor.JsConstructorClass.C $f_fC__jsconstructor_JsConstructorClass_C(local.get $this) (i32.const 6))
  )
 )
 (local.get $this)
)

;;; C(int x, int y)
(func $m_<init>__int__int__void@jsconstructor.JsConstructorClass.C
 (param $this (ref null $jsconstructor.JsConstructorClass.C))
 (param $x i32)
 (param $y i32)
 (result (ref null $jsconstructor.JsConstructorClass.C))
 (block $return.label
  (block
   ;; C.this.C.<init>((x + y));
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.C (local.get $this)(i32.add (local.get $x) (local.get $y))))
   ;; (C.this.fC = 7);
   (struct.set $jsconstructor.JsConstructorClass.C $f_fC__jsconstructor_JsConstructorClass_C(local.get $this) (i32.const 7))
  )
 )
 (local.get $this)
)

;;; void C.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_C@jsconstructor.JsConstructorClass.C
 (param $this (ref null $jsconstructor.JsConstructorClass.C))
 (block $return.label
  (block
   ;; (C.this.fC = 1);
   (struct.set $jsconstructor.JsConstructorClass.C $f_fC__jsconstructor_JsConstructorClass_C(local.get $this) (i32.const 1))
  )
 )
)

;;; void C.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.C
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.C.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_C)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.C.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_C (i32.const 1))
   ;; jsconstructor.JsConstructorClass.B.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.B )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.D [CLASS]
(type $jsconstructor.JsConstructorClass.D (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.D.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $f_fB__jsconstructor_JsConstructorClass_B (mut i32))
 (field $f_fD__jsconstructor_JsConstructorClass_D (mut i32))
))
(type $jsconstructor.JsConstructorClass.D.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; D()
(func $m_<init>__void@jsconstructor.JsConstructorClass.D
 (param $this (ref null $jsconstructor.JsConstructorClass.D))
 (result (ref null $jsconstructor.JsConstructorClass.D))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.D.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.D )
   ;; B.this.B.<init>(9);
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.B (local.get $this)(i32.const 9)))
   ;; D.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_D@jsconstructor.JsConstructorClass.D (local.get $this))
   ;; (D.this.fD = 10);
   (struct.set $jsconstructor.JsConstructorClass.D $f_fD__jsconstructor_JsConstructorClass_D(local.get $this) (i32.const 10))
  )
 )
 (local.get $this)
)

;;; D(int x)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.D
 (param $this (ref null $jsconstructor.JsConstructorClass.D))
 (param $x i32)
 (result (ref null $jsconstructor.JsConstructorClass.D))
 (block $return.label
  (block
   ;; D.this.D.<init>();
   (drop (call $m_<init>__void@jsconstructor.JsConstructorClass.D (local.get $this)))
   ;; (D.this.fD = x);
   (struct.set $jsconstructor.JsConstructorClass.D $f_fD__jsconstructor_JsConstructorClass_D(local.get $this) (local.get $x))
  )
 )
 (local.get $this)
)

;;; void D.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_D@jsconstructor.JsConstructorClass.D
 (param $this (ref null $jsconstructor.JsConstructorClass.D))
 (block $return.label
  (block
   ;; (D.this.fD = 8);
   (struct.set $jsconstructor.JsConstructorClass.D $f_fD__jsconstructor_JsConstructorClass_D(local.get $this) (i32.const 8))
  )
 )
)

;;; void D.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.D
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.D.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_D)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.D.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_D (i32.const 1))
   ;; jsconstructor.JsConstructorClass.B.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.B )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.E [CLASS]
(type $jsconstructor.JsConstructorClass.E (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.E.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $f_fB__jsconstructor_JsConstructorClass_B (mut i32))
 (field $f_fC__jsconstructor_JsConstructorClass_C (mut i32))
 (field $f_fE__jsconstructor_JsConstructorClass_E (mut i32))
))
(type $jsconstructor.JsConstructorClass.E.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; E()
(func $m_<init>__void@jsconstructor.JsConstructorClass.E
 (param $this (ref null $jsconstructor.JsConstructorClass.E))
 (result (ref null $jsconstructor.JsConstructorClass.E))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.E.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.E )
   ;; C.this.C.<init>(10);
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.C (local.get $this)(i32.const 10)))
   ;; E.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_E@jsconstructor.JsConstructorClass.E (local.get $this))
   ;; (E.this.fE = 12);
   (struct.set $jsconstructor.JsConstructorClass.E $f_fE__jsconstructor_JsConstructorClass_E(local.get $this) (i32.const 12))
  )
 )
 (local.get $this)
)

;;; void E.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_E@jsconstructor.JsConstructorClass.E
 (param $this (ref null $jsconstructor.JsConstructorClass.E))
 (block $return.label
  (block
   ;; (E.this.fE = 11);
   (struct.set $jsconstructor.JsConstructorClass.E $f_fE__jsconstructor_JsConstructorClass_E(local.get $this) (i32.const 11))
  )
 )
)

;;; void E.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.E
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.E.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_E)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.E.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_E (i32.const 1))
   ;; jsconstructor.JsConstructorClass.C.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.C )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.F [CLASS]
(type $jsconstructor.JsConstructorClass.F (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.F.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $f_fB__jsconstructor_JsConstructorClass_B (mut i32))
 (field $f_fC__jsconstructor_JsConstructorClass_C (mut i32))
 (field $f_fF__jsconstructor_JsConstructorClass_F (mut i32))
))
(type $jsconstructor.JsConstructorClass.F.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; F(int x)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.F
 (param $this (ref null $jsconstructor.JsConstructorClass.F))
 (param $x i32)
 (result (ref null $jsconstructor.JsConstructorClass.F))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.F.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.F )
   ;; C.this.C.<init>((x + 2));
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.C (local.get $this)(i32.add (local.get $x) (i32.const 2))))
   ;; F.this.$init();
   (call $$init__void_$p_jsconstructor_JsConstructorClass_F@jsconstructor.JsConstructorClass.F (local.get $this))
   ;; (F.this.fF = (x + 3));
   (struct.set $jsconstructor.JsConstructorClass.F $f_fF__jsconstructor_JsConstructorClass_F(local.get $this) (i32.add (local.get $x) (i32.const 3)))
  )
 )
 (local.get $this)
)

;;; void F.$init()
(func $$init__void_$p_jsconstructor_JsConstructorClass_F@jsconstructor.JsConstructorClass.F
 (param $this (ref null $jsconstructor.JsConstructorClass.F))
 (block $return.label
  (block
   ;; (F.this.fF = 13);
   (struct.set $jsconstructor.JsConstructorClass.F $f_fF__jsconstructor_JsConstructorClass_F(local.get $this) (i32.const 13))
  )
 )
)

;;; void F.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.F
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.F.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_F)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.F.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_F (i32.const 1))
   ;; jsconstructor.JsConstructorClass.C.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.C )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.G [CLASS]
(type $jsconstructor.JsConstructorClass.G (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.G.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsconstructor.JsConstructorClass.G.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; G()
(func $m_<init>__void@jsconstructor.JsConstructorClass.G
 (param $this (ref null $jsconstructor.JsConstructorClass.G))
 (result (ref null $jsconstructor.JsConstructorClass.G))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.G.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.G )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void G.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.G
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.G.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_G)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.G.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_G (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.H [CLASS]
(type $jsconstructor.JsConstructorClass.H (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.H.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsconstructor.JsConstructorClass.H.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; H()
(func $m_<init>__void@jsconstructor.JsConstructorClass.H
 (param $this (ref null $jsconstructor.JsConstructorClass.H))
 (result (ref null $jsconstructor.JsConstructorClass.H))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.H.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.H )
   ;; G.this.G.<init>();
   (drop (call $m_<init>__void@jsconstructor.JsConstructorClass.G (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void H.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.H
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.H.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_H)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.H.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_H (i32.const 1))
   ;; jsconstructor.JsConstructorClass.G.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.G )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.Varargs [CLASS]
(type $jsconstructor.JsConstructorClass.Varargs (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.Varargs.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
))
(type $jsconstructor.JsConstructorClass.Varargs.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; Varargs(int... args)
(func $m_<init>__arrayOf_int__void@jsconstructor.JsConstructorClass.Varargs
 (param $this (ref null $jsconstructor.JsConstructorClass.Varargs))
 (param $args (ref null $int.array))
 (result (ref null $jsconstructor.JsConstructorClass.Varargs))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.Varargs.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.Varargs )
   ;; A.this.A.<init>(args[1]);
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.A (local.get $this)(array.get $int.array.elements (struct.get $int.array $elements (local.get $args)) (i32.const 1))))
  )
 )
 (local.get $this)
)

;;; void Varargs.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.Varargs
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.Varargs.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_Varargs)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.Varargs.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_Varargs (i32.const 1))
   ;; jsconstructor.JsConstructorClass.A.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.A )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.SubVarargs [CLASS]
(type $jsconstructor.JsConstructorClass.SubVarargs (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.SubVarargs.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
))
(type $jsconstructor.JsConstructorClass.SubVarargs.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; SubVarargs(Object i, int... args)
(func $m_<init>__java_lang_Object__arrayOf_int__void@jsconstructor.JsConstructorClass.SubVarargs
 (param $this (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (param $i (ref null $java.lang.Object))
 (param $args (ref null $int.array))
 (result (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.SubVarargs.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.SubVarargs )
   ;; Varargs.this.Varargs.<init>(args);
   (drop (call $m_<init>__arrayOf_int__void@jsconstructor.JsConstructorClass.Varargs (local.get $this)(local.get $args)))
  )
 )
 (local.get $this)
)

;;; SubVarargs(int j)
(func $m_<init>__int__void@jsconstructor.JsConstructorClass.SubVarargs
 (param $this (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (param $j i32)
 (result (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (local $$array_literal (ref null $int.array))
 (block $return.label
  (block
   ;; SubVarargs.this.SubVarargs.<init>(new Object.<init>(),(int[] $array_literal = new int[1],($array_literal[0] = j),$array_literal));
   (drop (call $m_<init>__java_lang_Object__arrayOf_int__void@jsconstructor.JsConstructorClass.SubVarargs (local.get $this)(call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt)))(block (result (ref null $int.array))
    
    (local.set $$array_literal (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 1) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 0) (local.get $j))
    (local.get $$array_literal)
   )))
  )
 )
 (local.get $this)
)

;;; void SubVarargs.subNativeInvocation()
(func $m_subNativeInvocation__void@jsconstructor.JsConstructorClass.SubVarargs
 (local $unusedS1 (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (local $unusedS2 (ref null $jsconstructor.JsConstructorClass.SubVarargs))
 (local $$array_literal (ref null $int.array))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.SubVarargs.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.SubVarargs )
   ;; SubVarargs unusedS1 = new SubVarargs.<init>(2);
   
   (local.set $unusedS1 (call $m_<init>__int__void@jsconstructor.JsConstructorClass.SubVarargs (struct.new_with_rtt $jsconstructor.JsConstructorClass.SubVarargs (global.get $jsconstructor.JsConstructorClass.SubVarargs.vtable) (i32.const 0) (i32.const 0) (global.get $jsconstructor.JsConstructorClass.SubVarargs.rtt))(i32.const 2)))
   ;; SubVarargs unusedS2 = new SubVarargs.<init>(new Object.<init>(),(int[] $array_literal = new int[3],($array_literal[0] = 1),($array_literal[1] = 2),($array_literal[2] = 3),$array_literal));
   
   (local.set $unusedS2 (call $m_<init>__java_lang_Object__arrayOf_int__void@jsconstructor.JsConstructorClass.SubVarargs (struct.new_with_rtt $jsconstructor.JsConstructorClass.SubVarargs (global.get $jsconstructor.JsConstructorClass.SubVarargs.vtable) (i32.const 0) (i32.const 0) (global.get $jsconstructor.JsConstructorClass.SubVarargs.rtt))(call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt)))(block (result (ref null $int.array))
    
    (local.set $$array_literal (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 3) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 0) (i32.const 1))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 1) (i32.const 2))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 2) (i32.const 3))
    (local.get $$array_literal)
   )))
  )
 )
)

;;; void SubVarargs.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.SubVarargs
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.SubVarargs.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_SubVarargs)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.SubVarargs.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_SubVarargs (i32.const 1))
   ;; jsconstructor.JsConstructorClass.Varargs.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.Varargs )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.InstanceVarargs [CLASS]
(type $jsconstructor.JsConstructorClass.InstanceVarargs (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.InstanceVarargs.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_fA__jsconstructor_JsConstructorClass_A (mut i32))
 (field $$outer_this__jsconstructor_JsConstructorClass_InstanceVarargs (mut (ref null $jsconstructor.JsConstructorClass)))
))
(type $jsconstructor.JsConstructorClass.InstanceVarargs.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; InstanceVarargs(JsConstructorClass $outer_this, int... args)
(func $m_<init>__jsconstructor_JsConstructorClass__arrayOf_int__void@jsconstructor.JsConstructorClass.InstanceVarargs
 (param $this (ref null $jsconstructor.JsConstructorClass.InstanceVarargs))
 (param $$outer_this (ref null $jsconstructor.JsConstructorClass))
 (param $args (ref null $int.array))
 (result (ref null $jsconstructor.JsConstructorClass.InstanceVarargs))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.InstanceVarargs.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.InstanceVarargs )
   ;; (InstanceVarargs.this.this = $outer_this);
   (struct.set $jsconstructor.JsConstructorClass.InstanceVarargs $$outer_this__jsconstructor_JsConstructorClass_InstanceVarargs(local.get $this) (local.get $$outer_this))
   ;; A.this.A.<init>(args[1]);
   (drop (call $m_<init>__int__void@jsconstructor.JsConstructorClass.A (local.get $this)(array.get $int.array.elements (struct.get $int.array $elements (local.get $args)) (i32.const 1))))
  )
 )
 (local.get $this)
)

;;; void InstanceVarargs.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.InstanceVarargs
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.InstanceVarargs.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_InstanceVarargs)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.InstanceVarargs.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_InstanceVarargs (i32.const 1))
   ;; jsconstructor.JsConstructorClass.A.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.A )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.RegularType [CLASS]
(type $jsconstructor.JsConstructorClass.RegularType (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.RegularType.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsconstructor.JsConstructorClass.RegularType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; RegularType(Object b)
(func $m_<init>__java_lang_Object__void@jsconstructor.JsConstructorClass.RegularType
 (param $this (ref null $jsconstructor.JsConstructorClass.RegularType))
 (param $b (ref null $java.lang.Object))
 (result (ref null $jsconstructor.JsConstructorClass.RegularType))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void RegularType.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.RegularType
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.RegularType.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_RegularType)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.RegularType.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_RegularType (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType [CLASS]
(type $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType (struct
 (field $vtable (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; JsConstructorSubtypeOfRegularType(Object object)
(func $m_<init>__java_lang_Object__void@jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType
 (param $this (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType))
 (param $object (ref null $java.lang.Object))
 (result (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType))
 (block $return.label
  (block
   ;; jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType )
   ;; RegularType.this.RegularType.<init>(object);
   (drop (call $m_<init>__java_lang_Object__void@jsconstructor.JsConstructorClass.RegularType (local.get $this)(local.get $object)))
  )
 )
 (local.get $this)
)

;;; JsConstructorSubtypeOfRegularType()
(func $m_<init>__void@jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType
 (param $this (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType))
 (result (ref null $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType))
 (block $return.label
  (block
   ;; JsConstructorSubtypeOfRegularType.this.JsConstructorSubtypeOfRegularType.<init>(new Object.<init>());
   (drop (call $m_<init>__java_lang_Object__void@jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType (local.get $this)(call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.vtable) (i32.const 0) (global.get $java.lang.Object.rtt)))))
  )
 )
 (local.get $this)
)

;;; void JsConstructorSubtypeOfRegularType.$clinit()
(func $$clinit__void@jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType
 (block $return.label
  (block
   ;; if (jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.$initialized) return;
   (if (global.get $f_$initialized__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.$initialized = true);
   (global.set $f_$initialized__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType (i32.const 1))
   ;; jsconstructor.JsConstructorClass.RegularType.$clinit();
   (call $$clinit__void@jsconstructor.JsConstructorClass.RegularType )
  )
 )
)

 ;;; Code for jsconstructor.JsConstructorClass [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.A [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.A.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.A.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.A.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.B [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.B.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.B.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.B.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.C [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.C.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.C.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.C.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.D [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.D.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.D.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.D.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.E [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.E.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.E.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.E.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.F [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.F.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.F.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.F.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.G [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.G.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.G.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.G.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.H [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.H.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.H.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.H.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.Varargs [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.Varargs.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.Varargs.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.Varargs.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.SubVarargs [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.SubVarargs.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.SubVarargs.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.SubVarargs.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.InstanceVarargs [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.InstanceVarargs.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.InstanceVarargs.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.InstanceVarargs.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.RegularType [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.RegularType.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.RegularType.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.RegularType.vtable)))

 ;;; Code for jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType [vtable.init]
 (global.set $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable (struct.new_with_rtt $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType.vtable)))

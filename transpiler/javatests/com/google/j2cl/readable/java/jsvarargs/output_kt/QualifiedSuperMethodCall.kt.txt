// Generated from "jsvarargs/QualifiedSuperMethodCall.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package jsvarargs

import javaemul.lang.*
import jsvarargs.Main
import kotlin.IntArray
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.intArrayOf
import kotlin.native.ObjCName

@ObjCName("JsvarargsQualifiedSuperMethodCall", exact = true)
open class QualifiedSuperMethodCall: Main {
 constructor(): super(0)

 @ObjCName("JsvarargsQualifiedSuperMethodCall_InnerClass", exact = true)
 open inner class InnerClass {
  @ObjCName("test")
  open fun test() {
   super<Main>@QualifiedSuperMethodCall.f3(1, 1, 2)
   super<Main>@QualifiedSuperMethodCall.f3(1)
   super<Main>@QualifiedSuperMethodCall.f3(1, 1, 2)
   super<Main>@QualifiedSuperMethodCall.f3(1)
   val ints: IntArray? = intArrayOf(1, 2)
   super<Main>@QualifiedSuperMethodCall.f3(1, *ints!!)
  }
 }
}

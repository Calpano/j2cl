;;; Code for multipletopclasses.MultipleTopClasses

;;; CLASS  AnotherClass
(type $multipletopclasses.AnotherClass (struct
 (field $vtable (ref null $multipletopclasses.AnotherClass.vtable))
))
(type $multipletopclasses.AnotherClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $multipletopclasses.AnotherClass.vtable (mut (ref null $multipletopclasses.AnotherClass.vtable)) (ref.null $multipletopclasses.AnotherClass.vtable))

;;; AnotherClass()
(func $m_<init>__void_$pp_multipletopclasses@multipletopclasses.AnotherClass
 (param $this (ref null $multipletopclasses.AnotherClass))
 (result (ref null $multipletopclasses.AnotherClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void_$pp_multipletopclasses@multipletopclasses.AnotherClass))

;;; CLASS  MultipleTopClasses
(type $multipletopclasses.MultipleTopClasses (struct
 (field $vtable (ref null $multipletopclasses.MultipleTopClasses.vtable))
))
(type $multipletopclasses.MultipleTopClasses.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $multipletopclasses.MultipleTopClasses.vtable (mut (ref null $multipletopclasses.MultipleTopClasses.vtable)) (ref.null $multipletopclasses.MultipleTopClasses.vtable))

;;; MultipleTopClasses()
(func $m_<init>__void@multipletopclasses.MultipleTopClasses
 (param $this (ref null $multipletopclasses.MultipleTopClasses))
 (result (ref null $multipletopclasses.MultipleTopClasses))
 (block $return.label
  (block
   ;; AnotherClass.this.AnotherClass.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void@multipletopclasses.MultipleTopClasses))

;;; Code for multipletopclasses.AnotherClass [vtable]
 (global.set $multipletopclasses.AnotherClass.vtable (struct.new_with_rtt $multipletopclasses.AnotherClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $multipletopclasses.AnotherClass.vtable)))
;;; Code for multipletopclasses.MultipleTopClasses [vtable]
 (global.set $multipletopclasses.MultipleTopClasses.vtable (struct.new_with_rtt $multipletopclasses.MultipleTopClasses.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $multipletopclasses.MultipleTopClasses.vtable)))
))
(start $.runtime.init)


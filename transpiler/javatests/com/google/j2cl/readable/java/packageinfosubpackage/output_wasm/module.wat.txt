;;; Code for packageinfosubpackage.package-info
;;; Code for packageinfosubpackage.Foo

;;; CLASS  Foo
(type $packageinfosubpackage.Foo (struct
 (field $vtable (ref null $packageinfosubpackage.Foo.vtable))
 (field $nativeBar@packageinfosubpackage.Foo (mut (ref null $packageinfosubpackage.Foo.NativeBar)))
))
(type $packageinfosubpackage.Foo.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.Foo.vtable (mut (ref null $packageinfosubpackage.Foo.vtable)) (ref.null $packageinfosubpackage.Foo.vtable))

;;; Foo()
(func $m_<init>__void@packageinfosubpackage.Foo
 (param $this (ref null $packageinfosubpackage.Foo))
 (result (ref null $packageinfosubpackage.Foo))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void@packageinfosubpackage.Foo))

;;; CLASS  NativeBar
(type $packageinfosubpackage.Foo.NativeBar (struct
 (field $vtable (ref null $packageinfosubpackage.Foo.NativeBar.vtable))
))
(type $packageinfosubpackage.Foo.NativeBar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.Foo.NativeBar.vtable (mut (ref null $packageinfosubpackage.Foo.NativeBar.vtable)) (ref.null $packageinfosubpackage.Foo.NativeBar.vtable))

;;; NativeBar()
(func $m_<init>__void_$p_packageinfosubpackage_Foo_NativeBar@packageinfosubpackage.Foo.NativeBar
 (param $this (ref null $packageinfosubpackage.Foo.NativeBar))
 (result (ref null $packageinfosubpackage.Foo.NativeBar))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void_$p_packageinfosubpackage_Foo_NativeBar@packageinfosubpackage.Foo.NativeBar))
;;; Code for packageinfosubpackage.subpackage.Bar

;;; CLASS  Bar
(type $packageinfosubpackage.subpackage.Bar (struct
 (field $vtable (ref null $packageinfosubpackage.subpackage.Bar.vtable))
))
(type $packageinfosubpackage.subpackage.Bar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.subpackage.Bar.vtable (mut (ref null $packageinfosubpackage.subpackage.Bar.vtable)) (ref.null $packageinfosubpackage.subpackage.Bar.vtable))
(global $WOO@packageinfosubpackage.subpackage.Bar (mut i32) (i32.const 0))

;;; Bar()
(func $m_<init>__void@packageinfosubpackage.subpackage.Bar
 (param $this (ref null $packageinfosubpackage.subpackage.Bar))
 (result (ref null $packageinfosubpackage.subpackage.Bar))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void@packageinfosubpackage.subpackage.Bar))

;;; Code for packageinfosubpackage.Foo [vtable]
 (global.set $packageinfosubpackage.Foo.vtable (struct.new_with_rtt $packageinfosubpackage.Foo.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.Foo.vtable)))
;;; Code for packageinfosubpackage.Foo.NativeBar [vtable]
 (global.set $packageinfosubpackage.Foo.NativeBar.vtable (struct.new_with_rtt $packageinfosubpackage.Foo.NativeBar.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.Foo.NativeBar.vtable)))
;;; Code for packageinfosubpackage.subpackage.Bar [vtable]
 (global.set $packageinfosubpackage.subpackage.Bar.vtable (struct.new_with_rtt $packageinfosubpackage.subpackage.Bar.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.subpackage.Bar.vtable)))
))
(start $.runtime.init)


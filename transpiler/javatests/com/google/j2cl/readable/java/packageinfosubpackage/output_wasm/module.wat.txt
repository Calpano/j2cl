;;; Code for packageinfosubpackage.package-info
;;; Code for packageinfosubpackage.Foo

;;; CLASS  Foo
(type $packageinfosubpackage.Foo (struct
 (field $vtable (ref null $packageinfosubpackage.Foo.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
 (field $nativeBar@packageinfosubpackage.Foo (mut (ref null $packageinfosubpackage.Foo.NativeBar)))
))
(type $packageinfosubpackage.Foo.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.Foo.vtable (mut (ref null $packageinfosubpackage.Foo.vtable)) (ref.null $packageinfosubpackage.Foo.vtable))
(global $$initialized@packageinfosubpackage.Foo (mut i32) (i32.const 0))

;;; Foo()
(func $m_<init>__void@packageinfosubpackage.Foo
 (param $this (ref null $packageinfosubpackage.Foo))
 (result (ref null $packageinfosubpackage.Foo))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
   ;; Foo.this.$init();
   (call $$init__void_$p_packageinfosubpackage_Foo@packageinfosubpackage.Foo (local.get $this))
  )
 )
 (local.get $this)
)

;;; void Foo.$init()
(func $$init__void_$p_packageinfosubpackage_Foo@packageinfosubpackage.Foo
 (param $this (ref null $packageinfosubpackage.Foo))
 (block $return.label
  (block
   ;; (Foo.this.nativeBar = new NativeBar.<init>());
   (struct.set $packageinfosubpackage.Foo $nativeBar@packageinfosubpackage.Foo(local.get $this) (call $m_<init>__void_$p_packageinfosubpackage_Foo_NativeBar@packageinfosubpackage.Foo.NativeBar (struct.new_with_rtt $packageinfosubpackage.Foo.NativeBar (global.get $packageinfosubpackage.Foo.NativeBar.vtable) (i32.const 0) (global.get $packageinfosubpackage.Foo.NativeBar.rtt))))
  )
 )
)

;;; void Foo.$clinit()
(func $$clinit__void@packageinfosubpackage.Foo
 (block $return.label
  (block
   ;; if (packageinfosubpackage.Foo.$initialized) return;
   (if (global.get $$initialized@packageinfosubpackage.Foo)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (packageinfosubpackage.Foo.$initialized = true);
   (global.set $$initialized@packageinfosubpackage.Foo (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; CLASS  NativeBar
(type $packageinfosubpackage.Foo.NativeBar (struct
 (field $vtable (ref null $packageinfosubpackage.Foo.NativeBar.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $packageinfosubpackage.Foo.NativeBar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.Foo.NativeBar.vtable (mut (ref null $packageinfosubpackage.Foo.NativeBar.vtable)) (ref.null $packageinfosubpackage.Foo.NativeBar.vtable))
(global $$initialized@packageinfosubpackage.Foo.NativeBar (mut i32) (i32.const 0))

;;; NativeBar()
(func $m_<init>__void_$p_packageinfosubpackage_Foo_NativeBar@packageinfosubpackage.Foo.NativeBar
 (param $this (ref null $packageinfosubpackage.Foo.NativeBar))
 (result (ref null $packageinfosubpackage.Foo.NativeBar))
 (block $return.label
  (block
   ;; packageinfosubpackage.Foo.NativeBar.$clinit();
   (call $$clinit__void@packageinfosubpackage.Foo.NativeBar )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void NativeBar.$clinit()
(func $$clinit__void@packageinfosubpackage.Foo.NativeBar
 (block $return.label
  (block
   ;; if (packageinfosubpackage.Foo.NativeBar.$initialized) return;
   (if (global.get $$initialized@packageinfosubpackage.Foo.NativeBar)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (packageinfosubpackage.Foo.NativeBar.$initialized = true);
   (global.set $$initialized@packageinfosubpackage.Foo.NativeBar (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)
;;; Code for packageinfosubpackage.subpackage.Bar

;;; CLASS  Bar
(type $packageinfosubpackage.subpackage.Bar (struct
 (field $vtable (ref null $packageinfosubpackage.subpackage.Bar.vtable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
))
(type $packageinfosubpackage.subpackage.Bar.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $packageinfosubpackage.subpackage.Bar.vtable (mut (ref null $packageinfosubpackage.subpackage.Bar.vtable)) (ref.null $packageinfosubpackage.subpackage.Bar.vtable))
(global $WOO@packageinfosubpackage.subpackage.Bar i32 (i32.const 1001))
(global $$initialized@packageinfosubpackage.subpackage.Bar (mut i32) (i32.const 0))

;;; Bar()
(func $m_<init>__void@packageinfosubpackage.subpackage.Bar
 (param $this (ref null $packageinfosubpackage.subpackage.Bar))
 (result (ref null $packageinfosubpackage.subpackage.Bar))
 (block $return.label
  (block
   ;; packageinfosubpackage.subpackage.Bar.$clinit();
   (call $$clinit__void@packageinfosubpackage.subpackage.Bar )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Bar.$clinit()
(func $$clinit__void@packageinfosubpackage.subpackage.Bar
 (block $return.label
  (block
   ;; if (packageinfosubpackage.subpackage.Bar.$initialized) return;
   (if (global.get $$initialized@packageinfosubpackage.subpackage.Bar)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (packageinfosubpackage.subpackage.Bar.$initialized = true);
   (global.set $$initialized@packageinfosubpackage.subpackage.Bar (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for packageinfosubpackage.Foo [vtable]
 (global.set $packageinfosubpackage.Foo.vtable (struct.new_with_rtt $packageinfosubpackage.Foo.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.Foo.vtable)))
;;; Code for packageinfosubpackage.Foo.NativeBar [vtable]
 (global.set $packageinfosubpackage.Foo.NativeBar.vtable (struct.new_with_rtt $packageinfosubpackage.Foo.NativeBar.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.Foo.NativeBar.vtable)))
;;; Code for packageinfosubpackage.subpackage.Bar [vtable]
 (global.set $packageinfosubpackage.subpackage.Bar.vtable (struct.new_with_rtt $packageinfosubpackage.subpackage.Bar.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $packageinfosubpackage.subpackage.Bar.vtable)))
))
(start $.runtime.init)


;;; Code for supercallnondefault.Child

;;; CLASS  Parent

(type $supercallnondefault.Parent (struct
 (field $field@supercallnondefault.Parent (mut i32))
))

;;; Parent(int f)
(func $<init><int>:void@supercallnondefault.Parent
 (param $this (ref null $supercallnondefault.Parent))
 (param $f i32)
 (result (ref null $supercallnondefault.Parent))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
   ;; (Parent.this.field = f);
   (struct.set $supercallnondefault.Parent $field@supercallnondefault.Parent  (ref.null $supercallnondefault.Parent) (local.get $f)))
 )
 (local.get $this)
)

;;; CLASS  Child

(type $supercallnondefault.Child (struct
 (field $field@supercallnondefault.Parent (mut i32))
))

;;; Child(int a)
(func $<init><int>:void@supercallnondefault.Child
 (param $this (ref null $supercallnondefault.Child))
 (param $a i32)
 (result (ref null $supercallnondefault.Child))
 (block $return.label
  (block
   ;; Parent.this.Parent.<init>(a);
   
  )
 )
 (local.get $this)
)


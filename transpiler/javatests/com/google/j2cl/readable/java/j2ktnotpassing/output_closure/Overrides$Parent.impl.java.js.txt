goog.module('j2ktnotpassing.Overrides.Parent$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('j2ktnotpassing.Overrides.Parent.$LambdaAdaptor$impl');

/**
 * @interface
 * @template T
 */
class Parent {
 /** @abstract @nodts @template E */
 m_foo__java_lang_Object__void(/** E */ e) {}
 /** @nodts @template T @return {Parent<T>} */
 static $adapt(/** ?function(?):void */ fn) {
  Parent.$clinit();
  return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
 }
 /** @nodts */
 static $clinit() {
  Parent.$clinit = () =>{};
  Parent.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__j2ktnotpassing_Overrides_Parent = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__j2ktnotpassing_Overrides_Parent;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('j2ktnotpassing.Overrides.Parent.$LambdaAdaptor$impl');
 }
}
Parent.$markImplementor(/**@type {Function}*/ (Parent));
$Util.$setClassMetadataForInterface(Parent, 'j2ktnotpassing.Overrides$Parent');

exports = Parent;

//# sourceMappingURL=Overrides$Parent.js.map

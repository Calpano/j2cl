goog.module('j2ktnotpassing.AccidentalOverride.TestExplicitOverride$impl');

const Interface = goog.require('j2ktnotpassing.AccidentalOverride.Interface$impl');
const SuperClass = goog.require('j2ktnotpassing.AccidentalOverride.SuperClass$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let AccidentalOverride = goog.forwardDeclare('j2ktnotpassing.AccidentalOverride$impl');

/**
 * @implements {Interface}
 */
class TestExplicitOverride extends SuperClass {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {AccidentalOverride} @nodts*/
  this.$outer_this__j2ktnotpassing_AccidentalOverride_TestExplicitOverride;
 }
 /** @nodts @return {!TestExplicitOverride} */
 static $create__j2ktnotpassing_AccidentalOverride(/** AccidentalOverride */ $outer_this) {
  TestExplicitOverride.$clinit();
  let $instance = new TestExplicitOverride();
  $instance.$ctor__j2ktnotpassing_AccidentalOverride_TestExplicitOverride__j2ktnotpassing_AccidentalOverride__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__j2ktnotpassing_AccidentalOverride_TestExplicitOverride__j2ktnotpassing_AccidentalOverride__void(/** AccidentalOverride */ $outer_this) {
  this.$outer_this__j2ktnotpassing_AccidentalOverride_TestExplicitOverride = $outer_this;
  this.$ctor__j2ktnotpassing_AccidentalOverride_SuperClass__j2ktnotpassing_AccidentalOverride__void($outer_this);
 }
 /** @override @nodts */
 m_accidentalOverride__void() {
  super.m_accidentalOverride__void();
 }
 /** @nodts */
 static $clinit() {
  TestExplicitOverride.$clinit = () =>{};
  TestExplicitOverride.$loadModules();
  SuperClass.$clinit();
  Interface.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof TestExplicitOverride;
 }
 
 /** @nodts */
 static $loadModules() {}
}
Interface.$markImplementor(TestExplicitOverride);
$Util.$setClassMetadata(TestExplicitOverride, 'j2ktnotpassing.AccidentalOverride$TestExplicitOverride');

exports = TestExplicitOverride;

//# sourceMappingURL=AccidentalOverride$TestExplicitOverride.js.map

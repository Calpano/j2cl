// Generated from "j2ktnotpassing/DefaultNullable.java"
@file:OptIn(ExperimentalObjCName::class)

package j2ktnotpassing

import javaemul.lang.*
import j2ktnotpassing.DefaultNullable
import j2ktnotpassing.NotNullable
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktnotpassingDefaultNullable", exact = true)
open class DefaultNullable {
 companion object {
  @JvmStatic
  fun testNonNullableLambdas() {
   val methodReference: NotNullable.Consumer<String?>? = NotNullable.Consumer<String?> { arg0: String ->
    DefaultNullable.accept(arg0)
   }
  }

  @JvmStatic
  fun accept(
   @ObjCName("withNSString", exact = false) s: String?
  ) {}
 }
}

@ObjCName("J2ktnotpassingNotNullable", exact = true)
open class NotNullable {
 @ObjCName("J2ktnotpassingNotNullable_Consumer", exact = true)
 fun interface Consumer<T> {
  fun accept(
   @ObjCName("withNSObject", exact = false) t: T
  )
 }
}

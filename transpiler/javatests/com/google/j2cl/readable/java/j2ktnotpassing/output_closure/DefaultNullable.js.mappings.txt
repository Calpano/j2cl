[DefaultNullable] => [DefaultNullable]
[DefaultNullable] => [constructor]
[DefaultNullable] => [super();] "j2ktnotpassing.DefaultNullable.<synthetic: ctor_js>"
[DefaultNullable] => [$create__]
[DefaultNullable] => [DefaultNullable.$clinit();] "j2ktnotpassing.DefaultNullable.<synthetic: ctor_create>"
[DefaultNullable] => [let $instance = new DefaultNullable();] "j2ktnotpassing.DefaultNullable.<synthetic: ctor_create>"
[DefaultNullable] => [$instance.$ctor__j2ktnotpassing_DefaultNullable__void();] "j2ktnotpassing.DefaultNullable.<synthetic: ctor_create>"
[DefaultNullable] => [return $instance;] "j2ktnotpassing.DefaultNullable.<synthetic: ctor_create>"
[DefaultNullable] => [$ctor__j2ktnotpassing_DefaultNullable__void]
[DefaultNullable] => [this.$ctor__java_lang_Object__void();] "j2ktnotpassing.DefaultNullable.<init>"
[testNonNullableLambdas] => [m_testNonNullableLambdas__void]
[{
    NotNullable.Consumer<String> lambda = s -> {};
...    NotNullable.IntFunction<String[]> newArrayReference = String[]::new;
  }] => [DefaultNullable.$clinit();] "j2ktnotpassing.DefaultNullable.testNonNullableLambdas"
[NotNullable.Consumer<String> lambda = s -> {};] => [let lambda = Consumer.$adapt((s) =>{
   let s_1 = /**@type {?string}*/ ($Casts.$to(s, j_l_String));
  });] "j2ktnotpassing.DefaultNullable.testNonNullableLambdas"
[lambda] => [lambda] "lambda"
[s] => [s] "s"
[s -> {}] => [let s_1 = /**@type {?string}*/ ($Casts.$to(s, j_l_String));] "j2ktnotpassing.DefaultNullable.<lambda in testNonNullableLambdas>"
[s] => [s_1] "s"
[NotNullable.Consumer<String> methodReference = DefaultNullable::accept;] => [let methodReference = Consumer.$adapt((arg0) =>{
   let arg0_1 = /**@type {?string}*/ ($Casts.$to(arg0, j_l_String));
   DefaultNullable.m_accept__java_lang_String__void(arg0_1);
  });] "j2ktnotpassing.DefaultNullable.testNonNullableLambdas"
[methodReference] => [methodReference] "methodReference"
[DefaultNullable::accept] => [let arg0_1 = /**@type {?string}*/ ($Casts.$to(arg0, j_l_String));] "j2ktnotpassing.DefaultNullable.<lambda in testNonNullableLambdas>"
[DefaultNullable::accept] => [DefaultNullable.m_accept__java_lang_String__void(arg0_1);] "j2ktnotpassing.DefaultNullable.<lambda in testNonNullableLambdas>"
[NotNullable.Supplier<String> constructorReference = String::new;] => [let constructorReference = Supplier.$adapt(() =>{
   return j_l_String.$create__();
  });] "j2ktnotpassing.DefaultNullable.testNonNullableLambdas"
[constructorReference] => [constructorReference] "constructorReference"
[String::new] => [return j_l_String.$create__();] "j2ktnotpassing.DefaultNullable.<lambda in testNonNullableLambdas>"
[NotNullable.IntFunction<String[]> newArrayReference = String[]::new;] => [let newArrayReference = IntFunction.$adapt((/** number */ arg0_2) =>{
   return /**@type {!Array<?string>}*/ ($Arrays.$create([arg0_2], j_l_String));
  });] "j2ktnotpassing.DefaultNullable.testNonNullableLambdas"
[newArrayReference] => [newArrayReference] "newArrayReference"
[String[]::new] => [return /**@type {!Array<?string>}*/ ($Arrays.$create([arg0_2], j_l_String));] "j2ktnotpassing.DefaultNullable.<lambda in testNonNullableLambdas>"
[accept] => [m_accept__java_lang_String__void]
[s] => [s] "s"
[{}] => [DefaultNullable.$clinit();] "j2ktnotpassing.DefaultNullable.accept"
[DefaultNullable] => [$clinit]
[DefaultNullable] => [DefaultNullable.$clinit = () =>{};] "j2ktnotpassing.DefaultNullable.<clinit>"
[DefaultNullable] => [DefaultNullable.$loadModules();] "j2ktnotpassing.DefaultNullable.<clinit>"
[DefaultNullable] => [j_l_Object.$clinit();] "j2ktnotpassing.DefaultNullable.<clinit>"

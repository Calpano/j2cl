// Generated from "j2ktnotpassing/AnonymousClass.java"
package j2ktnotpassing

import javaemul.lang.*
import kotlin.jvm.*

abstract class SomeClassWithStaticMembers {
 abstract fun foo(): kotlin.String?

 constructor(i: kotlin.Int)

 companion object {
  @kotlin.jvm.JvmStatic
  fun staticMethod() {}
 }
}

open class AnonymousClass {
 @kotlin.jvm.JvmField var i: kotlin.Int = 0

 open fun main() {
  val instanceWithStaticMembers: j2ktnotpassing.SomeClassWithStaticMembers? = object : j2ktnotpassing.SomeClassWithStaticMembers(this.i) {
   @kotlin.jvm.JvmField var `object`: kotlin.Any? = this

   @kotlin.jvm.JvmField var outer: kotlin.Any? = this@AnonymousClass

   open override fun foo(): kotlin.String? {
    return "a"
   }
  }
 }
}

;;; Code for array.Arrays [vtable]
(global $array.Arrays.vtable (mut (ref null $array.Arrays.vtable)) (ref.null $array.Arrays.vtable))

;;; Code for array.Arrays.SomeObject [vtable]
(global $array.Arrays.SomeObject.vtable (mut (ref null $array.Arrays.SomeObject.vtable)) (ref.null $array.Arrays.SomeObject.vtable))

;;; Code for array.Arrays.NativeType [vtable]
(global $array.Arrays.NativeType.vtable (mut (ref null $array.Arrays.NativeType.vtable)) (ref.null $array.Arrays.NativeType.vtable))

;;; Code for array.Arrays.ArrayContainer [vtable]
(global $array.Arrays.ArrayContainer.vtable (mut (ref null $array.Arrays.ArrayContainer.vtable)) (ref.null $array.Arrays.ArrayContainer.vtable))

;;; Code for array.Arrays [static fields]
(global $f_$initialized__array_Arrays (mut i32) (i32.const 0))

;;; Code for array.Arrays.SomeObject [static fields]
(global $f_$initialized__array_Arrays_SomeObject (mut i32) (i32.const 0))

;;; Code for array.Arrays.NativeType [static fields]
(global $f_$initialized__array_Arrays_NativeType (mut i32) (i32.const 0))

;;; Code for array.Arrays.ArrayContainer [static fields]
(global $f_$initialized__array_Arrays_ArrayContainer (mut i32) (i32.const 0))

;;; Code for array.Arrays [CLASS]
(type $array.Arrays (struct
 (field $vtable (ref null $array.Arrays.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $array.Arrays.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_testObjectArray__void (mut (ref $function.__$void)))
 (field $m_testJavaTypeArray__void (mut (ref $function.__$void)))
 (field $m_testIntArrays__void_$pp_array (mut (ref $function.__$void)))
 (field $m_testLongArrays__void_$pp_array (mut (ref $function.__$void)))
 (field $m_testDevirtualizedTypeArrays__void_$pp_array (mut (ref $function.__$void)))
 (field $m_testStringArrays__void_$pp_array (mut (ref $function.__$void)))
 (field $m_testNativeArray__void (mut (ref $function.__$void)))
 (field $m_testErasureCastsOnArrayAccess__void (mut (ref $function.__$void)))
 (field $m_testArraysSupertypeClosureTypes__void (mut (ref $function.__$void)))
 (field $m_consumesCloneable__java_lang_Cloneable__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_consumesSerializable__java_io_Serializable__void (mut (ref $function.$java.lang.Object__$void)))
))

;;; Arrays()
(func $m_<init>__void@array.Arrays
 (param $this (ref null $array.Arrays))
 (result (ref null $array.Arrays))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Arrays.testObjectArray()
(func $m_testObjectArray__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $objects (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (local $objects2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $object (ref null $java.lang.Object))
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $$cast_expression_2 (ref null $java.lang.Object))
 (local $$cast_expression_3 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; Object[] objects = new Object[100];
   
   (local.set $objects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 100) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (objects = new Object[0]);
   (local.set $objects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (objects = (Object[] $array_literal = new Object[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal));
   (local.set $objects (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (ref.null $java.lang.Object))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (ref.null $java.lang.Object))
    (local.get $$array_literal)
   ))
   ;; Object[][] objects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),-1);
   
   (local.set $objects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const -1)))
   ;; (objects2d = (Object[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),-1),($array_literal[0] = (Object[] $array_literal = new Object[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $objects2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const -1)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $Object.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 0) (ref.null $java.lang.Object))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 1) (ref.null $java.lang.Object))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $Object.array))
    (local.get $$array_literal_2)
   ))
   ;; (objects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),-1));
   (local.set $objects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   ;; Object object = (Object $cast_expression = objects[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Object) $cast_expression)));
   
   (local.set $object (block (result (ref null $java.lang.Object))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects)) (i32.const 0)))
    (if (result (ref null $java.lang.Object)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $java.lang.Object)) (else (ref.cast $java.lang.Object $java.lang.Object (local.get $$cast_expression) (global.get $java.lang.Object.rtt))))
   ))
   ;; (object = (Object $cast_expression = (Object $cast_expression = objects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Object[]) $cast_expression)))[1],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Object) $cast_expression))));
   (local.set $object (block (result (ref null $java.lang.Object))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
     
     (local.set $$cast_expression_2 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects2d)) (i32.const 0)))
     (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_2)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_2) (global.get $Object.array.rtt))))
    )) (i32.const 1)))
    (if (result (ref null $java.lang.Object)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $java.lang.Object)) (else (ref.cast $java.lang.Object $java.lang.Object (local.get $$cast_expression_1) (global.get $java.lang.Object.rtt))))
   ))
   ;; (objects[0] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $objects)) (i32.const 0) (ref.null $java.lang.Object))
   ;; ((Object $cast_expression = objects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Object[]) $cast_expression)))[1] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
    
    (local.set $$cast_expression_3 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects2d)) (i32.const 0)))
    (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_3)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_3) (global.get $Object.array.rtt))))
   )) (i32.const 1) (ref.null $java.lang.Object))
  )
 )
)
(elem declare func $m_testObjectArray__void@array.Arrays)

;;; void Arrays.testJavaTypeArray()
(func $m_testJavaTypeArray__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $objects (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (local $objects2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $someObject (ref null $array.Arrays.SomeObject))
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $$cast_expression_2 (ref null $java.lang.Object))
 (local $$cast_expression_3 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; SomeObject[] objects = new SomeObject[100];
   
   (local.set $objects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 100) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (objects = new SomeObject[0]);
   (local.set $objects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (objects = (SomeObject[] $array_literal = new SomeObject[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal));
   (local.set $objects (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (ref.null $array.Arrays.SomeObject))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (ref.null $array.Arrays.SomeObject))
    (local.get $$array_literal)
   ))
   ;; SomeObject[][] objects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),-1);
   
   (local.set $objects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const -1)))
   ;; (objects2d = (SomeObject[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),-1),($array_literal[0] = (SomeObject[] $array_literal = new SomeObject[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $objects2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const -1)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $Object.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 0) (ref.null $array.Arrays.SomeObject))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 1) (ref.null $array.Arrays.SomeObject))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $Object.array))
    (local.get $$array_literal_2)
   ))
   ;; (objects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),-1));
   (local.set $objects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   ;; SomeObject someObject = (Object $cast_expression = objects[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((SomeObject) $cast_expression)));
   
   (local.set $someObject (block (result (ref null $array.Arrays.SomeObject))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects)) (i32.const 0)))
    (if (result (ref null $array.Arrays.SomeObject)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $array.Arrays.SomeObject)) (else (ref.cast $java.lang.Object $array.Arrays.SomeObject (local.get $$cast_expression) (global.get $array.Arrays.SomeObject.rtt))))
   ))
   ;; (someObject = (Object $cast_expression = (Object $cast_expression = objects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((SomeObject[]) $cast_expression)))[1],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((SomeObject) $cast_expression))));
   (local.set $someObject (block (result (ref null $array.Arrays.SomeObject))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
     
     (local.set $$cast_expression_2 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects2d)) (i32.const 0)))
     (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_2)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_2) (global.get $Object.array.rtt))))
    )) (i32.const 1)))
    (if (result (ref null $array.Arrays.SomeObject)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $array.Arrays.SomeObject)) (else (ref.cast $java.lang.Object $array.Arrays.SomeObject (local.get $$cast_expression_1) (global.get $array.Arrays.SomeObject.rtt))))
   ))
   ;; (objects[0] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $objects)) (i32.const 0) (ref.null $array.Arrays.SomeObject))
   ;; ((Object $cast_expression = objects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((SomeObject[]) $cast_expression)))[1] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
    
    (local.set $$cast_expression_3 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $objects2d)) (i32.const 0)))
    (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_3)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_3) (global.get $Object.array.rtt))))
   )) (i32.const 1) (ref.null $array.Arrays.SomeObject))
  )
 )
)
(elem declare func $m_testJavaTypeArray__void@array.Arrays)

;;; void Arrays.testIntArrays()
(func $m_testIntArrays__void_$pp_array@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $ints (ref null $int.array))
 (local $$array_literal (ref null $int.array))
 (local $ints2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $int.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $n i32)
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; int[] ints = new int[100];
   
   (local.set $ints (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 100) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
   ;; (ints = new int[0]);
   (local.set $ints (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 0) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
   ;; (ints = (int[] $array_literal = new int[2],($array_literal[0] = 0),($array_literal[1] = 1),$array_literal));
   (local.set $ints (block (result (ref null $int.array))
    
    (local.set $$array_literal (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 0) (i32.const 0))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal)) (i32.const 1) (i32.const 1))
    (local.get $$array_literal)
   ))
   ;; int[][] ints2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),5);
   
   (local.set $ints2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const 5)))
   ;; (ints2d = (int[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),5),($array_literal[0] = (int[] $array_literal = new int[2],($array_literal[0] = 1),($array_literal[1] = 2),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $ints2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const 5)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $int.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_4)) (i32.const 0) (i32.const 1))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_4)) (i32.const 1) (i32.const 2))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $int.array))
    (local.get $$array_literal_2)
   ))
   ;; (ints2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),5));
   (local.set $ints2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const 5)))
   ;; int n = ints[0];
   
   (local.set $n (array.get $int.array.elements (struct.get $int.array $elements (local.get $ints)) (i32.const 0)))
   ;; (n = (Object $cast_expression = ints2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((int[]) $cast_expression)))[1]);
   (local.set $n (array.get $int.array.elements (struct.get $int.array $elements (block (result (ref null $int.array))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $ints2d)) (i32.const 0)))
    (if (result (ref null $int.array)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $int.array)) (else (ref.cast $java.lang.Object $int.array (local.get $$cast_expression) (global.get $int.array.rtt))))
   )) (i32.const 1)))
   ;; (ints[0] = 1);
   (array.set $int.array.elements (struct.get $int.array $elements (local.get $ints)) (i32.const 0) (i32.const 1))
   ;; ((Object $cast_expression = ints2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((int[]) $cast_expression)))[1] = 1);
   (array.set $int.array.elements (struct.get $int.array $elements (block (result (ref null $int.array))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $ints2d)) (i32.const 0)))
    (if (result (ref null $int.array)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $int.array)) (else (ref.cast $java.lang.Object $int.array (local.get $$cast_expression_1) (global.get $int.array.rtt))))
   )) (i32.const 1) (i32.const 1))
  )
 )
)
(elem declare func $m_testIntArrays__void_$pp_array@array.Arrays)

;;; void Arrays.testLongArrays()
(func $m_testLongArrays__void_$pp_array@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $longs (ref null $long.array))
 (local $$array_literal (ref null $long.array))
 (local $longs2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $long.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $n i64)
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; long[] longs = new long[100];
   
   (local.set $longs (struct.new_with_rtt $long.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $long.array.elements (i32.const 100) (global.get $long.array.elements.rtt)) (global.get $long.array.rtt)))
   ;; (longs = new long[0]);
   (local.set $longs (struct.new_with_rtt $long.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $long.array.elements (i32.const 0) (global.get $long.array.elements.rtt)) (global.get $long.array.rtt)))
   ;; (longs = (long[] $array_literal = new long[2],($array_literal[0] = 0),($array_literal[1] = 1),$array_literal));
   (local.set $longs (block (result (ref null $long.array))
    
    (local.set $$array_literal (struct.new_with_rtt $long.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $long.array.elements (i32.const 2) (global.get $long.array.elements.rtt)) (global.get $long.array.rtt)))
    (array.set $long.array.elements (struct.get $long.array $elements (local.get $$array_literal)) (i32.const 0) (i64.const 0))
    (array.set $long.array.elements (struct.get $long.array $elements (local.get $$array_literal)) (i32.const 1) (i64.const 1))
    (local.get $$array_literal)
   ))
   ;; long[][] longs2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),6);
   
   (local.set $longs2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const 6)))
   ;; (longs2d = (long[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),6),($array_literal[0] = (long[] $array_literal = new long[2],($array_literal[0] = 1),($array_literal[1] = 2),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $longs2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const 6)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $long.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $long.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $long.array.elements (i32.const 2) (global.get $long.array.elements.rtt)) (global.get $long.array.rtt)))
     (array.set $long.array.elements (struct.get $long.array $elements (local.get $$array_literal_4)) (i32.const 0) (i64.const 1))
     (array.set $long.array.elements (struct.get $long.array $elements (local.get $$array_literal_4)) (i32.const 1) (i64.const 2))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $long.array))
    (local.get $$array_literal_2)
   ))
   ;; (longs2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),6));
   (local.set $longs2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const 6)))
   ;; long n = longs[0];
   
   (local.set $n (array.get $long.array.elements (struct.get $long.array $elements (local.get $longs)) (i32.const 0)))
   ;; (n = (Object $cast_expression = longs2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((long[]) $cast_expression)))[1]);
   (local.set $n (array.get $long.array.elements (struct.get $long.array $elements (block (result (ref null $long.array))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $longs2d)) (i32.const 0)))
    (if (result (ref null $long.array)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $long.array)) (else (ref.cast $java.lang.Object $long.array (local.get $$cast_expression) (global.get $long.array.rtt))))
   )) (i32.const 1)))
   ;; (longs[0] = 1);
   (array.set $long.array.elements (struct.get $long.array $elements (local.get $longs)) (i32.const 0) (i64.const 1))
   ;; ((Object $cast_expression = longs2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((long[]) $cast_expression)))[1] = 1);
   (array.set $long.array.elements (struct.get $long.array $elements (block (result (ref null $long.array))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $longs2d)) (i32.const 0)))
    (if (result (ref null $long.array)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $long.array)) (else (ref.cast $java.lang.Object $long.array (local.get $$cast_expression_1) (global.get $long.array.rtt))))
   )) (i32.const 1) (i64.const 1))
  )
 )
)
(elem declare func $m_testLongArrays__void_$pp_array@array.Arrays)

;;; void Arrays.testDevirtualizedTypeArrays()
(func $m_testDevirtualizedTypeArrays__void_$pp_array@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $booleans (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (local $booleans2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $b i32)
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $$cast_expression_2 (ref null $java.lang.Object))
 (local $$cast_expression_3 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; Boolean[] booleans = new Boolean[100];
   
   (local.set $booleans (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 100) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (booleans = new Boolean[0]);
   (local.set $booleans (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (booleans = (Boolean[] $array_literal = new Boolean[2],($array_literal[0] = true),($array_literal[1] = false),$array_literal));
   (local.set $booleans (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (ref.null $java.lang.Boolean))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (ref.null $java.lang.Boolean))
    (local.get $$array_literal)
   ))
   ;; Boolean[][] booleans2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),-1);
   
   (local.set $booleans2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const -1)))
   ;; (booleans2d = (Boolean[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),-1),($array_literal[0] = (Boolean[] $array_literal = new Boolean[2],($array_literal[0] = true),($array_literal[1] = false),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $booleans2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const -1)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $Object.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 0) (ref.null $java.lang.Boolean))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 1) (ref.null $java.lang.Boolean))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $Object.array))
    (local.get $$array_literal_2)
   ))
   ;; (booleans2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),-1));
   (local.set $booleans2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   ;; boolean b = (Object $cast_expression = booleans[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Boolean) $cast_expression)));
   
   (local.set $b (i32.const 0))
   ;; (b = (Object $cast_expression = (Object $cast_expression = booleans2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Boolean[]) $cast_expression)))[1],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Boolean) $cast_expression))));
   (local.set $b (i32.const 0))
   ;; (booleans[0] = true);
   (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $booleans)) (i32.const 0) (ref.null $java.lang.Boolean))
   ;; ((Object $cast_expression = booleans2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((Boolean[]) $cast_expression)))[1] = false);
   (array.set $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
    
    (local.set $$cast_expression_3 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $booleans2d)) (i32.const 0)))
    (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_3)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_3) (global.get $Object.array.rtt))))
   )) (i32.const 1) (ref.null $java.lang.Boolean))
  )
 )
)
(elem declare func $m_testDevirtualizedTypeArrays__void_$pp_array@array.Arrays)

;;; void Arrays.testStringArrays()
(func $m_testStringArrays__void_$pp_array@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $strings (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (local $strings2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $b (ref null $java.lang.String))
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $$cast_expression_2 (ref null $java.lang.Object))
 (local $$cast_expression_3 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; String[] strings = new String[100];
   
   (local.set $strings (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 100) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (strings = new String[0]);
   (local.set $strings (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (strings = (String[] $array_literal = new String[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal));
   (local.set $strings (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (ref.null $java.lang.String))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (ref.null $java.lang.String))
    (local.get $$array_literal)
   ))
   ;; String[][] strings2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),-1);
   
   (local.set $strings2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const -1)))
   ;; (strings2d = (String[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),-1),($array_literal[0] = (String[] $array_literal = new String[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $strings2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const -1)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $Object.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 0) (ref.null $java.lang.String))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 1) (ref.null $java.lang.String))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $Object.array))
    (local.get $$array_literal_2)
   ))
   ;; (strings2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),-1));
   (local.set $strings2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   ;; String b = (Object $cast_expression = strings[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String) $cast_expression)));
   
   (local.set $b (block (result (ref null $java.lang.String))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $strings)) (i32.const 0)))
    (if (result (ref null $java.lang.String)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $java.lang.String)) (else (ref.cast $java.lang.Object $java.lang.String (local.get $$cast_expression) (global.get $java.lang.String.rtt))))
   ))
   ;; (b = (Object $cast_expression = (Object $cast_expression = strings2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String[]) $cast_expression)))[1],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String) $cast_expression))));
   (local.set $b (block (result (ref null $java.lang.String))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
     
     (local.set $$cast_expression_2 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $strings2d)) (i32.const 0)))
     (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_2)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_2) (global.get $Object.array.rtt))))
    )) (i32.const 1)))
    (if (result (ref null $java.lang.String)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $java.lang.String)) (else (ref.cast $java.lang.Object $java.lang.String (local.get $$cast_expression_1) (global.get $java.lang.String.rtt))))
   ))
   ;; (strings[0] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $strings)) (i32.const 0) (ref.null $java.lang.String))
   ;; ((Object $cast_expression = strings2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String[]) $cast_expression)))[1] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
    
    (local.set $$cast_expression_3 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $strings2d)) (i32.const 0)))
    (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_3)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_3) (global.get $Object.array.rtt))))
   )) (i32.const 1) (ref.null $java.lang.String))
  )
 )
)
(elem declare func $m_testStringArrays__void_$pp_array@array.Arrays)

;;; void Arrays.testNativeArray()
(func $m_testNativeArray__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $nativeObjects (ref null $Object.array))
 (local $$array_literal (ref null $Object.array))
 (local $nativeObjects2d (ref null $Object.array))
 (local $$array_literal_1 (ref null $int.array))
 (local $$array_literal_2 (ref null $Object.array))
 (local $$array_literal_3 (ref null $int.array))
 (local $$array_literal_4 (ref null $Object.array))
 (local $$array_literal_5 (ref null $int.array))
 (local $nativeObject (ref null $array.Arrays.NativeType))
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $$cast_expression_2 (ref null $java.lang.Object))
 (local $$cast_expression_3 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; NativeType[] nativeObjects = new NativeType[100];
   
   (local.set $nativeObjects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 100) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (nativeObjects = new NativeType[0]);
   (local.set $nativeObjects (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 0) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
   ;; (nativeObjects = (NativeType[] $array_literal = new NativeType[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal));
   (local.set $nativeObjects (block (result (ref null $Object.array))
    
    (local.set $$array_literal (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 0) (ref.null $array.Arrays.NativeType))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal)) (i32.const 1) (ref.null $array.Arrays.NativeType))
    (local.get $$array_literal)
   ))
   ;; NativeType[][] nativeObjects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 5),($array_literal[1] = 10),$array_literal),-1);
   
   (local.set $nativeObjects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_1 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 0) (i32.const 5))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_1)) (i32.const 1) (i32.const 10))
    (local.get $$array_literal_1)
   )(i32.const -1)))
   ;; (nativeObjects2d = (NativeType[][] $array_literal = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 2),($array_literal[1] = -1),$array_literal),-1),($array_literal[0] = (NativeType[] $array_literal = new NativeType[2],($array_literal[0] = null),($array_literal[1] = null),$array_literal)),($array_literal[1] = null),$array_literal));
   (local.set $nativeObjects2d (block (result (ref null $Object.array))
    
    (local.set $$array_literal_2 (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
     
     (local.set $$array_literal_3 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 0) (i32.const 2))
     (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_3)) (i32.const 1) (i32.const -1))
     (local.get $$array_literal_3)
    )(i32.const -1)))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 0) (block (result (ref null $Object.array))
     
     (local.set $$array_literal_4 (struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 2) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt)))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 0) (ref.null $array.Arrays.NativeType))
     (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_4)) (i32.const 1) (ref.null $array.Arrays.NativeType))
     (local.get $$array_literal_4)
    ))
    (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $$array_literal_2)) (i32.const 1) (ref.null $Object.array))
    (local.get $$array_literal_2)
   ))
   ;; (nativeObjects2d = javaemul.internal.WasmArrayHelper.createArray((int[] $array_literal = new int[2],($array_literal[0] = 20),($array_literal[1] = -1),$array_literal),-1));
   (local.set $nativeObjects2d (call $m_createArray__arrayOf_int__int__arrayOf_java_lang_Object@javaemul.internal.WasmArrayHelper (block (result (ref null $int.array))
    
    (local.set $$array_literal_5 (struct.new_with_rtt $int.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $int.array.elements (i32.const 2) (global.get $int.array.elements.rtt)) (global.get $int.array.rtt)))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 0) (i32.const 20))
    (array.set $int.array.elements (struct.get $int.array $elements (local.get $$array_literal_5)) (i32.const 1) (i32.const -1))
    (local.get $$array_literal_5)
   )(i32.const -1)))
   ;; NativeType nativeObject = (Object $cast_expression = nativeObjects[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((NativeType) $cast_expression)));
   
   (local.set $nativeObject (block (result (ref null $array.Arrays.NativeType))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $nativeObjects)) (i32.const 0)))
    (if (result (ref null $array.Arrays.NativeType)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $array.Arrays.NativeType)) (else (ref.cast $java.lang.Object $array.Arrays.NativeType (local.get $$cast_expression) (global.get $array.Arrays.NativeType.rtt))))
   ))
   ;; (nativeObject = (Object $cast_expression = (Object $cast_expression = nativeObjects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((NativeType[]) $cast_expression)))[1],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((NativeType) $cast_expression))));
   (local.set $nativeObject (block (result (ref null $array.Arrays.NativeType))
    
    (local.set $$cast_expression_1 (array.get $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
     
     (local.set $$cast_expression_2 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $nativeObjects2d)) (i32.const 0)))
     (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_2)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_2) (global.get $Object.array.rtt))))
    )) (i32.const 1)))
    (if (result (ref null $array.Arrays.NativeType)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $array.Arrays.NativeType)) (else (ref.cast $java.lang.Object $array.Arrays.NativeType (local.get $$cast_expression_1) (global.get $array.Arrays.NativeType.rtt))))
   ))
   ;; (nativeObjects[0] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (local.get $nativeObjects)) (i32.const 0) (ref.null $array.Arrays.NativeType))
   ;; ((Object $cast_expression = nativeObjects2d[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((NativeType[]) $cast_expression)))[1] = null);
   (array.set $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
    
    (local.set $$cast_expression_3 (array.get $Object.array.elements (struct.get $Object.array $elements (local.get $nativeObjects2d)) (i32.const 0)))
    (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_3)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_3) (global.get $Object.array.rtt))))
   )) (i32.const 1) (ref.null $array.Arrays.NativeType))
  )
 )
)
(elem declare func $m_testNativeArray__void@array.Arrays)

;;; void Arrays.testErasureCastsOnArrayAccess()
(func $m_testErasureCastsOnArrayAccess__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $container (ref null $array.Arrays.ArrayContainer))
 (local $s (ref null $java.lang.String))
 (local $$cast_expression (ref null $java.lang.Object))
 (local $$cast_expression_1 (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; ArrayContainer<String> container = null;
   
   (local.set $container (ref.null $array.Arrays.ArrayContainer))
   ;; String s = (Object $cast_expression = (Object $cast_expression = container.data,(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String[]) $cast_expression)))[0],(javaemul.internal.Platform.isNull($cast_expression)) ? (null) : (((String) $cast_expression)));
   
   (local.set $s (block (result (ref null $java.lang.String))
    
    (local.set $$cast_expression (array.get $Object.array.elements (struct.get $Object.array $elements (block (result (ref null $Object.array))
     
     (local.set $$cast_expression_1 (struct.get $array.Arrays.ArrayContainer $f_data__array_Arrays_ArrayContainer(local.get $container)))
     (if (result (ref null $Object.array)) (ref.is_null (local.get $$cast_expression_1)) (then (ref.null $Object.array)) (else (ref.cast $java.lang.Object $Object.array (local.get $$cast_expression_1) (global.get $Object.array.rtt))))
    )) (i32.const 0)))
    (if (result (ref null $java.lang.String)) (ref.is_null (local.get $$cast_expression)) (then (ref.null $java.lang.String)) (else (ref.cast $java.lang.Object $java.lang.String (local.get $$cast_expression) (global.get $java.lang.String.rtt))))
   ))
  )
 )
)
(elem declare func $m_testErasureCastsOnArrayAccess__void@array.Arrays)

;;; void Arrays.testArraysSupertypeClosureTypes()
(func $m_testArraysSupertypeClosureTypes__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
   ;; Arrays.this.consumesCloneable(new Object[10]);
   (call_ref (local.get $this)(struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 10) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt))(struct.get $array.Arrays.vtable $m_consumesCloneable__java_lang_Cloneable__void (struct.get $array.Arrays $vtable(local.get $this))))
   ;; Arrays.this.consumesSerializable(new Object[10]);
   (call_ref (local.get $this)(struct.new_with_rtt $Object.array (global.get $java.lang.Object.vtable) (i32.const 0) (array.new_default_with_rtt $Object.array.elements (i32.const 10) (global.get $Object.array.elements.rtt)) (global.get $Object.array.rtt))(struct.get $array.Arrays.vtable $m_consumesSerializable__java_io_Serializable__void (struct.get $array.Arrays $vtable(local.get $this))))
  )
 )
)
(elem declare func $m_testArraysSupertypeClosureTypes__void@array.Arrays)

;;; void Arrays.consumesCloneable(Cloneable cloneable)
(func $m_consumesCloneable__java_lang_Cloneable__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (param $cloneable (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_consumesCloneable__java_lang_Cloneable__void@array.Arrays)

;;; void Arrays.consumesSerializable(Serializable serializable)
(func $m_consumesSerializable__java_io_Serializable__void@array.Arrays
 (param $this.untyped (ref null $java.lang.Object))
 (param $serializable (ref null $java.lang.Object))
 (local $this (ref null $array.Arrays))
 (local.set $this (ref.cast $java.lang.Object $array.Arrays (local.get $this.untyped) (global.get $array.Arrays.rtt)))
 (block $return.label
  (block
  )
 )
)
(elem declare func $m_consumesSerializable__java_io_Serializable__void@array.Arrays)

;;; void Arrays.$clinit()
(func $$clinit__void@array.Arrays
 (block $return.label
  (block
   ;; if (array.Arrays.$initialized) return;
   (if (global.get $f_$initialized__array_Arrays)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (array.Arrays.$initialized = true);
   (global.set $f_$initialized__array_Arrays (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for array.Arrays.SomeObject [CLASS]
(type $array.Arrays.SomeObject (struct
 (field $vtable (ref null $array.Arrays.SomeObject.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__array_Arrays_SomeObject (mut (ref null $array.Arrays)))
))
(type $array.Arrays.SomeObject.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; SomeObject(Arrays $outer_this)
(func $m_<init>__array_Arrays__void_$p_array_Arrays_SomeObject@array.Arrays.SomeObject
 (param $this (ref null $array.Arrays.SomeObject))
 (param $$outer_this (ref null $array.Arrays))
 (result (ref null $array.Arrays.SomeObject))
 (block $return.label
  (block
   ;; (SomeObject.this.this = $outer_this);
   (struct.set $array.Arrays.SomeObject $$outer_this__array_Arrays_SomeObject(local.get $this) (local.get $$outer_this))
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void SomeObject.$clinit()
(func $$clinit__void@array.Arrays.SomeObject
 (block $return.label
  (block
   ;; if (array.Arrays.SomeObject.$initialized) return;
   (if (global.get $f_$initialized__array_Arrays_SomeObject)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (array.Arrays.SomeObject.$initialized = true);
   (global.set $f_$initialized__array_Arrays_SomeObject (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for array.Arrays.NativeType [CLASS]
(type $array.Arrays.NativeType (struct
 (field $vtable (ref null $array.Arrays.NativeType.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $array.Arrays.NativeType.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; NativeType()
(func $m_<init>__void_$p_array_Arrays_NativeType@array.Arrays.NativeType
 (param $this (ref null $array.Arrays.NativeType))
 (result (ref null $array.Arrays.NativeType))
 (block $return.label
  (block
   ;; array.Arrays.NativeType.$clinit();
   (call $$clinit__void@array.Arrays.NativeType )
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void NativeType.$clinit()
(func $$clinit__void@array.Arrays.NativeType
 (block $return.label
  (block
   ;; if (array.Arrays.NativeType.$initialized) return;
   (if (global.get $f_$initialized__array_Arrays_NativeType)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (array.Arrays.NativeType.$initialized = true);
   (global.set $f_$initialized__array_Arrays_NativeType (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for array.Arrays.ArrayContainer [CLASS]
(type $array.Arrays.ArrayContainer (struct
 (field $vtable (ref null $array.Arrays.ArrayContainer.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_data__array_Arrays_ArrayContainer (mut (ref null $Object.array)))
))
(type $array.Arrays.ArrayContainer.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; ArrayContainer()
(func $m_<init>__void_$p_array_Arrays_ArrayContainer@array.Arrays.ArrayContainer
 (param $this (ref null $array.Arrays.ArrayContainer))
 (result (ref null $array.Arrays.ArrayContainer))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ArrayContainer.$clinit()
(func $$clinit__void@array.Arrays.ArrayContainer
 (block $return.label
  (block
   ;; if (array.Arrays.ArrayContainer.$initialized) return;
   (if (global.get $f_$initialized__array_Arrays_ArrayContainer)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (array.Arrays.ArrayContainer.$initialized = true);
   (global.set $f_$initialized__array_Arrays_ArrayContainer (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for array.Arrays [vtable.init]
 (global.set $array.Arrays.vtable (struct.new_with_rtt $array.Arrays.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_testObjectArray__void@array.Arrays) (ref.func $m_testJavaTypeArray__void@array.Arrays) (ref.func $m_testIntArrays__void_$pp_array@array.Arrays) (ref.func $m_testLongArrays__void_$pp_array@array.Arrays) (ref.func $m_testDevirtualizedTypeArrays__void_$pp_array@array.Arrays) (ref.func $m_testStringArrays__void_$pp_array@array.Arrays) (ref.func $m_testNativeArray__void@array.Arrays) (ref.func $m_testErasureCastsOnArrayAccess__void@array.Arrays) (ref.func $m_testArraysSupertypeClosureTypes__void@array.Arrays) (ref.func $m_consumesCloneable__java_lang_Cloneable__void@array.Arrays) (ref.func $m_consumesSerializable__java_io_Serializable__void@array.Arrays) (rtt.canon $array.Arrays.vtable)))

 ;;; Code for array.Arrays.SomeObject [vtable.init]
 (global.set $array.Arrays.SomeObject.vtable (struct.new_with_rtt $array.Arrays.SomeObject.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $array.Arrays.SomeObject.vtable)))

 ;;; Code for array.Arrays.NativeType [vtable.init]
 (global.set $array.Arrays.NativeType.vtable (struct.new_with_rtt $array.Arrays.NativeType.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $array.Arrays.NativeType.vtable)))

 ;;; Code for array.Arrays.ArrayContainer [vtable.init]
 (global.set $array.Arrays.ArrayContainer.vtable (struct.new_with_rtt $array.Arrays.ArrayContainer.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $array.Arrays.ArrayContainer.vtable)))

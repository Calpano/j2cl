// Generated from "genericnativetype/BoundedJsArray.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package genericnativetype

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("GenericnativetypeBoundedJsArray", exact = true)
open class BoundedJsArray<V> {
 constructor(size: Int)

 @ObjCName("GenericnativetypeBoundedJsArrayCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("create")
  fun <V_1> create(): BoundedJsArray<V_1>? {
   val array: BoundedJsArray<V_1>? = null
   return array
  }

  @JvmStatic
  @ObjCName("create")
  fun <V_1> create(
   @ObjCName("withInt") size: Int
  ): BoundedJsArray<V_1>? {
   val array: BoundedJsArray<V_1>? = BoundedJsArray<V_1>(size)
   return array
  }
 }
}

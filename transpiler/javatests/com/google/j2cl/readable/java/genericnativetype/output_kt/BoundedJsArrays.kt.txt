// Generated from "genericnativetype/BoundedJsArrays.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package genericnativetype

import javaemul.lang.*
import genericnativetype.BoundedJsArray
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("GenericnativetypeBoundedJsArrays", exact = true)
open class BoundedJsArrays {
 constructor()

 @ObjCName("GenericnativetypeBoundedJsArraysCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("create")
  fun <V> create(): BoundedJsArray<V>? {
   return BoundedJsArray.create<V>()
  }

  @JvmStatic
  @ObjCName("createWithSize")
  fun <V> createWithSize(
   @ObjCName("withInt") size: Int
  ): BoundedJsArray<V>? {
   return BoundedJsArray.create<V>(size)
  }
 }
}

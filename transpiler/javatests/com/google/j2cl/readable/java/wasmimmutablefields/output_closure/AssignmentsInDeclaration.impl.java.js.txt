goog.module('wasmimmutablefields.AssignmentsInDeclaration$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');
let WasmImmutableFields = goog.forwardDeclare('wasmimmutablefields.WasmImmutableFields$impl');

class AssignmentsInDeclaration extends j_l_Object {
 /** @protected */
 constructor() {
  super();
  /**@const {number}*/
  this.f_compileTimeConstant__wasmimmutablefields_AssignmentsInDeclaration = 12;
  /**@const {?string}*/
  this.f_stringLiteral__wasmimmutablefields_AssignmentsInDeclaration = 'Hello World';
  /**@type {Array<*>}*/
  this.f_newArray__wasmimmutablefields_AssignmentsInDeclaration;
  /**@type {Array<Array<Array<*>>>}*/
  this.f_newArrayMultidimensional__wasmimmutablefields_AssignmentsInDeclaration;
  /**@type {Array<number>}*/
  this.f_arrayLiteral__wasmimmutablefields_AssignmentsInDeclaration;
  /**@type {Array<Array<number>>}*/
  this.f_arrayLiteralMultidimensional__wasmimmutablefields_AssignmentsInDeclaration;
  /**@type {Class<?>}*/
  this.f_classLiteral__wasmimmutablefields_AssignmentsInDeclaration;
  /**@type {Array<?string>}*/
  this.f_withCast__wasmimmutablefields_AssignmentsInDeclaration;
 }
 /** @return {!AssignmentsInDeclaration} */
 static $create__() {
  AssignmentsInDeclaration.$clinit();
  let $instance = new AssignmentsInDeclaration();
  $instance.$ctor__wasmimmutablefields_AssignmentsInDeclaration__();
  return $instance;
 }
 
 $ctor__wasmimmutablefields_AssignmentsInDeclaration__() {
  this.$ctor__java_lang_Object__();
  this.$init___$p_wasmimmutablefields_AssignmentsInDeclaration();
 }
 /** @private */
 $init___$p_wasmimmutablefields_AssignmentsInDeclaration() {
  this.f_newArray__wasmimmutablefields_AssignmentsInDeclaration = new Array(4);
  this.f_newArrayMultidimensional__wasmimmutablefields_AssignmentsInDeclaration = /**@type {!Array<Array<Array<*>>>}*/ ($Arrays.$create([3, 4, null], j_l_Object));
  this.f_arrayLiteral__wasmimmutablefields_AssignmentsInDeclaration = /**@type {!Array<number>}*/ ($Arrays.$init([1, 2, 3, 4], $$int));
  this.f_arrayLiteralMultidimensional__wasmimmutablefields_AssignmentsInDeclaration = /**@type {!Array<Array<number>>}*/ ($Arrays.$init([/**@type {!Array<number>}*/ ($Arrays.$init([1, 2], $$int)), /**@type {!Array<number>}*/ ($Arrays.$init([3, 4], $$int))], $$int, 2));
  this.f_classLiteral__wasmimmutablefields_AssignmentsInDeclaration = Class.$get(WasmImmutableFields);
  this.f_withCast__wasmimmutablefields_AssignmentsInDeclaration = /**@type {Array<?string>}*/ ($Arrays.$castTo(new Array(0), j_l_String, 1));
 }
 
 static $clinit() {
  AssignmentsInDeclaration.$clinit = () =>{};
  AssignmentsInDeclaration.$loadModules();
  j_l_Object.$clinit();
 }
 /** @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof AssignmentsInDeclaration;
 }
 
 static $loadModules() {
  Class = goog.module.get('java.lang.Class$impl');
  j_l_String = goog.module.get('java.lang.String$impl');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
  WasmImmutableFields = goog.module.get('wasmimmutablefields.WasmImmutableFields$impl');
 }
}
$Util.$setClassMetadata(AssignmentsInDeclaration, 'wasmimmutablefields.AssignmentsInDeclaration');

exports = AssignmentsInDeclaration;

//# sourceMappingURL=AssignmentsInDeclaration.js.map

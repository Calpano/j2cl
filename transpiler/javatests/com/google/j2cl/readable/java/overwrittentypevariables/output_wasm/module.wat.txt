;;; Code for overwrittentypevariables.HashFunctions [vtable]
(global $overwrittentypevariables.HashFunctions.vtable (mut (ref null $overwrittentypevariables.HashFunctions.vtable)) (ref.null $overwrittentypevariables.HashFunctions.vtable))

;;; Code for overwrittentypevariables.HashFunctions.1 [vtable]
(global $overwrittentypevariables.HashFunctions.1.vtable (mut (ref null $overwrittentypevariables.HashFunctions.1.vtable)) (ref.null $overwrittentypevariables.HashFunctions.1.vtable))

;;; Code for overwrittentypevariables.HashFunctions.2 [vtable]
(global $overwrittentypevariables.HashFunctions.2.vtable (mut (ref null $overwrittentypevariables.HashFunctions.2.vtable)) (ref.null $overwrittentypevariables.HashFunctions.2.vtable))

;;; Code for overwrittentypevariables.MyFunction [static fields]
(global $f_$initialized__overwrittentypevariables_MyFunction (mut i32) (i32.const 0))

;;; Code for overwrittentypevariables.HashFunction [static fields]
(global $f_$initialized__overwrittentypevariables_HashFunction (mut i32) (i32.const 0))

;;; Code for overwrittentypevariables.HashFunctions [static fields]
(global $f_$initialized__overwrittentypevariables_HashFunctions (mut i32) (i32.const 0))

;;; Code for overwrittentypevariables.HashFunctions.1 [static fields]
(global $f_$initialized__overwrittentypevariables_HashFunctions_1 (mut i32) (i32.const 0))

;;; Code for overwrittentypevariables.HashFunctions.2 [static fields]
(global $f_$initialized__overwrittentypevariables_HashFunctions_2 (mut i32) (i32.const 0))

;;; Code for overwrittentypevariables.MyFunction [INTERFACE]

;;; void MyFunction.$clinit()
(func $$clinit__void@overwrittentypevariables.MyFunction
 (block $return.label
  (block
   ;; if (overwrittentypevariables.MyFunction.$initialized) return;
   (if (global.get $f_$initialized__overwrittentypevariables_MyFunction)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (overwrittentypevariables.MyFunction.$initialized = true);
   (global.set $f_$initialized__overwrittentypevariables_MyFunction (i32.const 1))
  )
 )
)

;;; Class<?> MyFunction.getClass()
(func $m_getClass__java_lang_Class@overwrittentypevariables.MyFunction
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getOverwrittentypevariables.MyFunction();
   (local.set $return.value (call $$getOverwrittentypevariables.MyFunction__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@overwrittentypevariables.MyFunction)

;;; Code for overwrittentypevariables.HashFunction [INTERFACE]

;;; void HashFunction.$clinit()
(func $$clinit__void@overwrittentypevariables.HashFunction
 (block $return.label
  (block
   ;; if (overwrittentypevariables.HashFunction.$initialized) return;
   (if (global.get $f_$initialized__overwrittentypevariables_HashFunction)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (overwrittentypevariables.HashFunction.$initialized = true);
   (global.set $f_$initialized__overwrittentypevariables_HashFunction (i32.const 1))
  )
 )
)

;;; Class<?> HashFunction.getClass()
(func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunction
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getOverwrittentypevariables.HashFunction();
   (local.set $return.value (call $$getOverwrittentypevariables.HashFunction__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunction)

;;; Code for overwrittentypevariables.HashFunctions [CLASS]
(type $overwrittentypevariables.HashFunctions (struct
 (field $vtable (ref null $overwrittentypevariables.HashFunctions.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $overwrittentypevariables.HashFunctions.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; HashFunctions()
(func $m_<init>__void@overwrittentypevariables.HashFunctions
 (param $this (ref null $overwrittentypevariables.HashFunctions))
 (result (ref null $overwrittentypevariables.HashFunctions))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; HashFunction<T> HashFunctions.hashFunction()
(func $m_hashFunction__overwrittentypevariables_HashFunction@overwrittentypevariables.HashFunctions
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; overwrittentypevariables.HashFunctions.$clinit();
   (call $$clinit__void@overwrittentypevariables.HashFunctions )
   ;; return new $1.<init>();
   (local.set $return.value (call $m_<init>__void_$pp_overwrittentypevariables@overwrittentypevariables.HashFunctions.1 (struct.new_with_rtt $overwrittentypevariables.HashFunctions.1 (global.get $overwrittentypevariables.HashFunctions.1.vtable) (i32.const 0) (global.get $overwrittentypevariables.HashFunctions.1.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; HashFunction<T> HashFunctions.enumHashFunction()
(func $m_enumHashFunction__overwrittentypevariables_HashFunction@overwrittentypevariables.HashFunctions
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; overwrittentypevariables.HashFunctions.$clinit();
   (call $$clinit__void@overwrittentypevariables.HashFunctions )
   ;; return new $2.<init>();
   (local.set $return.value (call $m_<init>__void_$pp_overwrittentypevariables@overwrittentypevariables.HashFunctions.2 (struct.new_with_rtt $overwrittentypevariables.HashFunctions.2 (global.get $overwrittentypevariables.HashFunctions.2.vtable) (i32.const 0) (global.get $overwrittentypevariables.HashFunctions.2.rtt))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; void HashFunctions.$clinit()
(func $$clinit__void@overwrittentypevariables.HashFunctions
 (block $return.label
  (block
   ;; if (overwrittentypevariables.HashFunctions.$initialized) return;
   (if (global.get $f_$initialized__overwrittentypevariables_HashFunctions)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (overwrittentypevariables.HashFunctions.$initialized = true);
   (global.set $f_$initialized__overwrittentypevariables_HashFunctions (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> HashFunctions.getClass()
(func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $overwrittentypevariables.HashFunctions))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getOverwrittentypevariables.HashFunctions();
   (local.set $return.value (call $$getOverwrittentypevariables.HashFunctions__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions)

;;; Code for overwrittentypevariables.HashFunctions.1 [CLASS]
(type $overwrittentypevariables.HashFunctions.1 (struct
 (field $vtable (ref null $overwrittentypevariables.HashFunctions.1.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $overwrittentypevariables.HashFunctions.1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_apply__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
 (field $m_apply__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
))

;;; <anonymous> implements HashFunction<T>()
(func $m_<init>__void_$pp_overwrittentypevariables@overwrittentypevariables.HashFunctions.1
 (param $this (ref null $overwrittentypevariables.HashFunctions.1))
 (result (ref null $overwrittentypevariables.HashFunctions.1))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; String <anonymous> implements HashFunction<T>.apply(T input)
(func $m_apply__java_lang_Object__java_lang_String@overwrittentypevariables.HashFunctions.1
 (param $this.untyped (ref null $java.lang.Object))
 (param $input (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $overwrittentypevariables.HashFunctions.1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.1.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.StringPool.$getString_||();
   (local.set $return.value (call $$getString_||__java_lang_String@javaemul.internal.StringPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_apply__java_lang_Object__java_lang_String@overwrittentypevariables.HashFunctions.1)

;;; String <anonymous> implements HashFunction<T>.apply(Object arg0)
(func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.1
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (local $this (ref null $overwrittentypevariables.HashFunctions.1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.1.rtt)))
 (block $return.label
  (block
   ;; return $1.this.apply(arg0);
   (local.set $return.value (call_ref (local.get $this)(local.get $arg0)(struct.get $overwrittentypevariables.HashFunctions.1.vtable $m_apply__java_lang_Object__java_lang_String (struct.get $overwrittentypevariables.HashFunctions.1 $vtable(local.get $this)))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.1)

;;; void <anonymous> implements HashFunction<T>.$clinit()
(func $$clinit__void@overwrittentypevariables.HashFunctions.1
 (block $return.label
  (block
   ;; if (overwrittentypevariables.HashFunctions.1.$initialized) return;
   (if (global.get $f_$initialized__overwrittentypevariables_HashFunctions_1)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (overwrittentypevariables.HashFunctions.1.$initialized = true);
   (global.set $f_$initialized__overwrittentypevariables_HashFunctions_1 (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> <anonymous> implements HashFunction<T>.getClass()
(func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.1
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $overwrittentypevariables.HashFunctions.1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.1.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getOverwrittentypevariables.HashFunctions.1();
   (local.set $return.value (call $$getOverwrittentypevariables.HashFunctions.1__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.1)

;;; Code for overwrittentypevariables.HashFunctions.2 [CLASS]
(type $overwrittentypevariables.HashFunctions.2 (struct
 (field $vtable (ref null $overwrittentypevariables.HashFunctions.2.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $overwrittentypevariables.HashFunctions.2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_apply__java_lang_Enum__java_lang_String (mut (ref $function.$java.lang.Enum__$java.lang.String)))
 (field $m_apply__java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.Object__$java.lang.Object)))
))

;;; <anonymous> implements HashFunction<T>()
(func $m_<init>__void_$pp_overwrittentypevariables@overwrittentypevariables.HashFunctions.2
 (param $this (ref null $overwrittentypevariables.HashFunctions.2))
 (result (ref null $overwrittentypevariables.HashFunctions.2))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; String <anonymous> implements HashFunction<T>.apply(T input)
(func $m_apply__java_lang_Enum__java_lang_String@overwrittentypevariables.HashFunctions.2
 (param $this.untyped (ref null $java.lang.Object))
 (param $input (ref null $java.lang.Enum))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $overwrittentypevariables.HashFunctions.2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.2.rtt)))
 (block $return.label
  (block
   ;; return (javaemul.internal.StringPool.$getString_||() + input.ordinal());
   (local.set $return.value (ref.null $java.lang.String))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_apply__java_lang_Enum__java_lang_String@overwrittentypevariables.HashFunctions.2)

;;; String <anonymous> implements HashFunction<T>.apply(Object arg0)
(func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.2
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.Object))
 (local $return.value (ref null $java.lang.Object))
 (local $this (ref null $overwrittentypevariables.HashFunctions.2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.2.rtt)))
 (block $return.label
  (block
   ;; return $2.this.apply(((T) arg0));
   (local.set $return.value (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.Enum.rtt))(struct.get $overwrittentypevariables.HashFunctions.2.vtable $m_apply__java_lang_Enum__java_lang_String (struct.get $overwrittentypevariables.HashFunctions.2 $vtable(local.get $this)))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.2)

;;; void <anonymous> implements HashFunction<T>.$clinit()
(func $$clinit__void@overwrittentypevariables.HashFunctions.2
 (block $return.label
  (block
   ;; if (overwrittentypevariables.HashFunctions.2.$initialized) return;
   (if (global.get $f_$initialized__overwrittentypevariables_HashFunctions_2)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (overwrittentypevariables.HashFunctions.2.$initialized = true);
   (global.set $f_$initialized__overwrittentypevariables_HashFunctions_2 (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> <anonymous> implements HashFunction<T>.getClass()
(func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.2
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $overwrittentypevariables.HashFunctions.2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $overwrittentypevariables.HashFunctions.2.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getOverwrittentypevariables.HashFunctions.2();
   (local.set $return.value (call $$getOverwrittentypevariables.HashFunctions.2__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.2)

 ;;; Code for overwrittentypevariables.HashFunctions [vtable.init]
 (global.set $overwrittentypevariables.HashFunctions.vtable (struct.new_with_rtt $overwrittentypevariables.HashFunctions.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions) (rtt.canon $overwrittentypevariables.HashFunctions.vtable)))

 ;;; Code for overwrittentypevariables.HashFunctions.1 [vtable.init]
 (global.set $overwrittentypevariables.HashFunctions.1.vtable (struct.new_with_rtt $overwrittentypevariables.HashFunctions.1.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.1) (ref.func $m_apply__java_lang_Object__java_lang_String@overwrittentypevariables.HashFunctions.1) (ref.func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.1) (rtt.canon $overwrittentypevariables.HashFunctions.1.vtable)))

 ;;; Code for overwrittentypevariables.HashFunctions.2 [vtable.init]
 (global.set $overwrittentypevariables.HashFunctions.2.vtable (struct.new_with_rtt $overwrittentypevariables.HashFunctions.2.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@overwrittentypevariables.HashFunctions.2) (ref.func $m_apply__java_lang_Enum__java_lang_String@overwrittentypevariables.HashFunctions.2) (ref.func $m_apply__java_lang_Object__java_lang_Object@overwrittentypevariables.HashFunctions.2) (rtt.canon $overwrittentypevariables.HashFunctions.2.vtable)))

// Generated from "overwrittentypevariables/HashFunctions.java"
@file:OptIn(ExperimentalObjCName::class)

package overwrittentypevariables

import javaemul.lang.*
import kotlin.Enum
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

fun interface MyFunction<F, T> {
 @ObjCName("apply")
 fun apply(
  @ObjCName("withId") input: F
 ): T
}

fun interface HashFunction<T>: MyFunction<T, String?> {}

@ObjCName("OverwrittentypevariablesHashFunctions", exact = true)
open class HashFunctions {
 companion object {
  @JvmStatic
  @ObjCName("hashFunction")
  fun <T> hashFunction(): HashFunction<T>? {
   return object : HashFunction<T> {
    open override fun apply(input: T): String? {
     return ""
    }
   }
  }

  @JvmStatic
  @ObjCName("enumHashFunction")
  fun <T: Enum<T>> enumHashFunction(): HashFunction<T>? {
   return object : HashFunction<T> {
    open override fun apply(input: T): String? {
     return "" + input!!.ordinal
    }
   }
  }
 }
}

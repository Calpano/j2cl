package devirtualizedcalls

open class NumberCalls {
 constructor(): super()

 open fun main() {
  val i: kotlin.Number? = (java.lang.Integer(1) as kotlin.Int)
  (i!! as java.lang.Number).byteValue()
  (i!! as java.lang.Number).doubleValue()
  (i!! as java.lang.Number).floatValue()
  (i!! as java.lang.Number).intValue()
  (i!! as java.lang.Number).longValue()
  (i!! as java.lang.Number).shortValue()
  val ii: kotlin.Int? = (java.lang.Integer(1) as kotlin.Int)
  (ii!! as java.lang.Integer).byteValue()
  (ii!! as java.lang.Integer).doubleValue()
  (ii!! as java.lang.Integer).floatValue()
  (ii!! as java.lang.Integer).intValue()
  (ii!! as java.lang.Integer).longValue()
  (ii!! as java.lang.Integer).shortValue()
  val d: kotlin.Number? = (java.lang.Double(1.1) as kotlin.Double)
  (d!! as java.lang.Number).byteValue()
  (d!! as java.lang.Number).doubleValue()
  (d!! as java.lang.Number).floatValue()
  (d!! as java.lang.Number).intValue()
  (d!! as java.lang.Number).longValue()
  (d!! as java.lang.Number).shortValue()
  val dd: kotlin.Double? = (java.lang.Double(1.1) as kotlin.Double)
  (dd!! as java.lang.Double).byteValue()
  (dd!! as java.lang.Double).doubleValue()
  (dd!! as java.lang.Double).floatValue()
  (dd!! as java.lang.Double).intValue()
  (dd!! as java.lang.Double).longValue()
  (dd!! as java.lang.Double).shortValue()
  val s: kotlin.Number? = (java.lang.Short(1.toShort()) as kotlin.Short)
  (s!! as java.lang.Number).byteValue()
  (s!! as java.lang.Number).doubleValue()
  (s!! as java.lang.Number).floatValue()
  (s!! as java.lang.Number).intValue()
  (s!! as java.lang.Number).longValue()
  (s!! as java.lang.Number).shortValue()
  val ss: kotlin.Short? = (java.lang.Short(1.toShort()) as kotlin.Short)
  (ss!! as java.lang.Short).byteValue()
  (ss!! as java.lang.Short).doubleValue()
  (ss!! as java.lang.Short).floatValue()
  (ss!! as java.lang.Short).intValue()
  (ss!! as java.lang.Short).longValue()
  (ss!! as java.lang.Short).shortValue()
  val b: kotlin.Number? = (java.lang.Byte(1.toByte()) as kotlin.Byte)
  (b!! as java.lang.Number).byteValue()
  (b!! as java.lang.Number).doubleValue()
  (b!! as java.lang.Number).floatValue()
  (b!! as java.lang.Number).intValue()
  (b!! as java.lang.Number).longValue()
  (b!! as java.lang.Number).shortValue()
  val bb: kotlin.Byte? = (java.lang.Byte(1.toByte()) as kotlin.Byte)
  (bb!! as java.lang.Byte).byteValue()
  (bb!! as java.lang.Byte).doubleValue()
  (bb!! as java.lang.Byte).floatValue()
  (bb!! as java.lang.Byte).intValue()
  (bb!! as java.lang.Byte).longValue()
  (bb!! as java.lang.Byte).shortValue()
  val f: kotlin.Number? = (java.lang.Float(1.1f) as kotlin.Float)
  (f!! as java.lang.Number).byteValue()
  (f!! as java.lang.Number).doubleValue()
  (f!! as java.lang.Number).floatValue()
  (f!! as java.lang.Number).intValue()
  (f!! as java.lang.Number).longValue()
  (f!! as java.lang.Number).shortValue()
  val ff: kotlin.Float? = (java.lang.Float(1.1f) as kotlin.Float)
  (ff!! as java.lang.Float).byteValue()
  (ff!! as java.lang.Float).doubleValue()
  (ff!! as java.lang.Float).floatValue()
  (ff!! as java.lang.Float).intValue()
  (ff!! as java.lang.Float).longValue()
  (ff!! as java.lang.Float).shortValue()
  val l: kotlin.Number? = (java.lang.Long(1L) as kotlin.Long)
  (l!! as java.lang.Number).byteValue()
  (l!! as java.lang.Number).doubleValue()
  (l!! as java.lang.Number).floatValue()
  (l!! as java.lang.Number).intValue()
  (l!! as java.lang.Number).longValue()
  (l!! as java.lang.Number).shortValue()
  val ll: kotlin.Long? = (java.lang.Long(1L) as kotlin.Long)
  (ll!! as java.lang.Long).byteValue()
  (ll!! as java.lang.Long).doubleValue()
  (ll!! as java.lang.Long).floatValue()
  (ll!! as java.lang.Long).intValue()
  (ll!! as java.lang.Long).longValue()
  (ll!! as java.lang.Long).shortValue()
  val c: kotlin.Char? = (java.lang.Character('a') as kotlin.Char)
  (c!! as java.lang.Character).charValue()
  val bool: kotlin.Boolean? = (java.lang.Boolean(true) as kotlin.Boolean)
  (bool!! as java.lang.Boolean).booleanValue()
 }
}

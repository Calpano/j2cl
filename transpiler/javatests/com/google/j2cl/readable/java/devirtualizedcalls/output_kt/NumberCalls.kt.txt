package devirtualizedcalls

open class NumberCalls {
 fun main() {
  var i: Number? = Int?(1)
  i.byteValue()
  i.doubleValue()
  i.floatValue()
  i.intValue()
  i.longValue()
  i.shortValue()
  var ii: Int? = Int?(1)
  ii.byteValue()
  ii.doubleValue()
  ii.floatValue()
  ii.intValue()
  ii.longValue()
  ii.shortValue()
  var d: Number? = Double?(1.1)
  d.byteValue()
  d.doubleValue()
  d.floatValue()
  d.intValue()
  d.longValue()
  d.shortValue()
  var dd: Double? = Double?(1.1)
  dd.byteValue()
  dd.doubleValue()
  dd.floatValue()
  dd.intValue()
  dd.longValue()
  dd.shortValue()
  var s: Number? = Short?(1 as Short)
  s.byteValue()
  s.doubleValue()
  s.floatValue()
  s.intValue()
  s.longValue()
  s.shortValue()
  var ss: Short? = Short?(1 as Short)
  ss.byteValue()
  ss.doubleValue()
  ss.floatValue()
  ss.intValue()
  ss.longValue()
  ss.shortValue()
  var b: Number? = Byte?(1 as Byte)
  b.byteValue()
  b.doubleValue()
  b.floatValue()
  b.intValue()
  b.longValue()
  b.shortValue()
  var bb: Byte? = Byte?(1 as Byte)
  bb.byteValue()
  bb.doubleValue()
  bb.floatValue()
  bb.intValue()
  bb.longValue()
  bb.shortValue()
  var f: Number? = Float?(1.1f)
  f.byteValue()
  f.doubleValue()
  f.floatValue()
  f.intValue()
  f.longValue()
  f.shortValue()
  var ff: Float? = Float?(1.1f)
  ff.byteValue()
  ff.doubleValue()
  ff.floatValue()
  ff.intValue()
  ff.longValue()
  ff.shortValue()
  var l: Number? = Long?(1L)
  l.byteValue()
  l.doubleValue()
  l.floatValue()
  l.intValue()
  l.longValue()
  l.shortValue()
  var ll: Long? = Long?(1L)
  ll.byteValue()
  ll.doubleValue()
  ll.floatValue()
  ll.intValue()
  ll.longValue()
  ll.shortValue()
  var c: java.lang.Character? = java.lang.Character?('a')
  c.charValue()
  var bool: Boolean? = Boolean?(true)
  bool.booleanValue()
 }
}

package devirtualizedcalls

open class NumberCalls {
 constructor(): super()

 open fun main() {
  val i: Number? = Int(1)
  i!!.byteValue()
  i!!.doubleValue()
  i!!.floatValue()
  i!!.intValue()
  i!!.longValue()
  i!!.shortValue()
  val ii: Int? = Int(1)
  ii!!.byteValue()
  ii!!.doubleValue()
  ii!!.floatValue()
  ii!!.intValue()
  ii!!.longValue()
  ii!!.shortValue()
  val d: Number? = Double(1.1)
  d!!.byteValue()
  d!!.doubleValue()
  d!!.floatValue()
  d!!.intValue()
  d!!.longValue()
  d!!.shortValue()
  val dd: Double? = Double(1.1)
  dd!!.byteValue()
  dd!!.doubleValue()
  dd!!.floatValue()
  dd!!.intValue()
  dd!!.longValue()
  dd!!.shortValue()
  val s: Number? = Short(1.toShort())
  s!!.byteValue()
  s!!.doubleValue()
  s!!.floatValue()
  s!!.intValue()
  s!!.longValue()
  s!!.shortValue()
  val ss: Short? = Short(1.toShort())
  ss!!.byteValue()
  ss!!.doubleValue()
  ss!!.floatValue()
  ss!!.intValue()
  ss!!.longValue()
  ss!!.shortValue()
  val b: Number? = Byte(1.toByte())
  b!!.byteValue()
  b!!.doubleValue()
  b!!.floatValue()
  b!!.intValue()
  b!!.longValue()
  b!!.shortValue()
  val bb: Byte? = Byte(1.toByte())
  bb!!.byteValue()
  bb!!.doubleValue()
  bb!!.floatValue()
  bb!!.intValue()
  bb!!.longValue()
  bb!!.shortValue()
  val f: Number? = Float(1.1f)
  f!!.byteValue()
  f!!.doubleValue()
  f!!.floatValue()
  f!!.intValue()
  f!!.longValue()
  f!!.shortValue()
  val ff: Float? = Float(1.1f)
  ff!!.byteValue()
  ff!!.doubleValue()
  ff!!.floatValue()
  ff!!.intValue()
  ff!!.longValue()
  ff!!.shortValue()
  val l: Number? = Long(1L)
  l!!.byteValue()
  l!!.doubleValue()
  l!!.floatValue()
  l!!.intValue()
  l!!.longValue()
  l!!.shortValue()
  val ll: Long? = Long(1L)
  ll!!.byteValue()
  ll!!.doubleValue()
  ll!!.floatValue()
  ll!!.intValue()
  ll!!.longValue()
  ll!!.shortValue()
  val c: java.lang.Character? = java.lang.Character('a')
  c!!.charValue()
  val bool: Boolean? = Boolean(true)
  bool!!.booleanValue()
 }
}

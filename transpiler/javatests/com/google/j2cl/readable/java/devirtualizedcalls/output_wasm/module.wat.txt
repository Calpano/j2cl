;;; Code for devirtualizedcalls.ArrayCalls

;;; CLASS  ArrayCalls
(type $devirtualizedcalls.ArrayCalls (struct
))

;;; ArrayCalls()
(func $m_<init>__void@devirtualizedcalls.ArrayCalls
 (param $this (ref null $devirtualizedcalls.ArrayCalls))
 (result (ref null $devirtualizedcalls.ArrayCalls))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ArrayCalls.main()
(func $m_main__void@devirtualizedcalls.ArrayCalls
 (param $this (ref null $java.lang.Object))
 (local $array2d (ref null $java.lang.Object))
 (local $length1 i32)
 (local $length2 i32)
 (block $return.label
  (block
   ;; Object[][] array2d = new Object[1][1];
   
   (local.set $array2d (ref.null $java.lang.Object))
   ;; int length1 = <expr>;
   
   (local.set $length1 (i32.const 0))
   ;; int length2 = <expr>;
   
   (local.set $length2 (i32.const 0))
  )
 )
)
;;; Code for devirtualizedcalls.CharSequenceCalls

;;; CLASS  CharSequenceCalls
(type $devirtualizedcalls.CharSequenceCalls (struct
))

;;; CharSequenceCalls()
(func $m_<init>__void@devirtualizedcalls.CharSequenceCalls
 (param $this (ref null $devirtualizedcalls.CharSequenceCalls))
 (result (ref null $devirtualizedcalls.CharSequenceCalls))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void CharSequenceCalls.test(CharSequence cs)
(func $m_test__java_lang_CharSequence__void@devirtualizedcalls.CharSequenceCalls
 (param $this (ref null $java.lang.Object))
 (param $cs (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; cs.charAt(0);
   (drop (i32.const 0))
  )
 )
)

;;; void CharSequenceCalls.main()
(func $m_main__void@devirtualizedcalls.CharSequenceCalls
 (param $this (ref null $java.lang.Object))
 (local $s (ref null $java.lang.String))
 (block $return.label
  (block
   ;; String s = "s";
   
   (local.set $s (ref.null $java.lang.String))
   ;; CharSequenceCalls.this.test(s);
   
  )
 )
)
;;; Code for devirtualizedcalls.NumberCalls

;;; CLASS  NumberCalls
(type $devirtualizedcalls.NumberCalls (struct
))

;;; NumberCalls()
(func $m_<init>__void@devirtualizedcalls.NumberCalls
 (param $this (ref null $devirtualizedcalls.NumberCalls))
 (result (ref null $devirtualizedcalls.NumberCalls))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void NumberCalls.main()
(func $m_main__void@devirtualizedcalls.NumberCalls
 (param $this (ref null $java.lang.Object))
 (local $i (ref null $java.lang.Number))
 (local $ii (ref null $java.lang.Integer))
 (local $d (ref null $java.lang.Number))
 (local $dd (ref null $java.lang.Double))
 (local $s (ref null $java.lang.Number))
 (local $ss (ref null $java.lang.Short))
 (local $b (ref null $java.lang.Number))
 (local $bb (ref null $java.lang.Byte))
 (local $f (ref null $java.lang.Number))
 (local $ff (ref null $java.lang.Float))
 (local $l (ref null $java.lang.Number))
 (local $ll (ref null $java.lang.Long))
 (local $c (ref null $java.lang.Character))
 (local $bool (ref null $java.lang.Boolean))
 (block $return.label
  (block
   ;; Number i = new Integer.<init>(1);
   
   (local.set $i (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; i.byteValue();
   (drop (i32.const 0))
   ;; i.doubleValue();
   (drop (f64.const 0.0))
   ;; i.floatValue();
   (drop (f32.const 0.0))
   ;; i.intValue();
   (drop (i32.const 0))
   ;; i.longValue();
   (drop (i64.const 0))
   ;; i.shortValue();
   (drop (i32.const 0))
   ;; Integer ii = new Integer.<init>(1);
   
   (local.set $ii (call $m_<init>__int__void@java.lang.Integer (struct.new_with_rtt $java.lang.Integer (i32.const 0) (global.get $java.lang.Integer.rtt))(i32.const 1)))
   ;; ii.byteValue();
   (drop (i32.const 0))
   ;; ii.doubleValue();
   (drop (f64.const 0.0))
   ;; ii.floatValue();
   (drop (f32.const 0.0))
   ;; ii.intValue();
   (drop (i32.const 0))
   ;; ii.longValue();
   (drop (i64.const 0))
   ;; ii.shortValue();
   (drop (i32.const 0))
   ;; Number d = new Double.<init>(1.1);
   
   (local.set $d (call $m_<init>__double__void@java.lang.Double (struct.new_with_rtt $java.lang.Double (f64.const 0.0) (global.get $java.lang.Double.rtt))(f64.const 1.1)))
   ;; d.byteValue();
   (drop (i32.const 0))
   ;; d.doubleValue();
   (drop (f64.const 0.0))
   ;; d.floatValue();
   (drop (f32.const 0.0))
   ;; d.intValue();
   (drop (i32.const 0))
   ;; d.longValue();
   (drop (i64.const 0))
   ;; d.shortValue();
   (drop (i32.const 0))
   ;; Double dd = new Double.<init>(1.1);
   
   (local.set $dd (call $m_<init>__double__void@java.lang.Double (struct.new_with_rtt $java.lang.Double (f64.const 0.0) (global.get $java.lang.Double.rtt))(f64.const 1.1)))
   ;; dd.byteValue();
   (drop (i32.const 0))
   ;; dd.doubleValue();
   (drop (f64.const 0.0))
   ;; dd.floatValue();
   (drop (f32.const 0.0))
   ;; dd.intValue();
   (drop (i32.const 0))
   ;; dd.longValue();
   (drop (i64.const 0))
   ;; dd.shortValue();
   (drop (i32.const 0))
   ;; Number s = new Short.<init>(((short) 1));
   
   (local.set $s (call $m_<init>__short__void@java.lang.Short (struct.new_with_rtt $java.lang.Short (i32.const 0) (global.get $java.lang.Short.rtt))(i32.const 0)))
   ;; s.byteValue();
   (drop (i32.const 0))
   ;; s.doubleValue();
   (drop (f64.const 0.0))
   ;; s.floatValue();
   (drop (f32.const 0.0))
   ;; s.intValue();
   (drop (i32.const 0))
   ;; s.longValue();
   (drop (i64.const 0))
   ;; s.shortValue();
   (drop (i32.const 0))
   ;; Short ss = new Short.<init>(((short) 1));
   
   (local.set $ss (call $m_<init>__short__void@java.lang.Short (struct.new_with_rtt $java.lang.Short (i32.const 0) (global.get $java.lang.Short.rtt))(i32.const 0)))
   ;; ss.byteValue();
   (drop (i32.const 0))
   ;; ss.doubleValue();
   (drop (f64.const 0.0))
   ;; ss.floatValue();
   (drop (f32.const 0.0))
   ;; ss.intValue();
   (drop (i32.const 0))
   ;; ss.longValue();
   (drop (i64.const 0))
   ;; ss.shortValue();
   (drop (i32.const 0))
   ;; Number b = new Byte.<init>(((byte) 1));
   
   (local.set $b (call $m_<init>__byte__void@java.lang.Byte (struct.new_with_rtt $java.lang.Byte (i32.const 0) (global.get $java.lang.Byte.rtt))(i32.const 0)))
   ;; b.byteValue();
   (drop (i32.const 0))
   ;; b.doubleValue();
   (drop (f64.const 0.0))
   ;; b.floatValue();
   (drop (f32.const 0.0))
   ;; b.intValue();
   (drop (i32.const 0))
   ;; b.longValue();
   (drop (i64.const 0))
   ;; b.shortValue();
   (drop (i32.const 0))
   ;; Byte bb = new Byte.<init>(((byte) 1));
   
   (local.set $bb (call $m_<init>__byte__void@java.lang.Byte (struct.new_with_rtt $java.lang.Byte (i32.const 0) (global.get $java.lang.Byte.rtt))(i32.const 0)))
   ;; bb.byteValue();
   (drop (i32.const 0))
   ;; bb.doubleValue();
   (drop (f64.const 0.0))
   ;; bb.floatValue();
   (drop (f32.const 0.0))
   ;; bb.intValue();
   (drop (i32.const 0))
   ;; bb.longValue();
   (drop (i64.const 0))
   ;; bb.shortValue();
   (drop (i32.const 0))
   ;; Number f = new Float.<init>(1.100000023841858);
   
   (local.set $f (call $m_<init>__float__void@java.lang.Float (struct.new_with_rtt $java.lang.Float (f32.const 0.0) (global.get $java.lang.Float.rtt))(f32.const 1.100000023841858)))
   ;; f.byteValue();
   (drop (i32.const 0))
   ;; f.doubleValue();
   (drop (f64.const 0.0))
   ;; f.floatValue();
   (drop (f32.const 0.0))
   ;; f.intValue();
   (drop (i32.const 0))
   ;; f.longValue();
   (drop (i64.const 0))
   ;; f.shortValue();
   (drop (i32.const 0))
   ;; Float ff = new Float.<init>(1.100000023841858);
   
   (local.set $ff (call $m_<init>__float__void@java.lang.Float (struct.new_with_rtt $java.lang.Float (f32.const 0.0) (global.get $java.lang.Float.rtt))(f32.const 1.100000023841858)))
   ;; ff.byteValue();
   (drop (i32.const 0))
   ;; ff.doubleValue();
   (drop (f64.const 0.0))
   ;; ff.floatValue();
   (drop (f32.const 0.0))
   ;; ff.intValue();
   (drop (i32.const 0))
   ;; ff.longValue();
   (drop (i64.const 0))
   ;; ff.shortValue();
   (drop (i32.const 0))
   ;; Number l = new Long.<init>(1);
   
   (local.set $l (call $m_<init>__long__void@java.lang.Long (struct.new_with_rtt $java.lang.Long (i64.const 0) (global.get $java.lang.Long.rtt))(i64.const 1)))
   ;; l.byteValue();
   (drop (i32.const 0))
   ;; l.doubleValue();
   (drop (f64.const 0.0))
   ;; l.floatValue();
   (drop (f32.const 0.0))
   ;; l.intValue();
   (drop (i32.const 0))
   ;; l.longValue();
   (drop (i64.const 0))
   ;; l.shortValue();
   (drop (i32.const 0))
   ;; Long ll = new Long.<init>(1);
   
   (local.set $ll (call $m_<init>__long__void@java.lang.Long (struct.new_with_rtt $java.lang.Long (i64.const 0) (global.get $java.lang.Long.rtt))(i64.const 1)))
   ;; ll.byteValue();
   (drop (i32.const 0))
   ;; ll.doubleValue();
   (drop (f64.const 0.0))
   ;; ll.floatValue();
   (drop (f32.const 0.0))
   ;; ll.intValue();
   (drop (i32.const 0))
   ;; ll.longValue();
   (drop (i64.const 0))
   ;; ll.shortValue();
   (drop (i32.const 0))
   ;; Character c = new Character.<init>(97);
   
   (local.set $c (call $m_<init>__char__void@java.lang.Character (struct.new_with_rtt $java.lang.Character (i32.const 0) (global.get $java.lang.Character.rtt))(i32.const 97)))
   ;; c.charValue();
   (drop (i32.const 0))
   ;; Boolean bool = new Boolean.<init>(true);
   
   (local.set $bool (call $m_<init>__boolean__void@java.lang.Boolean (struct.new_with_rtt $java.lang.Boolean (i32.const 0) (global.get $java.lang.Boolean.rtt))(i32.const 1)))
   ;; bool.booleanValue();
   (drop (i32.const 0))
  )
 )
)
;;; Code for devirtualizedcalls.ObjectCalls

;;; CLASS  ObjectCalls
(type $devirtualizedcalls.ObjectCalls (struct
))

;;; ObjectCalls()
(func $m_<init>__void@devirtualizedcalls.ObjectCalls
 (param $this (ref null $devirtualizedcalls.ObjectCalls))
 (result (ref null $devirtualizedcalls.ObjectCalls))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ObjectCalls.main()
(func $m_main__void@devirtualizedcalls.ObjectCalls
 (param $this (ref null $java.lang.Object))
 (local $object (ref null $java.lang.Object))
 (local $objectCalls (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Object object = new Object.<init>();
   
   (local.set $object (call $m_<init>__void@java.lang.Object (struct.new_with_rtt $java.lang.Object (global.get $java.lang.Object.rtt))))
   ;; object.equals(object);
   (drop (i32.const 0))
   ;; object.hashCode();
   (drop (i32.const 0))
   ;; object.toString();
   (drop (ref.null $java.lang.String))
   ;; object.getClass();
   (drop (ref.null $java.lang.Class))
   ;; ObjectCalls[] objectCalls = new ObjectCalls[1];
   
   (local.set $objectCalls (ref.null $java.lang.Object))
   ;; objectCalls.equals(objectCalls);
   (drop (i32.const 0))
   ;; objectCalls.hashCode();
   (drop (i32.const 0))
   ;; objectCalls.toString();
   (drop (ref.null $java.lang.String))
   ;; objectCalls.getClass();
   (drop (ref.null $java.lang.Class))
  )
 )
)

;;; void ObjectCalls.test()
(func $m_test__void@devirtualizedcalls.ObjectCalls
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; ObjectCalls.this.equals(new Object.<init>());
   (drop (i32.const 0))
   ;; ObjectCalls.this.hashCode();
   (drop (i32.const 0))
   ;; ObjectCalls.this.toString();
   (drop (ref.null $java.lang.String))
   ;; ObjectCalls.this.getClass();
   (drop (ref.null $java.lang.Class))
   ;; ObjectCalls.this.equals(new Object.<init>());
   (drop (i32.const 0))
   ;; ObjectCalls.this.hashCode();
   (drop (i32.const 0))
   ;; ObjectCalls.this.toString();
   (drop (ref.null $java.lang.String))
   ;; ObjectCalls.this.getClass();
   (drop (ref.null $java.lang.Class))
  )
 )
)
;;; Code for devirtualizedcalls.StringCalls

;;; CLASS  StringCalls
(type $devirtualizedcalls.StringCalls (struct
))

;;; StringCalls()
(func $m_<init>__void@devirtualizedcalls.StringCalls
 (param $this (ref null $devirtualizedcalls.StringCalls))
 (result (ref null $devirtualizedcalls.StringCalls))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void StringCalls.main()
(func $m_main__void@devirtualizedcalls.StringCalls
 (param $this (ref null $java.lang.Object))
 (local $literal (ref null $java.lang.String))
 (local $sub (ref null $java.lang.String))
 (local $sub2 (ref null $java.lang.String))
 (local $trimmed (ref null $java.lang.String))
 (local $newString (ref null $java.lang.String))
 (block $return.label
  (block
   ;; String literal = "String";
   
   (local.set $literal (ref.null $java.lang.String))
   ;; String sub = literal.substring(1);
   
   (local.set $sub (ref.null $java.lang.String))
   ;; String sub2 = literal.substring(2,3);
   
   (local.set $sub2 (ref.null $java.lang.String))
   ;; String trimmed = literal.trim();
   
   (local.set $trimmed (ref.null $java.lang.String))
   ;; String newString = literal.toString();
   
   (local.set $newString (ref.null $java.lang.String))
  )
 )
)


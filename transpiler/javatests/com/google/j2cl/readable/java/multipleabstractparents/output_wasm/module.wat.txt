;;; Code for multipleabstractparents.MultipleAbstractParents

;;; CLASS  MultipleAbstractParents
(type $multipleabstractparents.MultipleAbstractParents (struct
))

;;; MultipleAbstractParents()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents))
 (result (ref null $multipleabstractparents.MultipleAbstractParents))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void MultipleAbstractParents.main(String... args)
(func $m_main__arrayOf_java_lang_String__void@multipleabstractparents.MultipleAbstractParents
 (param $args (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; assert new ArrayList.<init>().getFoo(null).equals("AbstractCollection");
   ;; unimplemented statement AssertStatement
   ;; assert new StringList.<init>().getFoo(null).equals("AbstractCollection");
   ;; unimplemented statement AssertStatement
   ;; assert ((IStringList) new StringList.<init>()).getFoo(null).equals("AbstractCollection");
   ;; unimplemented statement AssertStatement
  )
 )
)

;;; INTERFACE  List

;;; INTERFACE  Collection

;;; CLASS  AbstractListCollection
(type $multipleabstractparents.MultipleAbstractParents.AbstractListCollection (struct
))

;;; AbstractListCollection()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractListCollection
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  AbstractCollection
(type $multipleabstractparents.MultipleAbstractParents.AbstractCollection (struct
))

;;; AbstractCollection()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractCollection
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; String AbstractCollection.getFoo(T t)
(func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (block $return.label
  (block
   ;; return "AbstractCollection";
   (local.set $return.value (ref.null $java.lang.String))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; CLASS  AbstractList
(type $multipleabstractparents.MultipleAbstractParents.AbstractList (struct
))

;;; AbstractList()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList))
 (block $return.label
  (block
   ;; AbstractCollection.this.AbstractCollection.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  AbstractList2
(type $multipleabstractparents.MultipleAbstractParents.AbstractList2 (struct
))

;;; AbstractList2()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractList2
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList2))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList2))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  ArrayList
(type $multipleabstractparents.MultipleAbstractParents.ArrayList (struct
))

;;; ArrayList()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.ArrayList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList))
 (block $return.label
  (block
   ;; AbstractList.this.AbstractList.<init>();
   
  )
 )
 (local.get $this)
)

;;; INTERFACE  IStringList

;;; CLASS  AbstractStringList
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList (struct
))

;;; AbstractStringList()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (block $return.label
  (block
   ;; AbstractList.this.AbstractList.<init>();
   
  )
 )
 (local.get $this)
)

;;; String AbstractStringList.getFoo(Object arg0)
(func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (block $return.label
  (block
   ;; return AbstractStringList.this.getFoo(((String) arg0));
   (local.set $return.value (ref.null $java.lang.String))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; String AbstractStringList.getFoo(String arg0)
(func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (block $return.label
  (block
   ;; return super.getFoo(arg0);
   (local.set $return.value (ref.null $java.lang.String))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; CLASS  AbstractStringList2
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList2 (struct
))

;;; AbstractStringList2()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList2
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2))
 (block $return.label
  (block
   ;; AbstractList2.this.AbstractList2.<init>();
   
  )
 )
 (local.get $this)
)

;;; String AbstractStringList2.getFoo(String arg0)
(func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList2
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (block $return.label
  (block
   ;; return List.this.getFoo(arg0);
   (local.set $return.value (ref.null $java.lang.String))
   (br $return.label)
  )
 )
 (local.get $return.value)
)

;;; CLASS  AbstractStringList3
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList3 (struct
))

;;; AbstractStringList3()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList3
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3))
 (block $return.label
  (block
   ;; AbstractList2.this.AbstractList2.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  StringList
(type $multipleabstractparents.MultipleAbstractParents.StringList (struct
))

;;; StringList()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.StringList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.StringList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.StringList))
 (block $return.label
  (block
   ;; AbstractStringList.this.AbstractStringList.<init>();
   
  )
 )
 (local.get $this)
)

;;; CLASS  StringListChild
(type $multipleabstractparents.MultipleAbstractParents.StringListChild (struct
))

;;; StringListChild()
(func $m_<init>__void@multipleabstractparents.MultipleAbstractParents.StringListChild
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild))
 (block $return.label
  (block
   ;; StringList.this.StringList.<init>();
   
  )
 )
 (local.get $this)
)


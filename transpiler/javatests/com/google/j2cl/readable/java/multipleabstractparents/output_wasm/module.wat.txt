;;; Code for multipleabstractparents.MultipleAbstractParents [vtable]
(global $multipleabstractparents.MultipleAbstractParents.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractListCollection [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractListCollection.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractCollection [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractCollection.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractCollection.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractList.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractList.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList2 [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractList2.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList2.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractList2.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.ArrayList [vtable]
(global $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList2 [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList3 [vtable]
(global $multipleabstractparents.MultipleAbstractParents.AbstractStringList3.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.StringList [vtable]
(global $multipleabstractparents.MultipleAbstractParents.StringList.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.StringList.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.StringList.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents.StringListChild [vtable]
(global $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable (mut (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable)) (ref.null $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable))

;;; Code for multipleabstractparents.MultipleAbstractParents [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.List [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_List (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.Collection [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_Collection (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractListCollection [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractListCollection (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractCollection [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractCollection (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList2 [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList2 (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.ArrayList [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_ArrayList (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.IStringList [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_IStringList (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList2 [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList2 (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList3 [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList3 (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.StringList [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringList (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents.StringListChild [static fields]
(global $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringListChild (mut i32) (i32.const 0))

;;; Code for multipleabstractparents.MultipleAbstractParents [CLASS]
(type $multipleabstractparents.MultipleAbstractParents (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; MultipleAbstractParents()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents))
 (result (ref null $multipleabstractparents.MultipleAbstractParents))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
  (block
   ;; multipleabstractparents.MultipleAbstractParents.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents )
   ;; Object.this.Object.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void MultipleAbstractParents.main(String... args)
(func $m_main__arrayOf_java_lang_String__void@multipleabstractparents.MultipleAbstractParents
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:59:21
  (block
   ;; multipleabstractparents.MultipleAbstractParents.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:59:21
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents )
  )
 )
)

;;; void MultipleAbstractParents.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:18:13
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Class<?> MultipleAbstractParents.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents)

;;; Code for multipleabstractparents.MultipleAbstractParents.List [INTERFACE]
(type $multipleabstractparents.MultipleAbstractParents.List.vtable (struct
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
))

;;; void List.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.List
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:19:19
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.List.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:19:19
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_List)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:19:19
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.List.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:19:19
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_List (i32.const 1))
  )
 )
)

;;; Class<?> List.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.List
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.List();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.List__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.List)

;;; Code for multipleabstractparents.MultipleAbstractParents.Collection [INTERFACE]
(type $multipleabstractparents.MultipleAbstractParents.Collection.vtable (struct
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
))

;;; void Collection.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.Collection
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:23:19
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.Collection.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:23:19
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_Collection)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:23:19
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.Collection.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:23:19
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_Collection (i32.const 1))
  )
 )
)

;;; Class<?> Collection.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.Collection
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.Collection();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.Collection__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.Collection)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractListCollection [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractListCollection (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractListCollection.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractListCollection.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; AbstractListCollection()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractListCollection
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractListCollection))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractListCollection.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractListCollection )
   ;; Object.this.Object.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AbstractListCollection.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractListCollection
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractListCollection.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractListCollection)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractListCollection.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractListCollection (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:27:31
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractCollection [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractCollection (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractCollection.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractCollection.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
))

;;; AbstractCollection()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractCollection
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractCollection.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractCollection )
   ;; Object.this.Object.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; String AbstractCollection.getFoo(T t)
(func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractCollection))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.AbstractCollection.rtt)))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:31:18
  (block
   ;; return javaemul.internal.StringPool.$getString_|AbstractColl...|();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:32:6
   (local.set $return.value (call $$getString_|AbstractColl...|__java_lang_String@javaemul.internal.StringPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection)

;;; void AbstractCollection.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractCollection
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractCollection.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractCollection)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractCollection.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractCollection (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:29:31
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractList (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractList.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractList.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
))

;;; AbstractList()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList )
   ;; AbstractCollection.this.AbstractCollection.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractCollection (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AbstractList.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractList.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractList.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractCollection.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:36:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractCollection )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractList2 [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractList2 (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractList2.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractList2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; AbstractList2()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList2
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList2))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractList2))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList2.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList2 )
   ;; Object.this.Object.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
   (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AbstractList2.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList2
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractList2.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList2)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractList2.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractList2 (i32.const 1))
   ;; java.lang.Object.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:38:31
   (call $$clinit__void@java.lang.Object )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.ArrayList [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.ArrayList (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
))

;;; ArrayList()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.ArrayList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
  (block
   ;; multipleabstractparents.MultipleAbstractParents.ArrayList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.ArrayList )
   ;; AbstractList.this.AbstractList.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void ArrayList.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.ArrayList
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.ArrayList.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_ArrayList)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.ArrayList.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_ArrayList (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:40:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList )
  )
 )
)

;;; Class<?> ArrayList.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.ArrayList
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.ArrayList))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.ArrayList.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.ArrayList();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.ArrayList__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.ArrayList)

;;; Code for multipleabstractparents.MultipleAbstractParents.IStringList [INTERFACE]
(type $multipleabstractparents.MultipleAbstractParents.IStringList.vtable (struct
 (field $m_getFoo__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
))

;;; void IStringList.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.IStringList
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:42:19
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.IStringList.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:42:19
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_IStringList)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:42:19
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.IStringList.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:42:19
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_IStringList (i32.const 1))
  )
 )
)

;;; Class<?> IStringList.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.IStringList
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.IStringList();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.IStringList__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.IStringList)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
 (field $m_getFoo__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
))

;;; AbstractStringList()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractStringList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList )
   ;; AbstractList.this.AbstractList.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList (local.get $this)))
  )
 )
 (local.get $this)
)

;;; String AbstractStringList.getFoo(Object arg0)
(func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.AbstractStringList.rtt)))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
  (block
   ;; return AbstractStringList.this.getFoo(((String) arg0));
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (local.set $return.value (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(struct.get $multipleabstractparents.MultipleAbstractParents.AbstractStringList.vtable $m_getFoo__java_lang_String__java_lang_String (struct.get $multipleabstractparents.MultipleAbstractParents.AbstractStringList $vtable(local.get $this)))))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)

;;; String AbstractStringList.getFoo(String arg0)
(func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.AbstractStringList.rtt)))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
  (block
   ;; return super.getFoo(arg0);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (local.set $return.value (call $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection (local.get $this)(local.get $arg0)))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)

;;; void AbstractStringList.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractStringList.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractStringList.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:47:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList2 [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList2 (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
))

;;; AbstractStringList2()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractStringList2
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractStringList2.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList2 )
   ;; AbstractList2.this.AbstractList2.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList2 (local.get $this)))
  )
 )
 (local.get $this)
)

;;; String AbstractStringList2.getFoo(String arg0)
(func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList2
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (result (ref null $java.lang.String))
 (local $return.value (ref null $java.lang.String))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList2))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.AbstractStringList2.rtt)))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
  (block
   ;; return List.this.getFoo(arg0);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (local.set $return.value (call_ref (local.get $this)(local.get $arg0)(struct.get $multipleabstractparents.MultipleAbstractParents.List.vtable $m_getFoo__java_lang_Object__java_lang_String (ref.cast (array.get $itable (struct.get $java.lang.Object $itable (local.get $this)) (i32.const 0)) (rtt.canon $multipleabstractparents.MultipleAbstractParents.List.vtable)) )))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList2)

;;; void AbstractStringList2.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList2
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractStringList2.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList2)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractStringList2.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList2 (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList2.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:50:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList2 )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.AbstractStringList3 [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList3 (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.AbstractStringList3.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.AbstractStringList3.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))

;;; AbstractStringList3()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractStringList3
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.AbstractStringList3))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
  (block
   ;; multipleabstractparents.MultipleAbstractParents.AbstractStringList3.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList3 )
   ;; AbstractList2.this.AbstractList2.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractList2 (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void AbstractStringList3.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList3
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.AbstractStringList3.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList3)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.AbstractStringList3.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_AbstractStringList3 (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractList2.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:53:31
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractList2 )
  )
 )
)

;;; Code for multipleabstractparents.MultipleAbstractParents.StringList [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.StringList (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.StringList.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.StringList.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
 (field $m_getFoo__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
))

;;; StringList()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.StringList
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.StringList))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.StringList))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
  (block
   ;; multipleabstractparents.MultipleAbstractParents.StringList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.StringList )
   ;; AbstractStringList.this.AbstractStringList.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.AbstractStringList (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void StringList.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.StringList
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.StringList.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringList)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.StringList.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringList (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.AbstractStringList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:55:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.AbstractStringList )
  )
 )
)

;;; Class<?> StringList.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringList
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.StringList))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.StringList.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.StringList();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.StringList__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringList)

;;; Code for multipleabstractparents.MultipleAbstractParents.StringListChild [CLASS]
(type $multipleabstractparents.MultipleAbstractParents.StringListChild (struct
 (field $vtable (ref $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_getFoo__java_lang_Object__java_lang_String (mut (ref $function.$java.lang.Object__$java.lang.String)))
 (field $m_getFoo__java_lang_String__java_lang_String (mut (ref $function.$java.lang.String__$java.lang.String)))
))

;;; StringListChild()
(func $m_<init>__@multipleabstractparents.MultipleAbstractParents.StringListChild
 (param $this (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild))
 (result (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild))
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
  (block
   ;; multipleabstractparents.MultipleAbstractParents.StringListChild.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.StringListChild )
   ;; StringList.this.StringList.<init>();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
   (drop (call $m_<init>__@multipleabstractparents.MultipleAbstractParents.StringList (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void StringListChild.$clinit()
(func $$clinit__void@multipleabstractparents.MultipleAbstractParents.StringListChild
 (block $return.label
  ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
  (block
   ;; if (multipleabstractparents.MultipleAbstractParents.StringListChild.$initialized) return;
   ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
   (if (global.get $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringListChild)
    (then
     ;; return;
     ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
     (br $return.label)
    )
   )
   ;; (multipleabstractparents.MultipleAbstractParents.StringListChild.$initialized = true);
   ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
   (global.set $f_$initialized__multipleabstractparents_MultipleAbstractParents_StringListChild (i32.const 1))
   ;; multipleabstractparents.MultipleAbstractParents.StringList.$clinit();
   ;;@ multipleabstractparents/MultipleAbstractParents.java:57:22
   (call $$clinit__void@multipleabstractparents.MultipleAbstractParents.StringList )
  )
 )
)

;;; Class<?> StringListChild.getClass()
(func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringListChild
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $return.value (ref null $java.lang.Class))
 (local $this (ref null $multipleabstractparents.MultipleAbstractParents.StringListChild))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $multipleabstractparents.MultipleAbstractParents.StringListChild.rtt)))
 (block $return.label
  (block
   ;; return javaemul.internal.ClassLiteralPool.$getMultipleabstractparents.MultipleAbstractParents.StringListChild();
   (local.set $return.value (call $$getMultipleabstractparents.MultipleAbstractParents.StringListChild__java_lang_Class@javaemul.internal.ClassLiteralPool ))
   (br $return.label)
  )
 )
 (local.get $return.value)
)
(elem declare func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringListChild)

 ;;; Code for multipleabstractparents.MultipleAbstractParents [vtable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.vtable
  (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents)
   (rtt.canon $multipleabstractparents.MultipleAbstractParents.vtable)
  )
 )

 ;;; Code for multipleabstractparents.MultipleAbstractParents [itable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for multipleabstractparents.MultipleAbstractParents.ArrayList [vtable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable
  (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.ArrayList)
   (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection)
   (rtt.canon $multipleabstractparents.MultipleAbstractParents.ArrayList.vtable)
  )
 )

 ;;; Code for multipleabstractparents.MultipleAbstractParents.ArrayList [itable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.ArrayList.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $multipleabstractparents.MultipleAbstractParents.ArrayList.itable) (i32.const 0)
 (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.List.vtable
  (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractCollection)
  (rtt.canon $multipleabstractparents.MultipleAbstractParents.List.vtable)
 ))

 ;;; Code for multipleabstractparents.MultipleAbstractParents.StringList [vtable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.StringList.vtable
  (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.StringList.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringList)
   (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
   (ref.func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
   (rtt.canon $multipleabstractparents.MultipleAbstractParents.StringList.vtable)
  )
 )

 ;;; Code for multipleabstractparents.MultipleAbstractParents.StringList [itable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.StringList.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $multipleabstractparents.MultipleAbstractParents.StringList.itable) (i32.const 1)
 (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.IStringList.vtable
  (ref.func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
  (rtt.canon $multipleabstractparents.MultipleAbstractParents.IStringList.vtable)
 ))
 (array.set $itable (global.get $multipleabstractparents.MultipleAbstractParents.StringList.itable) (i32.const 0)
 (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.List.vtable
  (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
  (rtt.canon $multipleabstractparents.MultipleAbstractParents.List.vtable)
 ))

 ;;; Code for multipleabstractparents.MultipleAbstractParents.StringListChild [vtable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable
  (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@multipleabstractparents.MultipleAbstractParents.StringListChild)
   (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
   (ref.func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
   (rtt.canon $multipleabstractparents.MultipleAbstractParents.StringListChild.vtable)
  )
 )

 ;;; Code for multipleabstractparents.MultipleAbstractParents.StringListChild [itable.init]
 (global.set $multipleabstractparents.MultipleAbstractParents.StringListChild.itable (array.new_default_with_rtt $itable (i32.const 2) (rtt.canon $itable)))
 (array.set $itable (global.get $multipleabstractparents.MultipleAbstractParents.StringListChild.itable) (i32.const 1)
 (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.IStringList.vtable
  (ref.func $m_getFoo__java_lang_String__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
  (rtt.canon $multipleabstractparents.MultipleAbstractParents.IStringList.vtable)
 ))
 (array.set $itable (global.get $multipleabstractparents.MultipleAbstractParents.StringListChild.itable) (i32.const 0)
 (struct.new_with_rtt $multipleabstractparents.MultipleAbstractParents.List.vtable
  (ref.func $m_getFoo__java_lang_Object__java_lang_String@multipleabstractparents.MultipleAbstractParents.AbstractStringList)
  (rtt.canon $multipleabstractparents.MultipleAbstractParents.List.vtable)
 ))

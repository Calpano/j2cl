;;; Code for interfaces.Main

;;; CLASS  Main
(type $interfaces.Main (struct
))

;;; Main()
(func $m_<init>__void@interfaces.Main
 (param $this (ref null $interfaces.Main))
 (result (ref null $interfaces.Main))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Main.testInterfaceMembers()
(func $m_testInterfaceMembers__void_$pp_interfaces@interfaces.Main
 (param $this (ref null $java.lang.Object))
 (local $i (ref null $java.lang.Object))
 (local $x i32)
 (block $return.label
  (block
   ;; Interface i = Main.this.new Implementor.<init>();
   
   (local.set $i (call $m_<init>__void_$pp_interfaces@interfaces.Main.Implementor (struct.new_with_rtt $interfaces.Main.Implementor (ref.null $interfaces.Main) (global.get $interfaces.Main.Implementor.rtt))))
   ;; i.interfaceMethod();
   
   ;; i.defaultMethod(null);
   
   ;; interfaces.Main.Interface.staticInterfaceMethod();
   (call $m_staticInterfaceMethod__void@interfaces.Main.Interface )
   ;; int x = (Main.this.new Implementor.<init>().a + interfaces.Main.Interface.b);
   
   (local.set $x (i32.add (global.get $a@interfaces.Main.Interface) (global.get $b@interfaces.Main.Interface)))
  )
 )
)

;;; INTERFACE  Interface
(global $a@interfaces.Main.Interface (mut i32) (i32.const 0))
(global $b@interfaces.Main.Interface (mut i32) (i32.const 0))

;;; void Interface.defaultMethod(T t)
(func $m_defaultMethod__java_lang_Object__void@interfaces.Main.Interface
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Interface.this.privateMethod(t);
   
  )
 )
)

;;; void Interface.privateMethod(T t)
(func $m_privateMethod__java_lang_Object__void_$p_interfaces_Main_Interface@interfaces.Main.Interface
 (param $this (ref null $java.lang.Object))
 (param $t (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; void Interface.staticInterfaceMethod()
(func $m_staticInterfaceMethod__void@interfaces.Main.Interface
 (block $return.label
  (block
  )
 )
)

;;; INTERFACE  SubInterface

;;; void SubInterface.defaultMethod(String s)
(func $m_defaultMethod__java_lang_String__void@interfaces.Main.SubInterface
 (param $this (ref null $java.lang.Object))
 (param $s (ref null $java.lang.String))
 (block $return.label
  (block
   ;; Interface.this.defaultMethod(s);
   
  )
 )
)

;;; CLASS  Implementor
(type $interfaces.Main.Implementor (struct
 (field $this@interfaces.Main.Implementor (mut (ref null $interfaces.Main)))
))

;;; Implementor()
(func $m_<init>__void_$pp_interfaces@interfaces.Main.Implementor
 (param $this (ref null $interfaces.Main.Implementor))
 (result (ref null $interfaces.Main.Implementor))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void Implementor.interfaceMethod()
(func $m_interfaceMethod__void@interfaces.Main.Implementor
 (param $this (ref null $java.lang.Object))
 (block $return.label
  (block
  )
 )
)

;;; void Implementor.defaultMethod(Object arg0)
(func $m_defaultMethod__java_lang_Object__void@interfaces.Main.Implementor
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; Implementor.this.defaultMethod(((String) arg0));
   
  )
 )
)

;;; void Implementor.defaultMethod(String arg0)
(func $m_defaultMethod__java_lang_String__void@interfaces.Main.Implementor
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (block $return.label
  (block
   ;; SubInterface.this.defaultMethod(arg0);
   
  )
 )
)

;;; CLASS  AbstractImplementor
(type $interfaces.Main.AbstractImplementor (struct
 (field $this@interfaces.Main.AbstractImplementor (mut (ref null $interfaces.Main)))
))

;;; AbstractImplementor()
(func $m_<init>__void_$pp_interfaces@interfaces.Main.AbstractImplementor
 (param $this (ref null $interfaces.Main.AbstractImplementor))
 (result (ref null $interfaces.Main.AbstractImplementor))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void AbstractImplementor.defaultMethod(Object arg0)
(func $m_defaultMethod__java_lang_Object__void@interfaces.Main.AbstractImplementor
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (block $return.label
  (block
   ;; AbstractImplementor.this.defaultMethod(((String) arg0));
   
  )
 )
)

;;; void AbstractImplementor.defaultMethod(String arg0)
(func $m_defaultMethod__java_lang_String__void@interfaces.Main.AbstractImplementor
 (param $this (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.String))
 (block $return.label
  (block
   ;; SubInterface.this.defaultMethod(arg0);
   
  )
 )
)


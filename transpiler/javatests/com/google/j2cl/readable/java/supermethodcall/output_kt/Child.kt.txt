package supermethodcall

open class GrandParent {
 open fun grandParentSimplest() {}

 open fun grandParentWithParams(foo: Int) {}

 open fun grandParentWithChangingReturn(): Any? {
  return null
 }
}

open class Parent: supermethodcall.GrandParent() {
 open fun parentSimplest() {}

 open fun parentWithParams(foo: Int) {}

 open fun parentWithChangingReturn(): Any? {
  return null
 }
}

open class Child: supermethodcall.Parent() {
 open fun parentSimplest() {
  super.parentSimplest()
 }

 open fun parentWithParams(foo: Int) {
  super.parentWithParams(foo)
 }

 open fun parentWithChangingReturn(): supermethodcall.Child? {
  super.parentWithChangingReturn()
  return this
 }

 open fun grandParentSimplest() {
  super.grandParentSimplest()
 }

 open fun grandParentWithParams(foo: Int) {
  super.grandParentWithParams(foo)
 }

 open fun grandParentWithChangingReturn(): supermethodcall.Child? {
  super.grandParentWithChangingReturn()
  return this
 }
}

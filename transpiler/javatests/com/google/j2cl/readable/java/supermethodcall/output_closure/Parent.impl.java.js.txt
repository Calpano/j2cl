goog.module('supermethodcall.Parent$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const GrandParent = goog.require('supermethodcall.GrandParent$impl');

class Parent extends GrandParent {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Parent} */
 static $create__() {
  Parent.$clinit();
  let $instance = new Parent();
  $instance.$ctor__supermethodcall_Parent__void();
  return $instance;
 }
 /** @nodts */
 $ctor__supermethodcall_Parent__void() {
  this.$ctor__supermethodcall_GrandParent__void();
 }
 /** @nodts */
 m_parentSimplest__void() {}
 /** @nodts */
 m_parentWithParams__int__void(/** number */ foo) {}
 /** @nodts @return {*} */
 m_parentWithChangingReturn__java_lang_Object() {
  return null;
 }
 /** @nodts */
 static $clinit() {
  Parent.$clinit = () =>{};
  Parent.$loadModules();
  GrandParent.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Parent;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(Parent, 'supermethodcall.Parent');

exports = Parent;

//# sourceMappingURL=Parent.js.map

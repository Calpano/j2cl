;;; Code for emptyclass.EmptyClass

;;; CLASS  EmptyClass
(type $emptyclass.EmptyClass (struct
 (field $vtable (ref null $emptyclass.EmptyClass.vtable))
))
(type $emptyclass.EmptyClass.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
))
(global $emptyclass.EmptyClass.vtable (mut (ref null $emptyclass.EmptyClass.vtable)) (ref.null $emptyclass.EmptyClass.vtable))

;;; EmptyClass()
(func $m_<init>__void@emptyclass.EmptyClass
 (param $this (ref null $emptyclass.EmptyClass))
 (result (ref null $emptyclass.EmptyClass))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)
(global funcref (ref.func $m_<init>__void@emptyclass.EmptyClass))

;;; Code for emptyclass.EmptyClass [vtable]
 (global.set $emptyclass.EmptyClass.vtable (struct.new_with_rtt $emptyclass.EmptyClass.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (rtt.canon $emptyclass.EmptyClass.vtable)))
))
(start $.runtime.init)


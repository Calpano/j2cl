;;; Code generated by J2WASM
(module
(rec
 (type $function.$getClassImpl__java_lang_Class (func (param (ref $java.lang.Object)) (result (ref null $java.lang.Class))))
 (type $itable (struct 
 ))
 ;;; Code for Native Array types
 ;;; End of code for Native Array types
 ;;; Code for javaemul.internal.StringPool [type definition]
 (type $javaemul.internal.StringPool.vtable (struct
  )
 )
 ;;; End of code for javaemul.internal.StringPool [type definition]
 ;;; Code for emptymethod.EmptyMethod [type definition]
 (type $emptymethod.EmptyMethod (struct_subtype
  (field $vtable (ref $emptymethod.EmptyMethod.vtable))
  (field $itable (ref $emptymethod.EmptyMethod.itable))
   $java.lang.Object)
 )
 (type $emptymethod.EmptyMethod.vtable (struct_subtype
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
   $java.lang.Object.vtable)
 )
 (type $emptymethod.EmptyMethod.itable (struct_subtype
  $java.lang.Object.itable))
 ;;; End of code for emptymethod.EmptyMethod [type definition]
)
(import "imports" "j2wasm.ExceptionUtils.tag" (tag $exception.event (param externref)))(func $keep_tag_alive_hack (export "_tag_hack_") (param $param externref)  (throw $exception.event (local.get $param)))
;;; Initialize dynamic dispatch tables.
;;; Code for emptymethod.EmptyMethod [vtable.init]
(global $emptymethod.EmptyMethod.vtable (ref $emptymethod.EmptyMethod.vtable)
 (struct.new $emptymethod.EmptyMethod.vtable
  (ref.func $$getClassImpl__java_lang_Class@emptymethod.EmptyMethod)
 )
)
;;; End of code for emptymethod.EmptyMethod [vtable.init]
;;; Code for emptymethod.EmptyMethod [itable.init]
(global $emptymethod.EmptyMethod.itable (ref $emptymethod.EmptyMethod.itable) (struct.new $emptymethod.EmptyMethod.itable
 ))
;;; End of code for emptymethod.EmptyMethod [itable.init]

;;; Code for Empty array singletons
;;; End of code for Empty array singletons
;;; Code for javaemul.internal.StringPool [static fields]
(global $f_$string_|emptymethod....|__javaemul_internal_StringPool (mut (ref null $java.lang.String)) (ref.null $java.lang.String))
;;; End of code for javaemul.internal.StringPool [static fields]
;;; Code for emptymethod.EmptyMethod [static fields]
(global $f_$initialized__emptymethod_EmptyMethod (mut i32) (i32.const 0))
(global $f_$class__emptymethod_EmptyMethod (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
;;; End of code for emptymethod.EmptyMethod [static fields]
(import "binaryen-intrinsics" "call.without.effects" (func $function.no.side.effects.$getString_|emptymethod....|__java_lang_String  (param funcref) (result (ref null $java.lang.String))))
(import "binaryen-intrinsics" "call.without.effects" (func $function.no.side.effects.$getClassMetadata__java_lang_Class  (param funcref) (result (ref null $java.lang.Class))))
;;; Code for javaemul.internal.StringPool [methods]

;;; String javaemul.internal.StringPool.$getString_|emptymethod....|()
(func $$getString_|emptymethod....|__java_lang_String@javaemul.internal.StringPool
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|emptymethod....|__javaemul_internal_StringPool) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|emptymethod....|__javaemul_internal_StringPool (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "emptymethod.EmptyMethod")))
   )
  )
  (return (global.get $f_$string_|emptymethod....|__javaemul_internal_StringPool))
 )
)
;;; End of code for javaemul.internal.StringPool [methods]
;;; Code for emptymethod.EmptyMethod [methods]

;;; EmptyMethod()
(func $m_<init>__@emptymethod.EmptyMethod
 (param $this (ref null $emptymethod.EmptyMethod))
 (result (ref null $emptymethod.EmptyMethod))
 ;;@ emptymethod/EmptyMethod.java:18:13
 (block
  ;;@ emptymethod/EmptyMethod.java:18:13
  (call $$clinit__void@emptymethod.EmptyMethod )
  ;;@ emptymethod/EmptyMethod.java:18:13
  (drop (call $m_<init>__@java.lang.Object ))
 )
)

;;; void EmptyMethod.main(String[] args)
(func $m_main__arrayOf_java_lang_String__void@emptymethod.EmptyMethod
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ emptymethod/EmptyMethod.java:19:21
 (block
  ;;@ emptymethod/EmptyMethod.java:19:41
  (call $$clinit__void@emptymethod.EmptyMethod )
 )
)

;;; void EmptyMethod.$clinit()
(func $$clinit__void@emptymethod.EmptyMethod
 ;;@ emptymethod/EmptyMethod.java:18:13
 (block
  ;;@ emptymethod/EmptyMethod.java:18:13
  (if (global.get $f_$initialized__emptymethod_EmptyMethod)
   (then
    ;;@ emptymethod/EmptyMethod.java:18:13
    (return )
   )
  )
  ;;@ emptymethod/EmptyMethod.java:18:13
  (global.set $f_$initialized__emptymethod_EmptyMethod (i32.const 1))
  ;;@ emptymethod/EmptyMethod.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> EmptyMethod.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@emptymethod.EmptyMethod
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__emptymethod_EmptyMethod) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__emptymethod_EmptyMethod (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|emptymethod....|__java_lang_String (ref.func $$getString_|emptymethod....|__java_lang_String@javaemul.internal.StringPool) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__emptymethod_EmptyMethod))
 )
)

;;; Class<?> EmptyMethod.$getClassImpl()
(func $$getClassImpl__java_lang_Class@emptymethod.EmptyMethod
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $emptymethod.EmptyMethod))
 (local.set $this (ref.cast_static $emptymethod.EmptyMethod (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@emptymethod.EmptyMethod) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@emptymethod.EmptyMethod)
;;; End of code for emptymethod.EmptyMethod [methods]
)
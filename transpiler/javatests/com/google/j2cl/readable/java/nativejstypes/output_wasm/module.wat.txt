 ;;; Code for nativejstypes.Bar.$Overlay [type definition]
 (type $nativejstypes.Bar.$Overlay (struct 
  (field $vtable (ref $nativejstypes.Bar.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.Bar.$Overlay.itable))
  )
 )
 (type $nativejstypes.Bar.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.Bar.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.BarInnerWithDotInName.$Overlay [type definition]
 (type $nativejstypes.BarInnerWithDotInName.$Overlay (struct 
  (field $vtable (ref $nativejstypes.BarInnerWithDotInName.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.BarInnerWithDotInName.$Overlay.itable))
  )
 )
 (type $nativejstypes.BarInnerWithDotInName.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.BarInnerWithDotInName.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay [type definition]
 (type $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay (struct 
  (field $vtable (ref $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.itable))
  )
 )
 (type $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.Bar.Inner.$Overlay [type definition]
 (type $nativejstypes.Bar.Inner.$Overlay (struct 
  (field $vtable (ref $nativejstypes.Bar.Inner.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.Bar.Inner.$Overlay.itable))
  )
 )
 (type $nativejstypes.Bar.Inner.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.Bar.Inner.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.Foo.$Overlay [type definition]
 (type $nativejstypes.Foo.$Overlay (struct 
  (field $vtable (ref $nativejstypes.Foo.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.Foo.$Overlay.itable))
  )
 )
 (type $nativejstypes.Foo.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.Foo.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.Headers.$Overlay [type definition]
 (type $nativejstypes.Headers.$Overlay (struct 
  (field $vtable (ref $nativejstypes.Headers.$Overlay.vtable)) 
  (field $itable (ref $nativejstypes.Headers.$Overlay.itable))
  )
 )
 (type $nativejstypes.Headers.$Overlay.vtable (struct 
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  )
 )
 (type $nativejstypes.Headers.$Overlay.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for nativejstypes.Bar [type definition]

 ;;; Code for nativejstypes.BarInnerWithDotInName [type definition]

 ;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace [type definition]

 ;;; Code for nativejstypes.Bar.Inner [type definition]

 ;;; Code for nativejstypes.Foo [type definition]

 ;;; Code for nativejstypes.Headers [type definition]

 ;;; Code for nativejstypes.Main [type definition]
 (type $nativejstypes.Main (struct_subtype 
  (field $vtable (ref $nativejstypes.Main.vtable)) 
  (field $itable (ref $nativejstypes.Main.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
   $java.lang.Object)
 )
 (type $nativejstypes.Main.vtable (struct_subtype 
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
   $java.lang.Object.vtable)
 )
 (type $nativejstypes.Main.itable (struct_subtype 
 (field $slot0 (ref null struct))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $java.lang.Object.itable))

;;; Code for nativejstypes.Bar.$Overlay [vtable.init]
(global $nativejstypes.Bar.$Overlay.vtable (ref $nativejstypes.Bar.$Overlay.vtable) 
 (struct.new $nativejstypes.Bar.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.Bar.$Overlay)
 )
)

;;; Code for nativejstypes.Bar.$Overlay [itable.init]
(global $nativejstypes.Bar.$Overlay.itable (ref $nativejstypes.Bar.$Overlay.itable) (struct.new $nativejstypes.Bar.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.BarInnerWithDotInName.$Overlay [vtable.init]
(global $nativejstypes.BarInnerWithDotInName.$Overlay.vtable (ref $nativejstypes.BarInnerWithDotInName.$Overlay.vtable) 
 (struct.new $nativejstypes.BarInnerWithDotInName.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInName.$Overlay)
 )
)

;;; Code for nativejstypes.BarInnerWithDotInName.$Overlay [itable.init]
(global $nativejstypes.BarInnerWithDotInName.$Overlay.itable (ref $nativejstypes.BarInnerWithDotInName.$Overlay.itable) (struct.new $nativejstypes.BarInnerWithDotInName.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay [vtable.init]
(global $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.vtable (ref $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.vtable) 
 (struct.new $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay)
 )
)

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay [itable.init]
(global $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.itable (ref $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.itable) (struct.new $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.Bar.Inner.$Overlay [vtable.init]
(global $nativejstypes.Bar.Inner.$Overlay.vtable (ref $nativejstypes.Bar.Inner.$Overlay.vtable) 
 (struct.new $nativejstypes.Bar.Inner.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.Bar.Inner.$Overlay)
 )
)

;;; Code for nativejstypes.Bar.Inner.$Overlay [itable.init]
(global $nativejstypes.Bar.Inner.$Overlay.itable (ref $nativejstypes.Bar.Inner.$Overlay.itable) (struct.new $nativejstypes.Bar.Inner.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.Foo.$Overlay [vtable.init]
(global $nativejstypes.Foo.$Overlay.vtable (ref $nativejstypes.Foo.$Overlay.vtable) 
 (struct.new $nativejstypes.Foo.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.Foo.$Overlay)
 )
)

;;; Code for nativejstypes.Foo.$Overlay [itable.init]
(global $nativejstypes.Foo.$Overlay.itable (ref $nativejstypes.Foo.$Overlay.itable) (struct.new $nativejstypes.Foo.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.Headers.$Overlay [vtable.init]
(global $nativejstypes.Headers.$Overlay.vtable (ref $nativejstypes.Headers.$Overlay.vtable) 
 (struct.new $nativejstypes.Headers.$Overlay.vtable
  (ref.func $m_getClass__java_lang_Class@nativejstypes.Headers.$Overlay)
 )
)

;;; Code for nativejstypes.Headers.$Overlay [itable.init]
(global $nativejstypes.Headers.$Overlay.itable (ref $nativejstypes.Headers.$Overlay.itable) (struct.new $nativejstypes.Headers.$Overlay.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.Main [vtable.init]
(global $nativejstypes.Main.vtable (ref $nativejstypes.Main.vtable) 
 (struct.new $nativejstypes.Main.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@nativejstypes.Main)
 )
)

;;; Code for nativejstypes.Main [itable.init]
(global $nativejstypes.Main.itable (ref $nativejstypes.Main.itable) (struct.new $nativejstypes.Main.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for nativejstypes.Bar [static fields]

;;; Code for nativejstypes.BarInnerWithDotInName [static fields]

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace [static fields]

;;; Code for nativejstypes.Bar.Inner [static fields]

;;; Code for nativejstypes.Bar.$Overlay [static fields]
(global $f_$initialized__nativejstypes_Bar_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.BarInnerWithDotInName.$Overlay [static fields]
(global $f_$initialized__nativejstypes_BarInnerWithDotInName_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay [static fields]
(global $f_$initialized__nativejstypes_BarInnerWithDotInNameAndHasNamespace_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.Bar.Inner.$Overlay [static fields]
(global $f_$initialized__nativejstypes_Bar_Inner_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.Foo [static fields]

;;; Code for nativejstypes.Foo.$Overlay [static fields]
(global $f_$initialized__nativejstypes_Foo_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.Headers [static fields]

;;; Code for nativejstypes.Headers.$Overlay [static fields]
(global $f_$initialized__nativejstypes_Headers_$Overlay (mut i32) (i32.const 0))

;;; Code for nativejstypes.Main [static fields]
(global $f_$initialized__nativejstypes_Main (mut i32) (i32.const 0))

;;; Code for nativejstypes.Bar.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.Bar.$Overlay
 ;;@ nativejstypes/Bar.java:24:13
 (block
  ;; if (nativejstypes.Bar.$Overlay.$initialized) return;
  ;;@ nativejstypes/Bar.java:24:13
  (if (global.get $f_$initialized__nativejstypes_Bar_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Bar.java:24:13
    (return )
   )
  )
  ;; (nativejstypes.Bar.$Overlay.$initialized = true);
  ;;@ nativejstypes/Bar.java:24:13
  (global.set $f_$initialized__nativejstypes_Bar_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.Bar.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.Bar.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.Bar.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.Bar.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.Bar.$Overlay__java_lang_Class (ref.func $$getNativejstypes.Bar.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.Bar.$Overlay)

;;; Code for nativejstypes.BarInnerWithDotInName.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.BarInnerWithDotInName.$Overlay
 ;;@ nativejstypes/Bar.java:41:6
 (block
  ;; if (nativejstypes.BarInnerWithDotInName.$Overlay.$initialized) return;
  ;;@ nativejstypes/Bar.java:41:6
  (if (global.get $f_$initialized__nativejstypes_BarInnerWithDotInName_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Bar.java:41:6
    (return )
   )
  )
  ;; (nativejstypes.BarInnerWithDotInName.$Overlay.$initialized = true);
  ;;@ nativejstypes/Bar.java:41:6
  (global.set $f_$initialized__nativejstypes_BarInnerWithDotInName_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInName.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.BarInnerWithDotInName.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.BarInnerWithDotInName.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.BarInnerWithDotInName.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.BarInnerWithDotInName.$Overlay__java_lang_Class (ref.func $$getNativejstypes.BarInnerWithDotInName.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInName.$Overlay)

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay
 ;;@ nativejstypes/Bar.java:46:6
 (block
  ;; if (nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.$initialized) return;
  ;;@ nativejstypes/Bar.java:46:6
  (if (global.get $f_$initialized__nativejstypes_BarInnerWithDotInNameAndHasNamespace_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Bar.java:46:6
    (return )
   )
  )
  ;; (nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay.$initialized = true);
  ;;@ nativejstypes/Bar.java:46:6
  (global.set $f_$initialized__nativejstypes_BarInnerWithDotInNameAndHasNamespace_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay__java_lang_Class (ref.func $$getNativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.BarInnerWithDotInNameAndHasNamespace.$Overlay)

;;; Code for nativejstypes.Bar.Inner.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.Bar.Inner.$Overlay
 ;;@ nativejstypes/Bar.java:34:15
 (block
  ;; if (nativejstypes.Bar.Inner.$Overlay.$initialized) return;
  ;;@ nativejstypes/Bar.java:34:15
  (if (global.get $f_$initialized__nativejstypes_Bar_Inner_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Bar.java:34:15
    (return )
   )
  )
  ;; (nativejstypes.Bar.Inner.$Overlay.$initialized = true);
  ;;@ nativejstypes/Bar.java:34:15
  (global.set $f_$initialized__nativejstypes_Bar_Inner_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.Bar.Inner.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.Bar.Inner.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.Bar.Inner.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.Bar.Inner.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.Bar.Inner.$Overlay__java_lang_Class (ref.func $$getNativejstypes.Bar.Inner.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.Bar.Inner.$Overlay)

;;; Code for nativejstypes.Foo.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.Foo.$Overlay
 ;;@ nativejstypes/Foo.java:24:13
 (block
  ;; if (nativejstypes.Foo.$Overlay.$initialized) return;
  ;;@ nativejstypes/Foo.java:24:13
  (if (global.get $f_$initialized__nativejstypes_Foo_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Foo.java:24:13
    (return )
   )
  )
  ;; (nativejstypes.Foo.$Overlay.$initialized = true);
  ;;@ nativejstypes/Foo.java:24:13
  (global.set $f_$initialized__nativejstypes_Foo_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.Foo.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.Foo.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.Foo.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.Foo.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.Foo.$Overlay__java_lang_Class (ref.func $$getNativejstypes.Foo.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.Foo.$Overlay)

;;; Code for nativejstypes.Headers.$Overlay [methods]

;;; void $Overlay.$clinit()
(func $$clinit__void@nativejstypes.Headers.$Overlay
 ;;@ nativejstypes/Headers.java:23:13
 (block
  ;; if (nativejstypes.Headers.$Overlay.$initialized) return;
  ;;@ nativejstypes/Headers.java:23:13
  (if (global.get $f_$initialized__nativejstypes_Headers_$Overlay)
   (then
    ;; return;
    ;;@ nativejstypes/Headers.java:23:13
    (return )
   )
  )
  ;; (nativejstypes.Headers.$Overlay.$initialized = true);
  ;;@ nativejstypes/Headers.java:23:13
  (global.set $f_$initialized__nativejstypes_Headers_$Overlay (i32.const 1))
 )
)

;;; Class<?> $Overlay.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.Headers.$Overlay
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.Headers.$Overlay))
 (local.set $this (ref.cast_static $nativejstypes.Headers.$Overlay (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.Headers.$Overlay();
  (return (call $function.no.side.effects.$getNativejstypes.Headers.$Overlay__java_lang_Class (ref.func $$getNativejstypes.Headers.$Overlay__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.Headers.$Overlay)

;;; Code for nativejstypes.Bar [methods]

;;; Bar(int x, int y)
(func $m_<init>__int__int@nativejstypes.Bar (import "imports" "nativejstypes.Bar.constructor") 
 (param $x i32)
 (param $y i32)
 (result (ref null extern))
)

;;; int Bar.product()
(func $m_product__int@nativejstypes.Bar (import "imports" "nativejstypes.Bar.product") 
 (param $this (ref null extern))
 (result i32)
)

;;; int Bar.x()
(func $f_x__int@nativejstypes.Bar (import "imports" "get nativejstypes.Bar.x") 
 (param $this (ref null extern))
 (result i32)
)

;;; void Bar.x(int value)
(func $f_x__int__void@nativejstypes.Bar (import "imports" "set nativejstypes.Bar.x") 
 (param $this (ref null extern))
 (param $value i32)
)

;;; int Bar.y()
(func $f_y__int@nativejstypes.Bar (import "imports" "get nativejstypes.Bar.y") 
 (param $this (ref null extern))
 (result i32)
)

;;; void Bar.y(int value)
(func $f_y__int__void@nativejstypes.Bar (import "imports" "set nativejstypes.Bar.y") 
 (param $this (ref null extern))
 (param $value i32)
)

;;; int Bar.f()
(func $f_f__int@nativejstypes.Bar (import "imports" "get nativejstypes.Bar.f") 
 (result i32)
)

;;; void Bar.f(int value)
(func $f_f__int__void@nativejstypes.Bar (import "imports" "set nativejstypes.Bar.f") 
 (param $value i32)
)

;;; Code for nativejstypes.BarInnerWithDotInName [methods]

;;; BarInnerWithDotInName(int n)
(func $m_<init>__int@nativejstypes.BarInnerWithDotInName (import "imports" "nativejstypes.Bar.Inner.constructor") 
 (param $n i32)
 (result (ref null extern))
)

;;; Code for nativejstypes.BarInnerWithDotInNameAndHasNamespace [methods]

;;; BarInnerWithDotInNameAndHasNamespace(int n)
(func $m_<init>__int@nativejstypes.BarInnerWithDotInNameAndHasNamespace (import "imports" "nativejstypes.Bar.Inner.constructor") 
 (param $n i32)
 (result (ref null extern))
)

;;; Code for nativejstypes.Bar.Inner [methods]

;;; Inner(int n)
(func $m_<init>__int@nativejstypes.Bar.Inner (import "imports" "nativejstypes.Bar.Inner.constructor") 
 (param $n i32)
 (result (ref null extern))
)

;;; Code for nativejstypes.Foo [methods]

;;; Foo()
(func $m_<init>__@nativejstypes.Foo (import "imports" "com.acme.MyFoo.constructor") 
 (result (ref null extern))
)

;;; int Foo.sum()
(func $m_sum__int@nativejstypes.Foo (import "imports" "com.acme.MyFoo.sum") 
 (param $this (ref null extern))
 (result i32)
)

;;; int Foo.x()
(func $f_x__int@nativejstypes.Foo (import "imports" "get com.acme.MyFoo.x") 
 (param $this (ref null extern))
 (result i32)
)

;;; void Foo.x(int value)
(func $f_x__int__void@nativejstypes.Foo (import "imports" "set com.acme.MyFoo.x") 
 (param $this (ref null extern))
 (param $value i32)
)

;;; int Foo.y()
(func $f_y__int@nativejstypes.Foo (import "imports" "get com.acme.MyFoo.y") 
 (param $this (ref null extern))
 (result i32)
)

;;; void Foo.y(int value)
(func $f_y__int__void@nativejstypes.Foo (import "imports" "set com.acme.MyFoo.y") 
 (param $this (ref null extern))
 (param $value i32)
)

;;; Code for nativejstypes.Headers [methods]

;;; Headers()
(func $m_<init>__@nativejstypes.Headers (import "imports" "Headers.constructor") 
 (result (ref null extern))
)

;;; void Headers.append(NativeString name, NativeString value)
(func $m_append__java_lang_String_NativeString__java_lang_String_NativeString__void@nativejstypes.Headers (import "imports" "Headers.append") 
 (param $this (ref null extern))
 (param $name (ref null string))
 (param $value (ref null string))
)

;;; NativeString Headers.get(NativeString name)
(func $m_get__java_lang_String_NativeString__java_lang_String_NativeString@nativejstypes.Headers (import "imports" "Headers.get") 
 (param $this (ref null extern))
 (param $name (ref null string))
 (result (ref null string))
)

;;; Code for nativejstypes.Main [methods]

;;; Main Main.$create()
(func $$create__@nativejstypes.Main
 (result (ref null $nativejstypes.Main))
 ;;@ nativejstypes/Main.java:20:13
 (local $$instance (ref null $nativejstypes.Main))
 (block
  ;; Main $instance = new Main.<init>(0);
  ;;@ nativejstypes/Main.java:20:13
  (local.set $$instance (struct.new $nativejstypes.Main (ref.as_non_null (global.get $nativejstypes.Main.vtable)) (ref.as_non_null (global.get $nativejstypes.Main.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ nativejstypes/Main.java:20:13
  (call $$ctor__void_$p_nativejstypes_Main@nativejstypes.Main (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ nativejstypes/Main.java:20:13
  (return (local.get $$instance))
 )
)

;;; void Main.$ctor()
(func $$ctor__void_$p_nativejstypes_Main@nativejstypes.Main
 (param $this (ref null $nativejstypes.Main))
 ;;@ nativejstypes/Main.java:20:13
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:20:13
  (call $$clinit__void@nativejstypes.Main )
  ;; Object.this.$ctor();
  ;;@ nativejstypes/Main.java:20:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; int Main.testNativeJsTypeWithNamespace()
(func $m_testNativeJsTypeWithNamespace__int@nativejstypes.Main
 (result i32)
 ;;@ nativejstypes/Main.java:21:20
 (local $foo (ref null extern))
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:21:52
  (call $$clinit__void@nativejstypes.Main )
  ;; Foo foo = new Foo.<init>();
  ;;@ nativejstypes/Main.java:22:4
  (local.set $foo (call $m_<init>__@nativejstypes.Foo ))
  ;; foo.x(50);
  ;;@ nativejstypes/Main.java:23:4
  (call $f_x__int__void@nativejstypes.Foo (ref.as_non_null (local.get $foo))(i32.const 50))
  ;; foo.y(5);
  ;;@ nativejstypes/Main.java:24:4
  (call $f_y__int__void@nativejstypes.Foo (ref.as_non_null (local.get $foo))(i32.const 5))
  ;; return foo.sum();
  ;;@ nativejstypes/Main.java:25:4
  (return (call $m_sum__int@nativejstypes.Foo (ref.as_non_null (local.get $foo))))
 )
)

;;; int Main.testNativeJsTypeWithoutNamespace()
(func $m_testNativeJsTypeWithoutNamespace__int@nativejstypes.Main
 (result i32)
 ;;@ nativejstypes/Main.java:28:20
 (local $bar (ref null extern))
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:28:55
  (call $$clinit__void@nativejstypes.Main )
  ;; Bar bar = new Bar.<init>(6,7);
  ;;@ nativejstypes/Main.java:29:4
  (local.set $bar (call $m_<init>__int__int@nativejstypes.Bar (i32.const 6)(i32.const 7)))
  ;; bar.x(50);
  ;;@ nativejstypes/Main.java:30:4
  (call $f_x__int__void@nativejstypes.Bar (ref.as_non_null (local.get $bar))(i32.const 50))
  ;; bar.y(5);
  ;;@ nativejstypes/Main.java:31:4
  (call $f_y__int__void@nativejstypes.Bar (ref.as_non_null (local.get $bar))(i32.const 5))
  ;; nativejstypes.Bar.f(10);
  ;;@ nativejstypes/Main.java:32:4
  (call $f_f__int__void@nativejstypes.Bar (i32.const 10))
  ;; return bar.product();
  ;;@ nativejstypes/Main.java:33:4
  (return (call $m_product__int@nativejstypes.Bar (ref.as_non_null (local.get $bar))))
 )
)

;;; void Main.testInnerNativeJsType()
(func $m_testInnerNativeJsType__void@nativejstypes.Main
 ;;@ nativejstypes/Main.java:36:21
 (local $unusedBarInner (ref null extern))
 (local $unusedBarInnerWithDotInName (ref null extern))
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:36:45
  (call $$clinit__void@nativejstypes.Main )
  ;; Inner unusedBarInner = new Inner.<init>(1);
  ;;@ nativejstypes/Main.java:37:4
  (local.set $unusedBarInner (call $m_<init>__int@nativejstypes.Bar.Inner (i32.const 1)))
  ;; BarInnerWithDotInName unusedBarInnerWithDotInName = new BarInnerWithDotInName.<init>(2);
  ;;@ nativejstypes/Main.java:38:4
  (local.set $unusedBarInnerWithDotInName (call $m_<init>__int@nativejstypes.BarInnerWithDotInName (i32.const 2)))
 )
)

;;; void Main.testGlobalNativeJsType()
(func $m_testGlobalNativeJsType__void@nativejstypes.Main
 ;;@ nativejstypes/Main.java:41:21
 (local $header (ref null extern))
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:41:46
  (call $$clinit__void@nativejstypes.Main )
  ;; Headers header = new Headers.<init>();
  ;;@ nativejstypes/Main.java:42:4
  (local.set $header (call $m_<init>__@nativejstypes.Headers ))
  ;; header.append(java.lang.String.toJsString(javaemul.internal.StringPool.$getString_|Content_Type|()),java.lang.String.toJsString(javaemul.internal.StringPool.$getString_|text_xml|()));
  ;;@ nativejstypes/Main.java:43:4
  (call $m_append__java_lang_String_NativeString__java_lang_String_NativeString__void@nativejstypes.Headers (ref.as_non_null (local.get $header))(call $m_toJsString__java_lang_String__java_lang_String_NativeString@java.lang.String (call $function.no.side.effects.$getString_|Content_Type|__java_lang_String (ref.func $$getString_|Content_Type|__java_lang_String@javaemul.internal.StringPool) ))(call $m_toJsString__java_lang_String__java_lang_String_NativeString@java.lang.String (call $function.no.side.effects.$getString_|text_xml|__java_lang_String (ref.func $$getString_|text_xml|__java_lang_String@javaemul.internal.StringPool) )))
 )
)

;;; void Main.testNativeTypeClassLiteral()
(func $m_testNativeTypeClassLiteral__void@nativejstypes.Main
 ;;@ nativejstypes/Main.java:47:21
 (local $o1 (ref null $java.lang.Object))
 (local $$qualifier (ref null $java.lang.Class))
 (block
  ;; nativejstypes.Main.$clinit();
  ;;@ nativejstypes/Main.java:47:50
  (call $$clinit__void@nativejstypes.Main )
  ;; Object o1 = javaemul.internal.ClassLiteralPool.$getNativejstypes.Bar();
  ;;@ nativejstypes/Main.java:48:4
  (local.set $o1 (call $function.no.side.effects.$getNativejstypes.Bar__java_lang_Class (ref.func $$getNativejstypes.Bar__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
  ;; (o1 = (Class<?> $qualifier = javaemul.internal.ClassLiteralPool.$getNativejstypes.Bar(),$qualifier.getArrayType(2)));
  ;;@ nativejstypes/Main.java:49:4
  (local.set $o1 (block (result (ref null $java.lang.Class))
   (local.set $$qualifier (call $function.no.side.effects.$getNativejstypes.Bar__java_lang_Class (ref.func $$getNativejstypes.Bar__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
   (call $function.no.side.effects.m_getArrayType__int__java_lang_Class_$pp_java_lang (ref.as_non_null (local.get $$qualifier))(i32.const 2)(struct.get $java.lang.Class.vtable $m_getArrayType__int__java_lang_Class_$pp_java_lang (struct.get $java.lang.Class $vtable(local.get $$qualifier))))
  ))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@nativejstypes.Main
 ;;@ nativejstypes/Main.java:20:13
 (block
  ;; if (nativejstypes.Main.$initialized) return;
  ;;@ nativejstypes/Main.java:20:13
  (if (global.get $f_$initialized__nativejstypes_Main)
   (then
    ;; return;
    ;;@ nativejstypes/Main.java:20:13
    (return )
   )
  )
  ;; (nativejstypes.Main.$initialized = true);
  ;;@ nativejstypes/Main.java:20:13
  (global.set $f_$initialized__nativejstypes_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ nativejstypes/Main.java:20:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@nativejstypes.Main
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $nativejstypes.Main))
 (local.set $this (ref.cast_static $nativejstypes.Main (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getNativejstypes.Main();
  (return (call $function.no.side.effects.$getNativejstypes.Main__java_lang_Class (ref.func $$getNativejstypes.Main__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@nativejstypes.Main)

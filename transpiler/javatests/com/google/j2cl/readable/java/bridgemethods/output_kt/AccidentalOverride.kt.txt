// Generated from "bridgemethods/AccidentalOverride.java"
@file:OptIn(ExperimentalObjCName::class)

package bridgemethods

import javaemul.lang.*
import kotlin.Int
import kotlin.Number
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

fun interface I<T, S> {
 @ObjCName("fun")
 fun `fun`(
  @ObjCName("withId") s: S
 ): T
}

open class A<T, S> {
 @ObjCName("fun")
 open fun `fun`(
  @ObjCName("withId") s: S
 ): T {
  return null as T
 }

 @ObjCName("get")
 open fun get(): T {
  return null as T
 }
}

open class B: A<Number?, String?>(), I<Int?, String?> {
 open override fun `fun`(s: String?): Int? {
  return Int(1)
 }
}

interface SpecializedInterface {
 @ObjCName("fun")
 fun `fun`(
  @ObjCName("withNSString") s: String?
 ): String?

 @ObjCName("get")
 fun get(): String?
}

open class AccidentalOverride: A<String?, String?>(), SpecializedInterface {}

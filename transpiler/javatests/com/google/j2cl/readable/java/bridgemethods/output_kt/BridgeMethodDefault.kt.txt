package bridgemethods

open class BridgeMethodDefault {}

interface `BridgeMethodDefault$I`<T> {
 fun m(t: T?)
}

interface `BridgeMethodDefault$II`: bridgemethods.`BridgeMethodDefault$I`<String?> {
 override fun m(s: String?) {}
}

open class `BridgeMethodDefault$A`: bridgemethods.`BridgeMethodDefault$II` {}

interface `BridgeMethodDefault$JJ`: bridgemethods.`BridgeMethodDefault$I`<Any?> {
 override fun m(o: Any?) {}
}

open class `BridgeMethodDefault$B`: bridgemethods.`BridgeMethodDefault$JJ` {}

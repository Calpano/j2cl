// Generated from "bridgemethods/BridgeMethodDefault.java"
@file:OptIn(ExperimentalObjCName::class)

package bridgemethods

import javaemul.lang.*
import kotlin.Any
import kotlin.OptIn
import kotlin.String
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

open class BridgeMethodDefault {
 init {
  val jj: BridgeMethodDefault.JJ? = BridgeMethodDefault.C()
  jj!!.m(Any())
  val i: BridgeMethodDefault.I<Any?>? = jj
  i!!.m(Any())
 }

 fun interface I<T> {
  @ObjCName("m")
  fun m(
   @ObjCName("withId") t: T
  )
 }

 interface II: BridgeMethodDefault.I<String?> {
  override fun m(s: String?) {}
 }

 open class A: BridgeMethodDefault.II {}

 interface JJ: BridgeMethodDefault.I<Any?> {
  override fun m(o: Any?) {}
 }

 open class B: BridgeMethodDefault.JJ {}

 open class C: BridgeMethodDefault.B() {
  open override fun m(o: Any?) {}
 }
}

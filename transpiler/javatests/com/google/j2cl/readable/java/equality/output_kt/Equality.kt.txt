// Generated from "equality/Equality.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress("REPEATED_BOUND", "UNNECESSARY_NOT_NULL_ASSERTION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "UNCHECKED_CAST", "PARAMETER_NAME_CHANGED_ON_OVERRIDE", "ALWAYS_NULL", "SENSELESS_COMPARISON", "UNUSED_PARAMETER")

package equality

import javaemul.lang.*
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Float
import kotlin.IntArray
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("EqualityEquality", exact = true)
open class Equality {
 @ObjCName("test")
 open fun test() {
  val a: Boolean = false == false
  val b: Boolean = 0 != 1
  val c: Boolean = Any() !== Any()
  val d: Boolean = Double.valueOf(0.0) === Double.valueOf(0.0)
  val e: Boolean = Float.valueOf(0.0f) === Float.valueOf(0.0f)
  val f: Boolean = null != Any()
  val g: Boolean = Any() != null
  val h: Boolean = null != IntArray(0)
 }
}

;;; Code for equality.Equality [vtable]
(global $equality.Equality.vtable (mut (ref null $equality.Equality.vtable)) (ref.null $equality.Equality.vtable))

;;; Code for equality.Equality [static fields]
(global $f_$initialized__equality_Equality (mut i32) (i32.const 0))

;;; Code for equality.Equality [CLASS]
(type $equality.Equality (struct
 (field $vtable (ref null $equality.Equality.vtable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
))
(type $equality.Equality.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_test__void (mut (ref $function.__$void)))
))

;;; Equality()
(func $m_<init>__void@equality.Equality
 (param $this (ref null $equality.Equality))
 (result (ref null $equality.Equality))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   (drop (call $m_<init>__void@java.lang.Object (local.get $this)))
  )
 )
 (local.get $this)
)

;;; void Equality.test()
(func $m_test__void@equality.Equality
 (param $this.untyped (ref null $java.lang.Object))
 (local $this (ref null $equality.Equality))
 (local.set $this (ref.cast $java.lang.Object $equality.Equality (local.get $this.untyped) (global.get $equality.Equality.rtt)))
 (block $return.label
  (block
   (block
    ;; assert (false == false);
    ;; unimplemented statement AssertStatement
    ;; assert (0 != 1);
    ;; unimplemented statement AssertStatement
   )
   (block
    ;; assert !(new Object.<init>() == new Object.<init>());
    ;; unimplemented statement AssertStatement
   )
   (block
    ;; assert (java.lang.Double.valueOf(0.0) == java.lang.Double.valueOf(0.0));
    ;; unimplemented statement AssertStatement
   )
   (block
    ;; assert (java.lang.Float.valueOf(0.0) == java.lang.Float.valueOf(0.0));
    ;; unimplemented statement AssertStatement
   )
   (block
    ;; assert !javaemul.internal.Platform.isNull(new Object.<init>());
    ;; unimplemented statement AssertStatement
    ;; assert !javaemul.internal.Platform.isNull(new Object.<init>());
    ;; unimplemented statement AssertStatement
   )
  )
 )
)
(elem declare func $m_test__void@equality.Equality)

;;; void Equality.$clinit()
(func $$clinit__void@equality.Equality
 (block $return.label
  (block
   ;; if (equality.Equality.$initialized) return;
   (if (global.get $f_$initialized__equality_Equality)
    (then
     ;; return;
     (br $return.label)
    )
   )
   ;; (equality.Equality.$initialized = true);
   (global.set $f_$initialized__equality_Equality (i32.const 1))
   ;; java.lang.Object.$clinit();
   (call $$clinit__void@java.lang.Object )
  )
 )
)

 ;;; Code for equality.Equality [vtable.init]
 (global.set $equality.Equality.vtable (struct.new_with_rtt $equality.Equality.vtable  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object) (ref.func $m_hashCode__int@java.lang.Object) (ref.func $m_toString__java_lang_String@java.lang.Object) (ref.func $m_getClass__java_lang_Class@java.lang.Object) (ref.func $m_test__void@equality.Equality) (rtt.canon $equality.Equality.vtable)))

;;; Code for equality.Equality [static fields]
(global $f_$initialized__equality_Equality (mut i32) (i32.const 0))

;;; Code for equality.Equality [vtable.init]
(global $equality.Equality.vtable (ref $equality.Equality.vtable) 
 (struct.new $equality.Equality.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@equality.Equality)
  (ref.func $m_test__void@equality.Equality)
 )
)

;;; Code for equality.Equality [itable.init]
(global $equality.Equality.itable (ref $itable) (array.init_static $itable 
 ))

;;; Code for equality.Equality [CLASS]
(type $equality.Equality (struct_subtype 
 (field $vtable (ref $equality.Equality.vtable)) 
 (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $equality.Equality.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_test__void (ref $function.m_test__void))
  $java.lang.Object.vtable)
)

;;; Equality Equality.$create()
(func $$create__equality_Equality@equality.Equality
 (result (ref null $equality.Equality))
 ;;@ equality/Equality.java:18:13
 (local $$instance (ref null $equality.Equality))
 (block
  ;; Equality $instance = new Equality.<init>();
  ;;@ equality/Equality.java:18:13
  (local.set $$instance (struct.new $equality.Equality (ref.as_non_null (global.get $equality.Equality.vtable)) (ref.as_non_null (global.get $equality.Equality.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ equality/Equality.java:18:13
  (call $$ctor__void_$p_equality_Equality@equality.Equality (local.get $$instance))
  ;; return $instance;
  ;;@ equality/Equality.java:18:13
  (return (local.get $$instance))
 )
)

;;; void Equality.$ctor()
(func $$ctor__void_$p_equality_Equality@equality.Equality
 (param $this (ref null $equality.Equality))
 ;;@ equality/Equality.java:18:13
 (block
  ;; equality.Equality.$clinit();
  ;;@ equality/Equality.java:18:13
  (call $$clinit__void@equality.Equality )
  ;; Object.this.$ctor();
  ;;@ equality/Equality.java:18:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (local.get $this))
 )
)

;;; void Equality.test()
(func $m_test__void@equality.Equality
 (type $function.m_test__void)
 (param $this.untyped (ref null $java.lang.Object))
 ;;@ equality/Equality.java:19:14
 (local $this (ref null $equality.Equality))
 (local.set $this (ref.cast_static $equality.Equality (local.get $this.untyped)))
 (block
  (block
  )
  (block
  )
  (block
  )
  (block
  )
  (block
  )
 )
)
(elem declare func $m_test__void@equality.Equality)

;;; void Equality.$clinit()
(func $$clinit__void@equality.Equality
 ;;@ equality/Equality.java:18:13
 (block
  ;; if (equality.Equality.$initialized) return;
  ;;@ equality/Equality.java:18:13
  (if (global.get $f_$initialized__equality_Equality)
   (then
    ;; return;
    ;;@ equality/Equality.java:18:13
    (return )
   )
  )
  ;; (equality.Equality.$initialized = true);
  ;;@ equality/Equality.java:18:13
  (global.set $f_$initialized__equality_Equality (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ equality/Equality.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Equality.getClass()
(func $m_getClass__java_lang_Class@equality.Equality
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $equality.Equality))
 (local.set $this (ref.cast_static $equality.Equality (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getEquality.Equality();
  (return (call $function.no.side.effects.$getEquality.Equality__java_lang_Class (ref.func $$getEquality.Equality__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@equality.Equality)

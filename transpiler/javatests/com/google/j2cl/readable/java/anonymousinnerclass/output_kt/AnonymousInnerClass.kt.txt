package anonymousinnerclass

import javaemul.lang.*
import kotlin.jvm.*

open class A {
 open inner class B {}
}

open class AnonymousInnerClass {
 open fun test(arg: kotlin.Int) {
  val ic: anonymousinnerclass.AnonymousInnerClass.InnerClass? = object : InnerClass() {}
  val a: anonymousinnerclass.A? = anonymousinnerclass.A()
  val b: anonymousinnerclass.A.B? = object : B() {}
  open class `$1C` {
   @kotlin.jvm.JvmField var fInC: kotlin.Int = arg
  }
  val c: `$1C`? = object : `$1C`() {}
 }

 open inner class InnerClass {}
}

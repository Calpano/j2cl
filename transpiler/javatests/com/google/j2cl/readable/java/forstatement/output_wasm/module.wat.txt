;;; Code for forstatement.ForStatement [static fields]
(global $f_$initialized__forstatement_ForStatement (mut i32) (i32.const 0))

;;; Code for forstatement.ForStatement [vtable.init]
(global $forstatement.ForStatement.vtable (ref $forstatement.ForStatement.vtable) 
 (struct.new_with_rtt $forstatement.ForStatement.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@forstatement.ForStatement)
  (ref.func $m_test__void@forstatement.ForStatement)
  (rtt.canon $forstatement.ForStatement.vtable)
 )
)

;;; Code for forstatement.ForStatement [itable.init]
(global $forstatement.ForStatement.itable (ref $itable) (array.init $itable 
 (rtt.canon $itable)))

;;; Code for forstatement.ForStatement [CLASS]
(type $forstatement.ForStatement (struct
 (field $vtable (ref $forstatement.ForStatement.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $forstatement.ForStatement.vtable (struct
 (field $m_equals__java_lang_Object__boolean (ref $function.$java.lang.Object__$boolean))
 (field $m_hashCode__int (ref $function.__$int))
 (field $m_toString__java_lang_String (ref $function.__$java.lang.String))
 (field $m_getClass__java_lang_Class (ref $function.__$java.lang.Class))
 (field $m_test__void (ref $function.__$void))
 )
  (extends $java.lang.Object.vtable)
)

;;; ForStatement()
(func $m_<init>__@forstatement.ForStatement
 (param $this (ref null $forstatement.ForStatement))
 (result (ref null $forstatement.ForStatement))
 ;;@ forstatement/ForStatement.java:18:13
 (block
  ;; forstatement.ForStatement.$clinit();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$clinit__void@forstatement.ForStatement )
  ;; Object.this.Object.<init>();
  ;;@ forstatement/ForStatement.java:18:13
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return ForStatement.this;
  ;;@ forstatement/ForStatement.java:18:13
  (return (local.get $this))
 )
)

;;; void ForStatement.test()
(func $m_test__void@forstatement.ForStatement
 (type $function.__$void)
 (param $this.untyped (ref null $java.lang.Object))
 ;;@ forstatement/ForStatement.java:19:14
 (local $i i32)
 (local $count i32)
 (local $l i64)
 (local $count_1 i64)
 (local $a i32)
 (local $b i32)
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $forstatement.ForStatement.rtt)))
 (block
  ;; LOOP: for (int i = 0,int count = 0;(i < 100);(i = (i + 1))) {
  ;;@ forstatement/ForStatement.java:20:4
  (local.set $i (i32.const 0))
  (local.set $count (i32.const 0))
  (block $LOOP.BREAK
   (loop
    (br_if 1 (i32.eqz (i32.lt_s (local.get $i) (i32.const 100))))
    (block $LOOP.CONTINUE
     (block
      ;; (count = (count + 1));
      ;;@ forstatement/ForStatement.java:21:6
      (local.set $count (i32.add (local.get $count) (i32.const 1)))
     )
    )
    (local.set $i (i32.add (local.get $i) (i32.const 1)))
    (br 0)
    
   )
  )
  ;; LOOP: for (long l = 0,long count = 0;(l < 100);(l = (l + 1)),(l = (l + 1))) {
  ;;@ forstatement/ForStatement.java:24:4
  (local.set $l (i64.const 0))
  (local.set $count_1 (i64.const 0))
  (block $LOOP_1.BREAK
   (loop
    (br_if 1 (i32.eqz (i64.lt_s (local.get $l) (i64.const 100))))
    (block $LOOP_1.CONTINUE
     (block
      ;; (count = (count + 1));
      ;;@ forstatement/ForStatement.java:25:6
      (local.set $count_1 (i64.add (local.get $count_1) (i64.const 1)))
     )
    )
    (local.set $l (i64.add (local.get $l) (i64.const 1)))
    (local.set $l (i64.add (local.get $l) (i64.const 1)))
    (br 0)
    
   )
  )
  ;; boolean a = false;
  ;;@ forstatement/ForStatement.java:28:4
  (local.set $a (i32.const 0))
  ;; LOOP: for (;((a = (a | true)),a);) {
  ;;@ forstatement/ForStatement.java:29:4
  (block $LOOP_2.BREAK
   (loop
    (br_if 1 (i32.eqz (block (result i32)
     (local.set $a (i32.or (local.get $a) (i32.const 1)))
     (local.get $a)
    )))
    (block $LOOP_2.CONTINUE
     (block
     )
    )
    (br 0)
    
   )
  )
  ;; boolean b = false;
  ;;@ forstatement/ForStatement.java:31:4
  (local.set $b (i32.const 0))
  ;; LOOP: for (;((b = a),b);) {
  ;;@ forstatement/ForStatement.java:32:4
  (block $LOOP_3.BREAK
   (loop
    (br_if 1 (i32.eqz (block (result i32)
     (local.set $b (local.get $a))
     (local.get $b)
    )))
    (block $LOOP_3.CONTINUE
     (block
     )
    )
    (br 0)
    
   )
  )
  ;; LOOP: for (forstatement.ForStatement.returnsValue();true;forstatement.ForStatement.returnsValue()) {
  ;;@ forstatement/ForStatement.java:34:4
  (drop (call $m_returnsValue__int@forstatement.ForStatement ))
  (block $LOOP_4.BREAK
   (loop
    (block $LOOP_4.CONTINUE
     (block
     )
    )
    (drop (call $m_returnsValue__int@forstatement.ForStatement ))
    (br 0)
    
   )
  )
 )
)
(elem declare func $m_test__void@forstatement.ForStatement)

;;; int ForStatement.returnsValue()
(func $m_returnsValue__int@forstatement.ForStatement
 (result i32)
 ;;@ forstatement/ForStatement.java:37:21
 (block
  ;; return 1;
  ;;@ forstatement/ForStatement.java:38:4
  (return (i32.const 1))
 )
)

;;; void ForStatement.$clinit()
(func $$clinit__void@forstatement.ForStatement
 ;;@ forstatement/ForStatement.java:18:13
 (block
  ;; if (forstatement.ForStatement.$initialized) return;
  ;;@ forstatement/ForStatement.java:18:13
  (if (global.get $f_$initialized__forstatement_ForStatement)
   (then
    ;; return;
    ;;@ forstatement/ForStatement.java:18:13
    (return )
   )
  )
  ;; (forstatement.ForStatement.$initialized = true);
  ;;@ forstatement/ForStatement.java:18:13
  (global.set $f_$initialized__forstatement_ForStatement (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> ForStatement.getClass()
(func $m_getClass__java_lang_Class@forstatement.ForStatement
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $forstatement.ForStatement.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForstatement.ForStatement();
  (return (call $function.no.side.effects.__$java.lang.Class (ref.func $$getForstatement.ForStatement__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@forstatement.ForStatement)

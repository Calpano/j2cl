;;; Code for forstatement.ForStatement

;;; CLASS  ForStatement

(type $forstatement.ForStatement (struct
))

;;; ForStatement()
(func $<init><>:void@forstatement.ForStatement
 (param $this (ref null $forstatement.ForStatement))
 (result (ref null $forstatement.ForStatement))
 (block $return.label
  (block
   ;; Object.this.Object.<init>();
   
  )
 )
 (local.get $this)
)

;;; void ForStatement.test()
(func $test<>:void@forstatement.ForStatement
 (param $this (ref null $java.lang.Object))
 (local $i i32)
 (local $count i32)
 (local $l i64)
 (local $count_1 i64)
 (local $a i32)
 (local $b i32)
 (block $return.label
  (block
   ;; LOOP: for (int i = 0,int count = 0;(i < 100);(i = (i + 1))) {
   
   
   (local.set $i (i32.const 0))
   (local.set $count (i32.const 0))
   (block $LOOP.BREAK
    (loop
     (br_if 1 (i32.eqz (i32.lt_s (local.get $i) (i32.const 100))))
     (block $LOOP.CONTINUE
      (block
       ;; (count = (count + 1));
       (local.set $count (i32.add (local.get $count) (i32.const 1)))
      )
     )
     (local.set $i (i32.add (local.get $i) (i32.const 1)))
     (br 0)
     
    )
   )
   ;; LOOP: for (long l = 0,long count = 0;(l < 100);(l = (l + 1)),(l = (l + 1))) {
   
   
   (local.set $l (i64.const 0))
   (local.set $count_1 (i64.const 0))
   (block $LOOP_1.BREAK
    (loop
     (br_if 1 (i32.eqz (i64.lt_s (local.get $l) (i64.const 0))))
     (block $LOOP_1.CONTINUE
      (block
       ;; (count = (count + 1));
       (local.set $count_1 (i64.add (local.get $count_1) (i64.const 1)))
      )
     )
     (local.set $l (i64.add (local.get $l) (i64.const 1)))
     (local.set $l (i64.add (local.get $l) (i64.const 1)))
     (br 0)
     
    )
   )
   ;; boolean a = false;
   
   (local.set $a (i32.const 0))
   ;; LOOP: for (;((a = (a | true)),a);) {
   
   (block $LOOP_2.BREAK
    (loop
     (br_if 1 (i32.eqz (block (result i32)
      (local.set $a (i32.or (local.get $a) (i32.const 1)))
      (local.get $a)
     )))
     (block $LOOP_2.CONTINUE
      (block
      )
     )
     (br 0)
     
    )
   )
   ;; boolean b = false;
   
   (local.set $b (i32.const 0))
   ;; LOOP: for (;((b = a),b);) {
   
   (block $LOOP_3.BREAK
    (loop
     (br_if 1 (i32.eqz (block (result i32)
      (local.set $b (local.get $a))
      (local.get $b)
     )))
     (block $LOOP_3.CONTINUE
      (block
      )
     )
     (br 0)
     
    )
   )
  )
 )
)


;;; Code for jsoptional.Main [vtable]
(global $jsoptional.Main.vtable (mut (ref null $jsoptional.Main.vtable)) (ref.null $jsoptional.Main.vtable))

;;; Code for jsoptional.Main.AFunction [vtable]
(global $jsoptional.Main.AFunction.vtable (mut (ref null $jsoptional.Main.AFunction.vtable)) (ref.null $jsoptional.Main.AFunction.vtable))

;;; Code for jsoptional.Main.TemplatedSubtype [vtable]
(global $jsoptional.Main.TemplatedSubtype.vtable (mut (ref null $jsoptional.Main.TemplatedSubtype.vtable)) (ref.null $jsoptional.Main.TemplatedSubtype.vtable))

;;; Code for jsoptional.Main.SpecializedSubtype [vtable]
(global $jsoptional.Main.SpecializedSubtype.vtable (mut (ref null $jsoptional.Main.SpecializedSubtype.vtable)) (ref.null $jsoptional.Main.SpecializedSubtype.vtable))

;;; Code for jsoptional.Main.NonJsTypeSubtype [vtable]
(global $jsoptional.Main.NonJsTypeSubtype.vtable (mut (ref null $jsoptional.Main.NonJsTypeSubtype.vtable)) (ref.null $jsoptional.Main.NonJsTypeSubtype.vtable))

;;; Code for jsoptional.Main.$LambdaImplementor$1 [vtable]
(global $jsoptional.Main.$LambdaImplementor$1.vtable (mut (ref null $jsoptional.Main.$LambdaImplementor$1.vtable)) (ref.null $jsoptional.Main.$LambdaImplementor$1.vtable))

;;; Code for jsoptional.Main [static fields]
(global $f_$initialized__jsoptional_Main (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.Function [static fields]
(global $f_$initialized__jsoptional_Main_Function (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.AFunction [static fields]
(global $f_$initialized__jsoptional_Main_AFunction (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.I [static fields]
(global $f_$initialized__jsoptional_Main_I (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.TemplatedSubtype [static fields]
(global $f_$initialized__jsoptional_Main_TemplatedSubtype (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.SpecializedSubtype [static fields]
(global $f_$initialized__jsoptional_Main_SpecializedSubtype (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.NonJsTypeSubtype [static fields]
(global $f_$initialized__jsoptional_Main_NonJsTypeSubtype (mut i32) (i32.const 0))

;;; Code for jsoptional.Main.$LambdaImplementor$1 [static fields]
(global $f_$initialized__jsoptional_Main_$LambdaImplementor$1 (mut i32) (i32.const 0))

;;; Code for jsoptional.Main [CLASS]
(type $jsoptional.Main (struct
 (field $vtable (ref $jsoptional.Main.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_f__jsoptional_Main (mut (ref null $java.lang.Object))))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_method1__int__java_lang_Double__java_lang_Integer__void (mut (ref $function.$int__$java.lang.Double__$java.lang.Integer__$void)))
 (field $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void (mut (ref $function.$java.lang.String__$java.lang.Double__$javaemul.internal.WasmArray.OfObject__$void)))
 (field $m_testFunction__jsoptional_Main_Function__void (mut (ref $function.$java.lang.Object__$void)))
 (field $m_testOptionalFunction__jsoptional_Main_Function__void (mut (ref $function.$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; void Main.method1(int i1, Double d, Integer i)
(func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main
 (type $function.$int__$java.lang.Double__$java.lang.Integer__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $i1 i32)
 (param $d (ref null $java.lang.Double))
 (param $i (ref null $java.lang.Integer))
 ;;@ jsoptional/Main.java:26:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.rtt)))
 (block
 )
)
(elem declare func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main)

;;; void Main.method2(String s1, Double d, Boolean... i)
(func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main
 (type $function.$java.lang.String__$java.lang.Double__$javaemul.internal.WasmArray.OfObject__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $s1 (ref null $java.lang.String))
 (param $d (ref null $java.lang.Double))
 (param $i (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ jsoptional/Main.java:29:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.rtt)))
 (block
 )
)
(elem declare func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main)

;;; Main(String a)
(func $m_<init>__java_lang_String@jsoptional.Main
 (param $this (ref null $jsoptional.Main))
 (param $a (ref null $java.lang.String))
 (result (ref null $jsoptional.Main))
 ;;@ jsoptional/Main.java:39:9
 (block
  ;; jsoptional.Main.$clinit();
  ;;@ jsoptional/Main.java:39:36
  (call $$clinit__void@jsoptional.Main )
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:39:36
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; Main.this.$init();
  ;;@ jsoptional/Main.java:39:36
  (call $$init__void_$p_jsoptional_Main@jsoptional.Main (local.get $this))
  ;; return Main.this;
  ;;@ jsoptional/Main.java:39:9
  (return (local.get $this))
 )
)

;;; void Main.testFunction(Function f)
(func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:48:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.rtt)))
 (block
 )
)
(elem declare func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main)

;;; void Main.testOptionalFunction(Function f)
(func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main
 (type $function.$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:51:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.rtt)))
 (block
 )
)
(elem declare func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main)

;;; void Main.$init()
(func $$init__void_$p_jsoptional_Main@jsoptional.Main
 (param $this (ref null $jsoptional.Main))
 ;;@ jsoptional/Main.java:24:13
 (block
  ;; (Main.this.f = new $LambdaImplementor$1.<init>());
  ;;@ jsoptional/Main.java:36:2
  (struct.set $jsoptional.Main $f_f__jsoptional_Main(local.get $this) (call $m_<init>__@jsoptional.Main.$LambdaImplementor$1 (struct.new_with_rtt $jsoptional.Main.$LambdaImplementor$1 (ref.as_non_null (global.get $jsoptional.Main.$LambdaImplementor$1.vtable)) (ref.as_non_null (global.get $jsoptional.Main.$LambdaImplementor$1.itable)) (i32.const 0) (global.get $jsoptional.Main.$LambdaImplementor$1.rtt))))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@jsoptional.Main
 ;;@ jsoptional/Main.java:24:13
 (block
  ;; if (jsoptional.Main.$initialized) return;
  ;;@ jsoptional/Main.java:24:13
  (if (global.get $f_$initialized__jsoptional_Main)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:24:13
    (return )
   )
  )
  ;; (jsoptional.Main.$initialized = true);
  ;;@ jsoptional/Main.java:24:13
  (global.set $f_$initialized__jsoptional_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:24:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main();
  (return (call $$getJsoptional.Main__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main)

;;; Code for jsoptional.Main.Function [INTERFACE]
(type $jsoptional.Main.Function.vtable (struct
 (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.String__$javaemul.internal.WasmArray.OfObject__$java.lang.Object)))
))

;;; void Function.$clinit()
(func $$clinit__void@jsoptional.Main.Function
 ;;@ jsoptional/Main.java:32:12
 (block
  ;; if (jsoptional.Main.Function.$initialized) return;
  ;;@ jsoptional/Main.java:32:12
  (if (global.get $f_$initialized__jsoptional_Main_Function)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:32:12
    (return )
   )
  )
  ;; (jsoptional.Main.Function.$initialized = true);
  ;;@ jsoptional/Main.java:32:12
  (global.set $f_$initialized__jsoptional_Main_Function (i32.const 1))
 )
)

;;; Class<?> Function.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.Function
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.Function();
  (return (call $$getJsoptional.Main.Function__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.Function)

;;; Code for jsoptional.Main.AFunction [CLASS]
(type $jsoptional.Main.AFunction (struct
 (field $vtable (ref $jsoptional.Main.AFunction.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.AFunction.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.String__$javaemul.internal.WasmArray.OfObject__$java.lang.Object))))
 (extends $java.lang.Object.vtable)
)

;;; AFunction()
(func $m_<init>__@jsoptional.Main.AFunction
 (param $this (ref null $jsoptional.Main.AFunction))
 (result (ref null $jsoptional.Main.AFunction))
 ;;@ jsoptional/Main.java:41:21
 (block
  ;; jsoptional.Main.AFunction.$clinit();
  ;;@ jsoptional/Main.java:41:21
  (call $$clinit__void@jsoptional.Main.AFunction )
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:41:21
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return AFunction.this;
  ;;@ jsoptional/Main.java:41:21
  (return (local.get $this))
 )
)

;;; Object AFunction.f1(String i, Object... args)
(func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction
 (type $function.$java.lang.String__$javaemul.internal.WasmArray.OfObject__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $i (ref null $java.lang.String))
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 (result (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:43:18
 (local $this (ref null $jsoptional.Main.AFunction))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.AFunction.rtt)))
 (block
  ;; return ((Object) args.elements[0]);
  ;;@ jsoptional/Main.java:44:6
  (return (ref.cast (array.get $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject(local.get $args)) (i32.const 0)) (global.get $java.lang.Object.rtt)))
 )
)
(elem declare func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)

;;; void AFunction.$clinit()
(func $$clinit__void@jsoptional.Main.AFunction
 ;;@ jsoptional/Main.java:41:21
 (block
  ;; if (jsoptional.Main.AFunction.$initialized) return;
  ;;@ jsoptional/Main.java:41:21
  (if (global.get $f_$initialized__jsoptional_Main_AFunction)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:41:21
    (return )
   )
  )
  ;; (jsoptional.Main.AFunction.$initialized = true);
  ;;@ jsoptional/Main.java:41:21
  (global.set $f_$initialized__jsoptional_Main_AFunction (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:41:21
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> AFunction.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.AFunction
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.AFunction))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.AFunction.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.AFunction();
  (return (call $$getJsoptional.Main.AFunction__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.AFunction)

;;; Code for jsoptional.Main.I [INTERFACE]
(type $jsoptional.Main.I.vtable (struct
 (field $m_m__java_lang_Object__java_lang_Object__void (mut (ref $function.$java.lang.Object__$java.lang.Object__$void)))
))

;;; void I.$clinit()
(func $$clinit__void@jsoptional.Main.I
 ;;@ jsoptional/Main.java:54:12
 (block
  ;; if (jsoptional.Main.I.$initialized) return;
  ;;@ jsoptional/Main.java:54:12
  (if (global.get $f_$initialized__jsoptional_Main_I)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:54:12
    (return )
   )
  )
  ;; (jsoptional.Main.I.$initialized = true);
  ;;@ jsoptional/Main.java:54:12
  (global.set $f_$initialized__jsoptional_Main_I (i32.const 1))
 )
)

;;; Class<?> I.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.I
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.I();
  (return (call $$getJsoptional.Main.I__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.I)

;;; Code for jsoptional.Main.TemplatedSubtype [CLASS]
(type $jsoptional.Main.TemplatedSubtype (struct
 (field $vtable (ref $jsoptional.Main.TemplatedSubtype.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.TemplatedSubtype.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m__java_lang_String__java_lang_Object__void (mut (ref $function.$java.lang.String__$java.lang.Object__$void)))
 (field $m_m__java_lang_Object__java_lang_Object__void (mut (ref $function.$java.lang.Object__$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; TemplatedSubtype()
(func $m_<init>__@jsoptional.Main.TemplatedSubtype
 (param $this (ref null $jsoptional.Main.TemplatedSubtype))
 (result (ref null $jsoptional.Main.TemplatedSubtype))
 ;;@ jsoptional/Main.java:59:15
 (block
  ;; jsoptional.Main.TemplatedSubtype.$clinit();
  ;;@ jsoptional/Main.java:59:15
  (call $$clinit__void@jsoptional.Main.TemplatedSubtype )
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:59:15
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return TemplatedSubtype.this;
  ;;@ jsoptional/Main.java:59:15
  (return (local.get $this))
 )
)

;;; void TemplatedSubtype.m(T t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype
 (type $function.$java.lang.String__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:61:16
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.TemplatedSubtype.rtt)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)

;;; void TemplatedSubtype.m(Object arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype
 (type $function.$java.lang.Object__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:59:15
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.TemplatedSubtype.rtt)))
 (block
  ;; TemplatedSubtype.this.m(((T) arg0),arg1);
  ;;@ jsoptional/Main.java:59:15
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(local.get $arg1)(struct.get $jsoptional.Main.TemplatedSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.TemplatedSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)

;;; void TemplatedSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.TemplatedSubtype
 ;;@ jsoptional/Main.java:59:15
 (block
  ;; if (jsoptional.Main.TemplatedSubtype.$initialized) return;
  ;;@ jsoptional/Main.java:59:15
  (if (global.get $f_$initialized__jsoptional_Main_TemplatedSubtype)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:59:15
    (return )
   )
  )
  ;; (jsoptional.Main.TemplatedSubtype.$initialized = true);
  ;;@ jsoptional/Main.java:59:15
  (global.set $f_$initialized__jsoptional_Main_TemplatedSubtype (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:59:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> TemplatedSubtype.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.TemplatedSubtype
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.TemplatedSubtype.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.TemplatedSubtype();
  (return (call $$getJsoptional.Main.TemplatedSubtype__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.TemplatedSubtype)

;;; Code for jsoptional.Main.SpecializedSubtype [CLASS]
(type $jsoptional.Main.SpecializedSubtype (struct
 (field $vtable (ref $jsoptional.Main.SpecializedSubtype.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $$outer_this__jsoptional_Main_SpecializedSubtype (mut (ref null $jsoptional.Main))))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.SpecializedSubtype.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m__java_lang_String__java_lang_Object__void (mut (ref $function.$java.lang.String__$java.lang.Object__$void)))
 (field $m_m__java_lang_Object__java_lang_Object__void (mut (ref $function.$java.lang.Object__$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; SpecializedSubtype(Main $outer_this, Object a)
(func $m_<init>__jsoptional_Main__java_lang_Object@jsoptional.Main.SpecializedSubtype
 (param $this (ref null $jsoptional.Main.SpecializedSubtype))
 (param $$outer_this (ref null $jsoptional.Main))
 (param $a (ref null $java.lang.Object))
 (result (ref null $jsoptional.Main.SpecializedSubtype))
 ;;@ jsoptional/Main.java:68:11
 (block
  ;; jsoptional.Main.SpecializedSubtype.$clinit();
  ;;@ jsoptional/Main.java:68:52
  (call $$clinit__void@jsoptional.Main.SpecializedSubtype )
  ;; (SpecializedSubtype.this.this = $outer_this);
  ;;@ jsoptional/Main.java:68:11
  (struct.set $jsoptional.Main.SpecializedSubtype $$outer_this__jsoptional_Main_SpecializedSubtype(local.get $this) (local.get $$outer_this))
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:68:52
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return SpecializedSubtype.this;
  ;;@ jsoptional/Main.java:68:11
  (return (local.get $this))
 )
)

;;; void SpecializedSubtype.m(String t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype
 (type $function.$java.lang.String__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:71:16
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.SpecializedSubtype.rtt)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)

;;; void SpecializedSubtype.m(Object arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype
 (type $function.$java.lang.Object__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:66:8
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.SpecializedSubtype.rtt)))
 (block
  ;; SpecializedSubtype.this.m(((String) arg0),arg1);
  ;;@ jsoptional/Main.java:66:8
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(local.get $arg1)(struct.get $jsoptional.Main.SpecializedSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.SpecializedSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)

;;; void SpecializedSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.SpecializedSubtype
 ;;@ jsoptional/Main.java:66:8
 (block
  ;; if (jsoptional.Main.SpecializedSubtype.$initialized) return;
  ;;@ jsoptional/Main.java:66:8
  (if (global.get $f_$initialized__jsoptional_Main_SpecializedSubtype)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:66:8
    (return )
   )
  )
  ;; (jsoptional.Main.SpecializedSubtype.$initialized = true);
  ;;@ jsoptional/Main.java:66:8
  (global.set $f_$initialized__jsoptional_Main_SpecializedSubtype (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:66:8
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> SpecializedSubtype.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.SpecializedSubtype
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.SpecializedSubtype.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.SpecializedSubtype();
  (return (call $$getJsoptional.Main.SpecializedSubtype__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.SpecializedSubtype)

;;; Code for jsoptional.Main.NonJsTypeSubtype [CLASS]
(type $jsoptional.Main.NonJsTypeSubtype (struct
 (field $vtable (ref $jsoptional.Main.NonJsTypeSubtype.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.NonJsTypeSubtype.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_m__java_lang_String__java_lang_Object__void (mut (ref $function.$java.lang.String__$java.lang.Object__$void)))
 (field $m_m__java_lang_Object__java_lang_Object__void (mut (ref $function.$java.lang.Object__$java.lang.Object__$void))))
 (extends $java.lang.Object.vtable)
)

;;; NonJsTypeSubtype()
(func $m_<init>__@jsoptional.Main.NonJsTypeSubtype
 (param $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (result (ref null $jsoptional.Main.NonJsTypeSubtype))
 ;;@ jsoptional/Main.java:74:15
 (block
  ;; jsoptional.Main.NonJsTypeSubtype.$clinit();
  ;;@ jsoptional/Main.java:74:15
  (call $$clinit__void@jsoptional.Main.NonJsTypeSubtype )
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:74:15
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return NonJsTypeSubtype.this;
  ;;@ jsoptional/Main.java:74:15
  (return (local.get $this))
 )
)

;;; void NonJsTypeSubtype.m(String t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype
 (type $function.$java.lang.String__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:76:16
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.NonJsTypeSubtype.rtt)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)

;;; void NonJsTypeSubtype.m(Object arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype
 (type $function.$java.lang.Object__$java.lang.Object__$void)
 (param $this.untyped (ref null $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:74:15
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.NonJsTypeSubtype.rtt)))
 (block
  ;; NonJsTypeSubtype.this.m(((String) arg0),arg1);
  ;;@ jsoptional/Main.java:74:15
  (call_ref (local.get $this)(ref.cast (local.get $arg0) (global.get $java.lang.String.rtt))(local.get $arg1)(struct.get $jsoptional.Main.NonJsTypeSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.NonJsTypeSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)

;;; void NonJsTypeSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.NonJsTypeSubtype
 ;;@ jsoptional/Main.java:74:15
 (block
  ;; if (jsoptional.Main.NonJsTypeSubtype.$initialized) return;
  ;;@ jsoptional/Main.java:74:15
  (if (global.get $f_$initialized__jsoptional_Main_NonJsTypeSubtype)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:74:15
    (return )
   )
  )
  ;; (jsoptional.Main.NonJsTypeSubtype.$initialized = true);
  ;;@ jsoptional/Main.java:74:15
  (global.set $f_$initialized__jsoptional_Main_NonJsTypeSubtype (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:74:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> NonJsTypeSubtype.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.NonJsTypeSubtype
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.NonJsTypeSubtype.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.NonJsTypeSubtype();
  (return (call $$getJsoptional.Main.NonJsTypeSubtype__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.NonJsTypeSubtype)

;;; Code for jsoptional.Main.$LambdaImplementor$1 [CLASS]
(type $jsoptional.Main.$LambdaImplementor$1 (struct
 (field $vtable (ref $jsoptional.Main.$LambdaImplementor$1.vtable)) (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32)))
 (extends $java.lang.Object)
)
(type $jsoptional.Main.$LambdaImplementor$1.vtable (struct
 
 (field $m_equals__java_lang_Object__boolean (mut (ref $function.$java.lang.Object__$boolean)))
 (field $m_hashCode__int (mut (ref $function.__$int)))
 (field $m_toString__java_lang_String (mut (ref $function.__$java.lang.String)))
 (field $m_getClass__java_lang_Class (mut (ref $function.__$java.lang.Class)))
 (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (mut (ref $function.$java.lang.String__$javaemul.internal.WasmArray.OfObject__$java.lang.Object))))
 (extends $java.lang.Object.vtable)
)

;;; $LambdaImplementor$1()
(func $m_<init>__@jsoptional.Main.$LambdaImplementor$1
 (param $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 (result (ref null $jsoptional.Main.$LambdaImplementor$1))
 ;;@ jsoptional/Main.java:36:15
 (block
  ;; jsoptional.Main.$LambdaImplementor$1.$clinit();
  ;;@ jsoptional/Main.java:36:15
  (call $$clinit__void@jsoptional.Main.$LambdaImplementor$1 )
  ;; Object.this.Object.<init>();
  ;;@ jsoptional/Main.java:36:15
  (drop (call $m_<init>__@java.lang.Object (local.get $this)))
  ;; return $LambdaImplementor$1.this;
  ;;@ jsoptional/Main.java:36:15
  (return (local.get $this))
 )
)

;;; Object $LambdaImplementor$1.f1(String s, Object... varargs)
(func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1
 (type $function.$java.lang.String__$javaemul.internal.WasmArray.OfObject__$java.lang.Object)
 (param $this.untyped (ref null $java.lang.Object))
 (param $s (ref null $java.lang.String))
 (param $varargs (ref null $javaemul.internal.WasmArray.OfObject))
 (result (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:36:15
 (local $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.$LambdaImplementor$1.rtt)))
 (block
  ;; return s;
  ;;@ jsoptional/Main.java:36:31
  (return (local.get $s))
 )
)
(elem declare func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)

;;; void $LambdaImplementor$1.$clinit()
(func $$clinit__void@jsoptional.Main.$LambdaImplementor$1
 ;;@ jsoptional/Main.java:36:15
 (block
  ;; if (jsoptional.Main.$LambdaImplementor$1.$initialized) return;
  ;;@ jsoptional/Main.java:36:15
  (if (global.get $f_$initialized__jsoptional_Main_$LambdaImplementor$1)
   (then
    ;; return;
    ;;@ jsoptional/Main.java:36:15
    (return )
   )
  )
  ;; (jsoptional.Main.$LambdaImplementor$1.$initialized = true);
  ;;@ jsoptional/Main.java:36:15
  (global.set $f_$initialized__jsoptional_Main_$LambdaImplementor$1 (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsoptional/Main.java:36:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> $LambdaImplementor$1.getClass()
(func $m_getClass__java_lang_Class@jsoptional.Main.$LambdaImplementor$1
 (type $function.__$java.lang.Class)
 (param $this.untyped (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 (local.set $this (ref.cast (local.get $this.untyped) (global.get $jsoptional.Main.$LambdaImplementor$1.rtt)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsoptional.Main.$LambdaImplementor$1();
  (return (call $$getJsoptional.Main.$LambdaImplementor$1__java_lang_Class@javaemul.internal.ClassLiteralPool ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsoptional.Main.$LambdaImplementor$1)

 ;;; Code for jsoptional.Main [vtable.init]
 (global.set $jsoptional.Main.vtable
  (struct.new_with_rtt $jsoptional.Main.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main)
   (ref.func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main)
   (ref.func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main)
   (ref.func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main)
   (ref.func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main)
   (rtt.canon $jsoptional.Main.vtable)
  )
 )

 ;;; Code for jsoptional.Main [itable.init]
 (global.set $jsoptional.Main.itable (array.new_default_with_rtt $itable (i32.const 0) (rtt.canon $itable)))

 ;;; Code for jsoptional.Main.AFunction [vtable.init]
 (global.set $jsoptional.Main.AFunction.vtable
  (struct.new_with_rtt $jsoptional.Main.AFunction.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main.AFunction)
   (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)
   (rtt.canon $jsoptional.Main.AFunction.vtable)
  )
 )

 ;;; Code for jsoptional.Main.AFunction [itable.init]
 (global.set $jsoptional.Main.AFunction.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsoptional.Main.AFunction.itable) (i32.const 0)
 (struct.new_with_rtt $jsoptional.Main.Function.vtable
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)
  (rtt.canon $jsoptional.Main.Function.vtable)
 ))

 ;;; Code for jsoptional.Main.TemplatedSubtype [vtable.init]
 (global.set $jsoptional.Main.TemplatedSubtype.vtable
  (struct.new_with_rtt $jsoptional.Main.TemplatedSubtype.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main.TemplatedSubtype)
   (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
   (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
   (rtt.canon $jsoptional.Main.TemplatedSubtype.vtable)
  )
 )

 ;;; Code for jsoptional.Main.TemplatedSubtype [itable.init]
 (global.set $jsoptional.Main.TemplatedSubtype.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsoptional.Main.TemplatedSubtype.itable) (i32.const 0)
 (struct.new_with_rtt $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
  (rtt.canon $jsoptional.Main.I.vtable)
 ))

 ;;; Code for jsoptional.Main.SpecializedSubtype [vtable.init]
 (global.set $jsoptional.Main.SpecializedSubtype.vtable
  (struct.new_with_rtt $jsoptional.Main.SpecializedSubtype.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main.SpecializedSubtype)
   (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
   (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
   (rtt.canon $jsoptional.Main.SpecializedSubtype.vtable)
  )
 )

 ;;; Code for jsoptional.Main.SpecializedSubtype [itable.init]
 (global.set $jsoptional.Main.SpecializedSubtype.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsoptional.Main.SpecializedSubtype.itable) (i32.const 0)
 (struct.new_with_rtt $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
  (rtt.canon $jsoptional.Main.I.vtable)
 ))

 ;;; Code for jsoptional.Main.NonJsTypeSubtype [vtable.init]
 (global.set $jsoptional.Main.NonJsTypeSubtype.vtable
  (struct.new_with_rtt $jsoptional.Main.NonJsTypeSubtype.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main.NonJsTypeSubtype)
   (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
   (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
   (rtt.canon $jsoptional.Main.NonJsTypeSubtype.vtable)
  )
 )

 ;;; Code for jsoptional.Main.NonJsTypeSubtype [itable.init]
 (global.set $jsoptional.Main.NonJsTypeSubtype.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsoptional.Main.NonJsTypeSubtype.itable) (i32.const 0)
 (struct.new_with_rtt $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
  (rtt.canon $jsoptional.Main.I.vtable)
 ))

 ;;; Code for jsoptional.Main.$LambdaImplementor$1 [vtable.init]
 (global.set $jsoptional.Main.$LambdaImplementor$1.vtable
  (struct.new_with_rtt $jsoptional.Main.$LambdaImplementor$1.vtable
   (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
   (ref.func $m_hashCode__int@java.lang.Object)
   (ref.func $m_toString__java_lang_String@java.lang.Object)
   (ref.func $m_getClass__java_lang_Class@jsoptional.Main.$LambdaImplementor$1)
   (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)
   (rtt.canon $jsoptional.Main.$LambdaImplementor$1.vtable)
  )
 )

 ;;; Code for jsoptional.Main.$LambdaImplementor$1 [itable.init]
 (global.set $jsoptional.Main.$LambdaImplementor$1.itable (array.new_default_with_rtt $itable (i32.const 1) (rtt.canon $itable)))
 (array.set $itable (global.get $jsoptional.Main.$LambdaImplementor$1.itable) (i32.const 0)
 (struct.new_with_rtt $jsoptional.Main.Function.vtable
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)
  (rtt.canon $jsoptional.Main.Function.vtable)
 ))
